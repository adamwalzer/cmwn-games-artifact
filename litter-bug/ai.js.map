{"version":3,"sources":["webpack:///litter-bug/ai.js","webpack:///webpack/bootstrap 5033ee76af4f5955aa4d","webpack:///../~/classnames/index.js","webpack:///./shared/components/randomizer/0.1.js","webpack:///./shared/components/media_collection/0.1.js","webpack:///./shared/components/score/0.1.js","webpack:///./shared/components/timer/0.1.js","webpack:///./litter-bug/components/catch_game_screen_component.js","webpack:///./shared/components/cannon/0.2.js","webpack:///./shared/components/carousel/0.1.js","webpack:///./shared/components/catchable/0.1.js","webpack:///./shared/components/reveal_prompt/0.1.js","webpack:///../~/shortid/lib/alphabet.js","webpack:///../~/lodash/lodash.js","webpack:///./litter-bug/components/catch_game_level_one_screen.js","webpack:///./litter-bug/components/catch_game_level_three_screen.js","webpack:///./litter-bug/components/catch_game_level_two_screen.js","webpack:///./litter-bug/components/clean_up_game_lvl1_screen.js","webpack:///./litter-bug/components/clean_up_game_lvl2_screen.js","webpack:///./litter-bug/components/clean_up_game_lvl3_screen.js","webpack:///./litter-bug/components/commit_screen.js","webpack:///./litter-bug/components/flip_screen.js","webpack:///./litter-bug/components/good_for_you_screen.js","webpack:///./litter-bug/components/ground_screen.js","webpack:///./litter-bug/components/room_screen.js","webpack:///./litter-bug/components/school_screen.js","webpack:///./litter-bug/components/sing_about_it_screen.js","webpack:///./litter-bug/components/take_pledge_screen.js","webpack:///./litter-bug/components/title_screen.js","webpack:///./litter-bug/components/video_screen.js","webpack:///./litter-bug/config.game.js","webpack:///./litter-bug/index.js","webpack:///./shared/components/catch/0.1.js","webpack:///./shared/components/catcher/0.1.js","webpack:///./shared/components/draggable/0.1.js","webpack:///./shared/components/dropper/0.1.js","webpack:///./shared/components/ios_splash_screen/0.1.js","webpack:///./shared/components/loader/0.1.js","webpack:///./shared/components/quit_screen/0.1.js","webpack:///./shared/components/reveal/0.1.js","webpack:///./shared/components/selectable/0.1.js","webpack:///./shared/js/prod-variables.js","webpack:///../~/shortid/index.js","webpack:///../~/shortid/lib/decode.js","webpack:///../~/shortid/lib/encode.js","webpack:///../~/shortid/lib/index.js","webpack:///../~/shortid/lib/is-valid.js","webpack:///../~/shortid/lib/random/random-byte-browser.js","webpack:///../~/shortid/lib/random/random-from-seed.js","webpack:///../~/shortid/lib/util/cluster-worker-id-browser.js","webpack:///../~/webpack/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","hasOwn","join","hasOwnProperty","undefined","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","source","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_classnames","_classnames2","Randomizer","_skoash$Component","this","getAll","_","shuffle","bin","amount","remain","state","concat","setState","slice","getClassNames","renderBin","map","li","ref","React","createElement","type","data-ref","render","className","skoash","Component","defaultProps","defaults","shouldComponentUpdate","MediaCollection","play","refs","onPlay","componentWillReceiveProps","identity","Score","_this","score","checkComplete","bind","ready","requireForComplete","max","correct","complete","bootstrap","startingScore","_this2","setTimeout","resetOnComplete","setScore","incorrect","completeDelay","checkScore","multipleCompletes","incomplete","up","increment","isFinite","updateScore","down","downIncrement","_this3","updateGameState","path","dataTarget","data","onUpdateScore","_this4","upIncrement","data-max","data-score","leadingContent","children","Timer","time","stamp","Date","now","started","paused","timeout","stop","window","requestAnimationFrame","incompleteRefs","restart","start","pause","resume","getTime","countDown","opts","onOpenReveal","onCloseReveal","onScoreComplete","onTimerComplete","onAddClassName","onCorrectCatch","onIncorrectCatch","onMove","prevMessage","close","Screen","parseInt","timeLeft","minutesLeft","secondsLeft","Math","floor","playing","bucketRef","addClassName","removeClassName","e","rect","styles","catcher","targetTouches","getBoundingClientRect","offsetY","pageY","top","min","j","rows","_15","message","style","_3","vos","sfx","level","_5","onComplete","_7","_9","leftBound","rightBound","on","prepClasses","prepTimeout","_11","completeOnStart","_13","canCatch","moveBuckets","bucket","catchableRefs","onCorrect","onIncorrect","assets","Audio","src","_17","openOnStart","openTarget","openReveal","closeReveal","onClose","onOpen","list","revealList","_2","_4","_6","_8","_10","_12","_14","_16","BALL","Cannon","fire","reload","showNum","next","reverseReload","pop","shift","enabled","onFire","onReload","FIRE","RELOAD","getClass","renderAmmo","onClick","_shortid","_shortid2","Carousel","_Selectable","nextProps","selected","select","selectHelper","targetIndex","onSelect","renderList","onTransitionEnd","data-message","data-key","clickable","selectFunction","Catchable","reset","trigger","DOMNode","ReactDOM","findDOMNode","markCaught","onCaught","disabled","CAUGHT","reCatchable","isCorrect","noop","_defineProperty","_lodash","_lodash2","RevealPrompt","index","open","completeOnOpen","autoClose","_ClassNames","indexOf","_ClassNames2","shuffled","setCharacters","_alphabet_","alphabet","ORIGINAL","Error","unique","split","filter","item","ind","arr","lastIndexOf","characters","setSeed","seed","randomFromSeed","previousSeed","sourceArray","targetArray","r","nextValue","characterIndex","splice","getShuffled","lookup","alphabetShuffled","global","addMapEntry","pair","set","addSetEntry","add","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","isHostObject","toString","iteratorToArray","iterator","done","mapToArray","size","forEach","overArg","transform","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","match","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseConformsTo","baseCreate","proto","objectCreate","baseDelay","wait","FUNC_ERROR_TEXT","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","objectToString","baseGt","other","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","last","baseIsArrayBuffer","arrayBufferTag","baseIsDate","dateTag","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","mapTag","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIsRegExp","regexpTag","baseIsSet","setTag","baseIsTypedArray","isLength","typedArrayTags","baseIteratee","baseMatchesProperty","baseMatches","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseRest","otherArgs","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","root","Ctor","isBind","BIND_FLAG","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","reApos","thisBinding","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","boolTag","numberTag","errorTag","name","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getAllKeysIn","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","transforms","getWrapDetails","reWrapDetails","reSplitDetails","hasPath","hasFunc","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","insertWrapDetails","details","reWrapComment","spreadableSymbol","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","updateWrapDetails","wrapFlags","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","rand","some","after","before","curry","curryRight","debounce","options","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","propertyIsEnumerable","getLength","isBoolean","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","objectCtorString","isSafeInteger","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","isProto","baseKeys","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","deburrLetter","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","isRegExp","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","imports","importsKeys","importsValues","isEscaping","isEvaluating","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","unescapeHtmlChar","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","maxBy","mean","meanBy","minBy","sum","sumBy","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","Symbol","enumerate","isConcatSpreadable","ceil","nativeGetPrototype","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","nativeKeys","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","remaining","HOT_SPAN","HOT_COUNT","reference","reLeadingDot","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","isArrayBuffer","nodeIsArrayBuffer","isDate","nodeIsDate","isMap","nodeIsMap","nodeIsRegExp","isSet","nodeIsSet","nodeIsTypedArray","lt","lte","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeGlobal","freeSelf","freeExports","freeModule","freeProcess","process","nodeUtil","binding","_catch_game_screen_component2","MediaSequence","silentOnStart","_catch_game_screen_component","CONFIG","POINTS","points","LVL","TIMER","emitOnComplete","Image","startDelay","hidePrev","Video","config","version","dimensions","width","ratio","_config","_config2","_title_screen","_title_screen2","_catch_game_level_one_screen","_catch_game_level_one_screen2","_catch_game_level_two_screen","_catch_game_level_two_screen2","_catch_game_level_three_screen","_catch_game_level_three_screen2","_clean_up_game_lvl1_screen","_clean_up_game_lvl1_screen2","_clean_up_game_lvl2_screen","_clean_up_game_lvl2_screen2","_clean_up_game_lvl3_screen","_clean_up_game_lvl3_screen2","_room_screen","_room_screen2","_school_screen","_school_screen2","_ground_screen","_ground_screen2","_sing_about_it_screen","_sing_about_it_screen2","_video_screen","_video_screen2","_good_for_you_screen","_good_for_you_screen2","_take_pledge_screen","_take_pledge_screen2","_commit_screen","_commit_screen2","_flip_screen","_flip_screen2","LitterBug","Game","screens","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","menus","quit","loader","loop","passData","SUN","sun","Catch","onMouseMove","onResize","checkCollisions","componentDidMount","bucketNode","catchableNodes","catchables","val","attachMouseEvents","catchRef","addEventListener","mouseX","pageX","then","zoom","scale","edges","getEdges","bucketWidth","right","left","offsetParent","offsetWidth","bucketTop","bucketBottom","bottom","node","catchableRef","selectCatchable","catchableNode","catchable","audio","bucketRect","isColliding","catchRect","xCenter","yOffset","el","height","offsetHeight","offsetLeft","offsetTop","getStyle","bucketInBounds","renderBucket","renderCatchables","getClasses","isComplete","Catcher","_Catch","moveEvent","onReady","bucketNodes","a","v","k","bucketRefKey","bucketCorners","catchableCorners","x","y","util","doIntersect","playMedia","renderContentList","Draggable","startX","startY","endX","endY","mouseDown","mouseUp","touchStart","touchEnd","shouldDrag","markIncorrect","returnToStart","markCorrect","startEvent","cb","grabX","grabY","offsetX","firstX","firstY","dragging","return","dragRespond","attachTouchEvents","endEvent","dropRespond","detachMouseEvents","removeEventListener","detachTouchEvents","corners","setCorners","setZoom","WebkitTransform","_classNames","draggable","Dropper","_Draggable","items","itemCount","itemEndXs","direction","timeoutFunction","itemRef","_loop","refsTarget","getItemStyle","renderItems","onStart","nextDelay","Loader","QuitScreen","_skoash$Screen","okay","renderAssets","asset","Reveal","currentlyOpen","playAudio","silent","closeRespond","messages","media","voiceOver","dataRef","Selectable","selectClass","highlight","selectOnStart","correctAnswers","closest","getAttribute","answers","allowDeselect","selectRespond","chooseOne","completeListOnClick","Node","ENVIRONMENT","MEDIA","decode","substr","worker","encode","loopCounter","str","randomByte","pow","generate","seconds","REDUCE_TIME","previousSeconds","counter","clusterWorkerId","seedValue","workerId","newCharacters","isValid","isShortId","len","crypto","getRandomValues","dest","msCrypto","getNextValue","_seed_","webpackPolyfill","deprecate"],"mappings":"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AAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,YACAD,MAAAC,cAAA,Y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","file":"litter-bug/ai.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(40);\n\tmodule.exports = __webpack_require__(30);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar hasOwn = {}.hasOwnProperty;\n\t\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\t\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\t\n\t\t\t\tvar argType = typeof arg;\n\t\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn classes.join(' ');\n\t\t}\n\t\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (true) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn classNames;\n\t\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Randomizer = function (_skoash$Component) {\n\t  _inherits(Randomizer, _skoash$Component);\n\t\n\t  function Randomizer() {\n\t    _classCallCheck(this, Randomizer);\n\t\n\t    return _possibleConstructorReturn(this, (Randomizer.__proto__ || Object.getPrototypeOf(Randomizer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Randomizer, [{\n\t    key: 'getAll',\n\t    value: function getAll() {\n\t      return _.shuffle(this.props.bin);\n\t    }\n\t  }, {\n\t    key: 'get',\n\t    value: function get() {\n\t      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t\n\t      var bin = [];\n\t\n\t      if (this.props.remain) {\n\t        bin = this.state.bin;\n\t      }\n\t\n\t      while (bin.length < amount) {\n\t        bin = bin.concat(_.shuffle(this.props.bin));\n\t      }\n\t\n\t      if (this.props.remain) {\n\t        this.setState({ bin: bin });\n\t      }\n\t\n\t      return bin.slice(0, amount);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('randomizer', _get(Randomizer.prototype.__proto__ || Object.getPrototypeOf(Randomizer.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      var bin = this.props.bin || [];\n\t\n\t      return bin.map(function (li, key) {\n\t        var ref = li.ref || li.props['data-ref'] || key;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          'data-ref': ref,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'ul',\n\t        { className: this.getClassNames() },\n\t        this.renderBin()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Randomizer;\n\t}(skoash.Component);\n\t\n\tRandomizer.defaultProps = _.defaults({\n\t  bin: [],\n\t  remain: false,\n\t  shouldComponentUpdate: function shouldComponentUpdate() {\n\t    return false;\n\t  }\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Randomizer;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MediaCollection = function (_skoash$Component) {\n\t  _inherits(MediaCollection, _skoash$Component);\n\t\n\t  function MediaCollection() {\n\t    _classCallCheck(this, MediaCollection);\n\t\n\t    return _possibleConstructorReturn(this, (MediaCollection.__proto__ || Object.getPrototypeOf(MediaCollection)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(MediaCollection, [{\n\t    key: \"play\",\n\t    value: function play(ref) {\n\t      if (this.refs[ref]) this.refs[ref].play();\n\t\n\t      this.props.onPlay.call(this, ref);\n\t    }\n\t  }, {\n\t    key: \"componentWillReceiveProps\",\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(MediaCollection.prototype.__proto__ || Object.getPrototypeOf(MediaCollection.prototype), \"componentWillReceiveProps\", this).call(this, props);\n\t\n\t      if (props.play && props.play !== this.props.play) {\n\t        this.play(props.play);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return MediaCollection;\n\t}(skoash.Component);\n\t\n\tMediaCollection.defaultProps = _.defaults({\n\t  onPlay: _.identity\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = MediaCollection;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Score = function (_skoash$Component) {\n\t  _inherits(Score, _skoash$Component);\n\t\n\t  function Score() {\n\t    _classCallCheck(this, Score);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Score.__proto__ || Object.getPrototypeOf(Score)).call(this));\n\t\n\t    _this.state = {\n\t      score: 0\n\t    };\n\t\n\t    _this.checkComplete = _this.checkComplete.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Score, [{\n\t    key: 'checkComplete',\n\t    value: function checkComplete() {\n\t      if (!this.props.checkComplete || !this.state.ready || !this.requireForComplete) return;\n\t      if (!this.props.max) return;\n\t      if ((this.state.score >= this.props.max || this.props.correct >= this.props.max) && !this.state.complete) this.complete();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'bootstrap', this).call(this);\n\t\n\t      this.setState({\n\t        score: this.props.startingScore\n\t      });\n\t    }\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      var _this2 = this;\n\t\n\t      _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'complete', this).call(this);\n\t\n\t      setTimeout(function () {\n\t        if (_this2.props.resetOnComplete) {\n\t          _this2.setScore({\n\t            correct: 0,\n\t            incorrect: 0\n\t          });\n\t        }\n\t      }, this.props.completeDelay);\n\t    }\n\t  }, {\n\t    key: 'checkScore',\n\t    value: function checkScore(props) {\n\t      if (!props.max) return;\n\t      if (this.state.score >= props.max && (!this.state.complete || props.multipleCompletes)) {\n\t        this.complete();\n\t      } else if (this.state.complete && !props.complete) {\n\t        this.incomplete();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'up',\n\t    value: function up(increment) {\n\t      increment = _.isFinite(increment) ? increment : _.isFinite(this.props.increment) ? this.props.increment : 1;\n\t      if (!_.isFinite(increment)) throw 'increment must be finite';\n\t\n\t      this.updateScore(increment);\n\t    }\n\t  }, {\n\t    key: 'down',\n\t    value: function down(increment) {\n\t      increment = _.isFinite(increment) ? increment : _.isFinite(this.props.downIncrement) ? this.props.downIncrement : _.isFinite(this.props.increment) ? this.props.increment : 1;\n\t      if (!_.isFinite(increment)) throw 'increment must be finite';\n\t\n\t      this.updateScore(-1 * increment);\n\t    }\n\t  }, {\n\t    key: 'updateScore',\n\t    value: function updateScore(increment) {\n\t      var _this3 = this;\n\t\n\t      this.setState({\n\t        score: this.state.score + increment\n\t      }, function () {\n\t        _this3.updateGameState({\n\t          path: _this3.props.dataTarget,\n\t          data: {\n\t            score: _this3.state.score\n\t          }\n\t        });\n\t\n\t        _this3.checkScore(_this3.props);\n\t        _this3.props.onUpdateScore.call(_this3, _this3.state.score);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setScore',\n\t    value: function setScore(props) {\n\t      var _this4 = this;\n\t\n\t      var upIncrement, downIncrement, score;\n\t\n\t      if (_.isFinite(props)) {\n\t        score = props;\n\t      } else {\n\t        upIncrement = _.isFinite(props.increment) ? props.increment : 1;\n\t        downIncrement = _.isFinite(props.downIncrement) ? props.downIncrement : _.isFinite(props.increment) ? props.increment : 1;\n\t        score = upIncrement * props.correct - downIncrement * props.incorrect;\n\t      }\n\t\n\t      this.setState({\n\t        score: score\n\t      }, function () {\n\t        _this4.checkScore(props);\n\t        _this4.props.onUpdateScore.call(_this4, score);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.correct !== this.props.correct || props.incorrect !== this.props.incorrect) {\n\t        this.setScore(props);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('score', 'score-' + this.state.score, _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        _extends({}, this.props, { className: this.getClassNames(), 'data-max': this.props.max, 'data-score': this.state.score, score: this.state.score }),\n\t        this.props.leadingContent,\n\t        React.createElement(\n\t          'span',\n\t          null,\n\t          this.state.score\n\t        ),\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Score;\n\t}(skoash.Component);\n\t\n\tScore.defaultProps = _.defaults({\n\t  checkComplete: false,\n\t  startingScore: 0,\n\t  correct: 0,\n\t  incorrect: 0,\n\t  onUpdateScore: _.identity\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Score;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Timer = function (_skoash$Component) {\n\t  _inherits(Timer, _skoash$Component);\n\t\n\t  function Timer() {\n\t    _classCallCheck(this, Timer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Timer.__proto__ || Object.getPrototypeOf(Timer)).call(this));\n\t\n\t    _this.state = {\n\t      time: 0,\n\t      stamp: 0\n\t    };\n\t\n\t    _this.checkComplete = _this.checkComplete.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Timer, [{\n\t    key: 'checkComplete',\n\t    value: function checkComplete() {\n\t      var _this2 = this;\n\t\n\t      var time = Date.now();\n\t\n\t      if (!this.props.checkComplete) return;\n\t\n\t      if (!this.state.started || this.state.paused) return;\n\t\n\t      if (time >= this.state.stamp) {\n\t        this.setState({\n\t          stamp: time + 1000,\n\t          time: this.state.time + 1\n\t        }, function () {\n\t          if (_this2.state.time * 1000 >= _this2.props.timeout) {\n\t            _this2.complete();\n\t            _this2.stop();\n\t          } else {\n\t            window.requestAnimationFrame(_this2.checkComplete);\n\t          }\n\t        });\n\t      } else {\n\t        window.requestAnimationFrame(this.checkComplete);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'incompleteRefs',\n\t    value: function incompleteRefs() {\n\t      this.restart();\n\t    }\n\t  }, {\n\t    key: 'restart',\n\t    value: function restart() {\n\t      var _this3 = this;\n\t\n\t      if (!this.state.ready) return;\n\t      if (this.state.complete) this.incomplete();\n\t\n\t      this.setState({\n\t        time: 0,\n\t        stamp: 0\n\t      }, function () {\n\t        if (_this3.state.started) {\n\t          _this3.checkComplete();\n\t        } else {\n\t          _this3.start();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (!this.state.started) return;\n\t      this.setState({\n\t        started: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      if (!this.state.started) return;\n\t      this.setState({\n\t        paused: true\n\t      });\n\t    }\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      var _this4 = this;\n\t\n\t      if (!this.state.paused) return;\n\t      this.setState({\n\t        paused: false\n\t      }, function () {\n\t        if (_this4.state.started) {\n\t          _this4.checkComplete();\n\t        } else {\n\t          _this4.start();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Timer.prototype.__proto__ || Object.getPrototypeOf(Timer.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.restart && props.restart !== this.props.restart) {\n\t        this.restart();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('timer', _get(Timer.prototype.__proto__ || Object.getPrototypeOf(Timer.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var time = this.props.getTime.call(this);\n\t      return React.createElement(\n\t        'div',\n\t        _extends({}, this.props, { className: this.getClassNames(), time: time }),\n\t        this.props.leadingContent,\n\t        React.createElement(\n\t          'span',\n\t          null,\n\t          time\n\t        ),\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Timer;\n\t}(skoash.Component);\n\t\n\tTimer.defaultProps = _.defaults({\n\t  getTime: function getTime() {\n\t    return this.props.countDown ? this.props.timeout / 1000 - this.state.time : this.state.time;\n\t  },\n\t  leadingContent: '',\n\t  timeout: 60000,\n\t  countDown: false\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Timer;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t  var onOpenReveal, onCloseReveal, onScoreComplete, getTime, onTimerComplete, onAddClassName, onCorrectCatch, onIncorrectCatch, onMove, bin;\n\t\n\t  onOpenReveal = function onOpenReveal() {\n\t    this.updateGameState({\n\t      path: 'game',\n\t      data: {\n\t        stop: true,\n\t        start: false\n\t      }\n\t    });\n\t  };\n\t\n\t  onCloseReveal = function onCloseReveal(prevMessage) {\n\t    this.updateGameState({\n\t      path: 'game',\n\t      data: {\n\t        stop: false,\n\t        start: true\n\t      }\n\t    });\n\t    this.updateGameState({\n\t      path: 'reveal',\n\t      data: {\n\t        close: false\n\t      }\n\t    });\n\t    this.updateGameState({\n\t      path: 'openReveal',\n\t      data: null\n\t    });\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        correct: 0,\n\t        incorrect: 0\n\t      }\n\t    });\n\t\n\t    if (prevMessage === 'level-up') {\n\t      skoash.Screen.prototype.goto(parseInt(key, 10) + 1);\n\t    }\n\t  };\n\t\n\t  onScoreComplete = function onScoreComplete() {\n\t    this.updateGameState({\n\t      path: 'openReveal',\n\t      data: 'level-up'\n\t    });\n\t    this.updateGameState({\n\t      path: 'game',\n\t      data: {\n\t        complete: true\n\t      }\n\t    });\n\t  };\n\t\n\t  getTime = function getTime() {\n\t    var timeLeft, minutesLeft, secondsLeft;\n\t    timeLeft = this.props.timeout / 1000 - this.state.time;\n\t    minutesLeft = Math.floor(timeLeft / 60);\n\t    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n\t    secondsLeft = timeLeft % 60;\n\t    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n\t    return minutesLeft + ':' + secondsLeft;\n\t  };\n\t\n\t  onTimerComplete = function onTimerComplete() {\n\t    if (_.get(props, 'data.openReveal') === 'level-up') return;\n\t    this.updateGameState({\n\t      path: 'openReveal',\n\t      data: 'try-again'\n\t    });\n\t  };\n\t\n\t  onAddClassName = function onAddClassName(className) {\n\t    if (className === 'go') return;\n\t    this.updateGameState({\n\t      path: 'sfx',\n\t      data: {\n\t        playing: 'print'\n\t      }\n\t    });\n\t  };\n\t\n\t  onCorrectCatch = function onCorrectCatch(bucketRef) {\n\t    bucketRef.addClassName('correct');\n\t    setTimeout(function () {\n\t      bucketRef.removeClassName('correct');\n\t    }, 1000);\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        correct: _.get(props, 'data.score.correct', 0) + 1\n\t      }\n\t    });\n\t  };\n\t\n\t  onIncorrectCatch = function onIncorrectCatch(bucketRef) {\n\t    bucketRef.addClassName('incorrect');\n\t    setTimeout(function () {\n\t      bucketRef.removeClassName('incorrect');\n\t    }, 1000);\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        incorrect: _.get(props, 'data.score.incorrect', 0) + 1\n\t      }\n\t    });\n\t  };\n\t\n\t  onMove = function onMove(e) {\n\t    var rect, styles;\n\t\n\t    if (e.target !== this.refs.catcher) return;\n\t\n\t    if (e.targetTouches && e.targetTouches[0]) {\n\t      rect = e.target.getBoundingClientRect();\n\t      e = e.targetTouches[0];\n\t      e.offsetY = e.pageY - rect.top;\n\t    }\n\t\n\t    styles = this.state.styles;\n\t\n\t    styles[0] = {\n\t      top: Math.min(e.offsetY, 360)\n\t    };\n\t\n\t    this.setState({\n\t      styles: styles\n\t    });\n\t  };\n\t\n\t  bin = [];\n\t  for (var i = 0; i < opts.bin.length; i++) {\n\t    for (var j = 0; j < opts.rows; j++) {\n\t      bin.push(React.createElement(_15.default, {\n\t        className: opts.bin[i].className,\n\t        message: opts.bin[i].message,\n\t        style: {\n\t          top: 400 * (j + .4) / opts.rows\n\t        }\n\t      }));\n\t    }\n\t  }\n\t\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: opts.id\n\t    }),\n\t    React.createElement(_3.default, {\n\t      play: _.get(props, 'data.reveal.open'),\n\t      children: opts.vos\n\t    }),\n\t    React.createElement(_3.default, {\n\t      play: _.get(props, 'data.sfx.playing'),\n\t      children: opts.sfx\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'bottom' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'level' },\n\t        opts.level\n\t      ),\n\t      React.createElement(\n\t        _5.default,\n\t        {\n\t          className: 'mr-eco-score',\n\t          max: 100,\n\t          increment: 10,\n\t          correct: _.get(props, 'data.score.correct', 0),\n\t          onComplete: onScoreComplete\n\t        },\n\t        React.createElement('div', null)\n\t      ),\n\t      React.createElement(\n\t        _5.default,\n\t        {\n\t          className: 'litter-bug-score',\n\t          max: 100,\n\t          increment: 10,\n\t          correct: _.get(props, 'data.score.incorrect', 0),\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          onComplete: onTimerComplete\n\t        },\n\t        React.createElement('div', null)\n\t      ),\n\t      React.createElement(_7.default, {\n\t        countDown: true,\n\t        timeout: opts.timeout,\n\t        getTime: getTime,\n\t        stop: _.get(props, 'data.game.complete', false),\n\t        complete: _.get(props, 'data.game.complete', false),\n\t        checkComplete: _.get(props, 'data.game.start', false),\n\t        restart: _.get(props, 'data.game.start', false),\n\t        onComplete: onTimerComplete\n\t      })\n\t    ),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'main' },\n\t      React.createElement(_9.default, {\n\t        leftBound: 70,\n\t        rightBound: 820,\n\t        on: _.get(props, 'data.game.start', false),\n\t        start: _.get(props, 'data.game.start', false),\n\t        stop: _.get(props, 'data.game.complete', false),\n\t        prepClasses: ['ready', 'go'],\n\t        prepTimeout: opts.prepTimeout,\n\t        onAddClassName: onAddClassName,\n\t        bin: React.createElement(_11.default, {\n\t          completeOnStart: true,\n\t          checkComplete: false,\n\t          bin: bin\n\t        })\n\t      }),\n\t      React.createElement(_13.default, {\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        start: _.get(props, 'data.game.start', false),\n\t        canCatch: _.get(props, 'data.game.start', false),\n\t        moveBuckets: true,\n\t        onMove: onMove,\n\t        bucket: [React.createElement(skoash.Component, { className: 'mr-eco', message: 'trash' })],\n\t        catchableRefs: _.get(props, 'data.dropper.refs', []),\n\t        onCorrect: onCorrectCatch,\n\t        onIncorrect: onIncorrectCatch,\n\t        assets: [React.createElement(skoash.Audio, {\n\t          type: 'voiceOver',\n\t          ref: 'correct',\n\t          src: 'media/_assets/_sounds/_effects/WinPoints.mp3'\n\t        }), React.createElement(skoash.Audio, {\n\t          type: 'voiceOver',\n\t          ref: 'incorrect',\n\t          src: 'media/_assets/_sounds/_effects/LosePoints.mp3'\n\t        })]\n\t      })\n\t    ),\n\t    React.createElement(_17.default, {\n\t      openOnStart: opts.openOnStart,\n\t      openTarget: 'reveal',\n\t      openReveal: _.get(props, 'data.openReveal', false),\n\t      closeReveal: _.get(props, 'data.reveal.close', false),\n\t      onClose: onCloseReveal,\n\t      onOpen: onOpenReveal,\n\t      list: opts.revealList\n\t    })\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(4);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(5);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(34);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(32);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(9);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tvar _16 = __webpack_require__(38);\n\t\n\tvar _17 = _interopRequireDefault(_16);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BALL = 'ball';\n\t\n\tvar Cannon = function (_skoash$Component) {\n\t  _inherits(Cannon, _skoash$Component);\n\t\n\t  function Cannon() {\n\t    _classCallCheck(this, Cannon);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Cannon.__proto__ || Object.getPrototypeOf(Cannon)).call(this));\n\t\n\t    _this.state = {\n\t      classes: {}\n\t    };\n\t\n\t    _this.fire = _this.fire.bind(_this);\n\t    _this.reload = _this.reload.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Cannon, [{\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Cannon.prototype.__proto__ || Object.getPrototypeOf(Cannon.prototype), 'bootstrap', this).call(this);\n\t\n\t      var list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\t\n\t      this.setState({\n\t        list: list\n\t      });\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Cannon.prototype.__proto__ || Object.getPrototypeOf(Cannon.prototype), 'start', this).call(this);\n\t      this.next();\n\t    }\n\t  }, {\n\t    key: 'next',\n\t    value: function next() {\n\t      var classes, list;\n\t      classes = this.state.classes;\n\t      list = this.state.list;\n\t      if (this.props.reverseReload) {\n\t        list = this.refs.bin.get(1).concat(list);\n\t        list.pop();\n\t      } else {\n\t        list = list.concat(this.refs.bin.get(1));\n\t        list.shift();\n\t      }\n\t      classes[this.state.list.length - 1] = 'LOADED';\n\t      this.enabled = true;\n\t\n\t      this.setState({\n\t        classes: classes,\n\t        list: list\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fire',\n\t    value: function fire() {\n\t      var _this2 = this;\n\t\n\t      this.setState({\n\t        fire: true,\n\t        reload: false\n\t      }, function () {\n\t        setTimeout(function () {\n\t          _this2.reload();\n\t        }, 500);\n\t      });\n\t\n\t      if (typeof this.props.onFire === 'function') {\n\t        this.props.onFire.call(this);\n\t      }\n\t\n\t      this.next();\n\t    }\n\t  }, {\n\t    key: 'reload',\n\t    value: function reload() {\n\t      this.setState({\n\t        fire: false,\n\t        reload: true\n\t      });\n\t\n\t      if (typeof this.props.onReload === 'function') {\n\t        this.props.onReload.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('cannon', {\n\t        FIRE: this.state.fire,\n\t        RELOAD: this.state.reload\n\t      }, _get(Cannon.prototype.__proto__ || Object.getPrototypeOf(Cannon.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key, li) {\n\t      return (0, _classnames2.default)('ammo', li.props.className, this.state.classes[key]);\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      if (!this.props.bin) return null;\n\t\n\t      return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t        ref: 'bin'\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'renderAmmo',\n\t    value: function renderAmmo() {\n\t      var _this3 = this;\n\t\n\t      var list = this.state.list || this.props.list;\n\t      return list.map(function (li, key) {\n\t        var ref;\n\t        ref = li.ref || li.props['data-ref'] || key;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          ref: ref,\n\t          'data-ref': ref,\n\t          key: key,\n\t          className: _this3.getClass(key, li),\n\t          onClick: _this3.fire\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        this.renderBin(),\n\t        React.createElement('div', { className: 'ammo-container' }),\n\t        this.renderAmmo()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Cannon;\n\t}(skoash.Component);\n\t\n\tCannon.defaultProps = _.defaults({\n\t  showNum: 3,\n\t  reverseReload: false,\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)]\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Cannon;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _shortid = __webpack_require__(41);\n\t\n\tvar _shortid2 = _interopRequireDefault(_shortid);\n\t\n\tvar _2 = __webpack_require__(39);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Carousel = function (_Selectable) {\n\t  _inherits(Carousel, _Selectable);\n\t\n\t  function Carousel() {\n\t    _classCallCheck(this, Carousel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this));\n\t\n\t    _this.next = _this.next.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Carousel, [{\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      if (nextProps.selected) {\n\t        this.select();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Carousel.prototype.__proto__ || Object.getPrototypeOf(Carousel.prototype), 'start', this).call(this);\n\t      this.next();\n\t    }\n\t  }, {\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      var classes, list;\n\t      classes = this.state.classes;\n\t      list = this.state.list;\n\t      list = list.concat(this.refs.bin.get(1));\n\t      list.shift();\n\t      classes[0] = '';\n\t      this.enabled = true;\n\t\n\t      this.setState({\n\t        classes: classes,\n\t        list: list\n\t      }, function () {\n\t        setTimeout(function () {\n\t          classes[0] = 'LEAVE';\n\t          _this2.setState({\n\t            classes: classes\n\t          });\n\t        }, _this2.props.pause);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      var list;\n\t      // skoash.Component is not the super here, but this is what we want\n\t      skoash.Component.prototype.bootstrap.call(this);\n\t\n\t      list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\t\n\t      this.setState({\n\t        list: list\n\t      });\n\t    }\n\t  }, {\n\t    key: 'selectHelper',\n\t    value: function selectHelper() {\n\t      if (!this.enabled) return;\n\t\n\t      if (this.props.dataTarget) {\n\t        this.updateGameState({\n\t          path: this.props.dataTarget,\n\t          data: {\n\t            target: this.state.list[this.props.targetIndex]\n\t          }\n\t        });\n\t      }\n\t\n\t      this.enabled = false;\n\t\n\t      if (typeof this.props.onSelect === 'function') {\n\t        this.props.onSelect.call(this, this.state.list[this.props.targetIndex]);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('carousel', _get(Carousel.prototype.__proto__ || Object.getPrototypeOf(Carousel.prototype), 'getClassNames', this).call(this));\n\t    }\n\t\n\t    /*\n\t     * shortid is intentionally not used for key here because we want to make sure\n\t     * that the element is transitioned and not replaced.\n\t     */\n\t\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this3 = this;\n\t\n\t      var list = this.state.list || this.props.list;\n\t      return list.map(function (li, key) {\n\t        var ref, onTransitionEnd;\n\t        ref = li.ref || li.props['data-ref'] || key;\n\t        onTransitionEnd = key === 0 ? _this3.next : null;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          className: _this3.getClass(key, li),\n\t          'data-ref': ref,\n\t          'data-message': li.props.message,\n\t          onTransitionEnd: onTransitionEnd,\n\t          ref: ref,\n\t          key: key,\n\t          'data-key': (0, _shortid2.default)(key)\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var onClick = this.props.clickable ? this.state.selectFunction.bind(this) : null;\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        this.renderBin(),\n\t        React.createElement(\n\t          'div',\n\t          { className: this.getClassNames(), onClick: onClick },\n\t          this.renderList()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Carousel;\n\t}(_3.default);\n\t\n\tCarousel.defaultProps = _.defaults({\n\t  showNum: 3,\n\t  targetIndex: 1,\n\t  pause: 500,\n\t  clickable: false\n\t}, _3.default.defaultProps);\n\t\n\texports.default = Carousel;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Catchable = function (_skoash$Component) {\n\t  _inherits(Catchable, _skoash$Component);\n\t\n\t  function Catchable() {\n\t    _classCallCheck(this, Catchable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Catchable.__proto__ || Object.getPrototypeOf(Catchable)).call(this));\n\t\n\t    _this.state = {\n\t      canCatch: true\n\t    };\n\t    _this.reset = _this.reset.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Catchable, [{\n\t    key: 'complete',\n\t    value: function complete() {\n\t      var _this2 = this;\n\t\n\t      setTimeout(function () {\n\t        _this2.setState({\n\t          complete: true\n\t        }, function () {\n\t          skoash.trigger('complete');\n\t          _this2.props.onComplete.call(_this2, _this2);\n\t        });\n\t      }, this.props.completeDelay);\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Catchable.prototype.__proto__ || Object.getPrototypeOf(Catchable.prototype), 'bootstrap', this).call(this);\n\t      this.DOMNode = ReactDOM.findDOMNode(this);\n\t    }\n\t  }, {\n\t    key: 'markCaught',\n\t    value: function markCaught() {\n\t      if (!this.state.ready) return;\n\t      this.setState({ canCatch: false });\n\t      this.props.onCaught.call(this);\n\t    }\n\t  }, {\n\t    key: 'canCatch',\n\t    value: function canCatch() {\n\t      return !this.props.disabled && this.state.canCatch;\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('catchable', {\n\t        CAUGHT: !this.state.canCatch\n\t      }, _get(Catchable.prototype.__proto__ || Object.getPrototypeOf(Catchable.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      if (this.state.ready && !this.props.disabled && this.props.reCatchable) {\n\t        this.setState({ canCatch: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement('li', _extends({}, this.props, { className: this.getClassNames() }));\n\t    }\n\t  }]);\n\t\n\t  return Catchable;\n\t}(skoash.Component);\n\t\n\tCatchable.defaultProps = _.defaults({\n\t  disabled: false,\n\t  isCorrect: true,\n\t  reCatchable: true,\n\t  onCaught: _.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Catchable;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _lodash = __webpack_require__(12);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar RevealPrompt = function (_skoash$Component) {\n\t  _inherits(RevealPrompt, _skoash$Component);\n\t\n\t  function RevealPrompt() {\n\t    _classCallCheck(this, RevealPrompt);\n\t\n\t    var _this = _possibleConstructorReturn(this, (RevealPrompt.__proto__ || Object.getPrototypeOf(RevealPrompt)).call(this));\n\t\n\t    _this.state = {\n\t      openReveal: ''\n\t    };\n\t\n\t    _this.index = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(RevealPrompt, [{\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      _get(RevealPrompt.prototype.__proto__ || Object.getPrototypeOf(RevealPrompt.prototype), 'componentWillReceiveProps', this).call(this, nextProps);\n\t\n\t      if (nextProps.openReveal != null && nextProps.openReveal !== this.props.openReveal) {\n\t        this.open(nextProps.openReveal);\n\t      }\n\t\n\t      if (nextProps.closeReveal === true && nextProps.closeReveal !== this.props.closeReveal) {\n\t        this.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(RevealPrompt.prototype.__proto__ || Object.getPrototypeOf(RevealPrompt.prototype), 'start', this).call(this);\n\t\n\t      if (this.props.openOnStart) {\n\t        this.open(this.props.openOnStart);\n\t      } else {\n\t        this.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(message) {\n\t      var self = this;\n\t      self.setState({\n\t        open: true,\n\t        openReveal: '' + message\n\t      });\n\t\n\t      self.props.onOpen.call(self, message);\n\t\n\t      if (self.props.completeOnOpen) {\n\t        self.complete();\n\t      } else {\n\t        self.requireForComplete.map(function (key) {\n\t          if (key === message && self.refs[key]) {\n\t            self.refs[key].complete();\n\t          }\n\t        });\n\t      }\n\t\n\t      if (self.props.autoClose) {\n\t        setTimeout(function () {\n\t          self.close();\n\t        }, 2000);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var prevMessage = this.state.openReveal;\n\t\n\t      this.props.onClose.call(this, prevMessage);\n\t\n\t      this.setState({\n\t        open: false,\n\t        openReveal: ''\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this2 = this;\n\t\n\t      return this.props.list.map(function (li, key) {\n\t        var ref = li.ref == null ? key : li.ref;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          type: 'li',\n\t          className: _this2.getClass(li, key),\n\t          'data-ref': ref,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(li, key) {\n\t      var _ClassNames;\n\t\n\t      return (0, _classnames2.default)((_ClassNames = {}, _defineProperty(_ClassNames, li.props.className, li.props.className), _defineProperty(_ClassNames, 'OPEN', this.state.openReveal.indexOf(key) !== -1 || this.state.openReveal.indexOf(li.props['data-ref']) !== -1), _ClassNames));\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      var _ClassNames2;\n\t\n\t      return (0, _classnames2.default)(_get(RevealPrompt.prototype.__proto__ || Object.getPrototypeOf(RevealPrompt.prototype), 'getClassNames', this).call(this), 'reveal', (_ClassNames2 = {}, _defineProperty(_ClassNames2, 'open-' + this.state.openReveal, this.state.openReveal), _defineProperty(_ClassNames2, 'open-none', !this.state.openReveal), _ClassNames2));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'ul',\n\t            null,\n\t            this.renderList()\n\t          ),\n\t          React.createElement('button', { className: 'close-reveal', onClick: this.close.bind(this) })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return RevealPrompt;\n\t}(skoash.Component);\n\t\n\texports.default = RevealPrompt;\n\t\n\t\n\tRevealPrompt.defaultProps = _lodash2.default.defaults({\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  onOpen: _lodash2.default.identity,\n\t  onClose: _lodash2.default.identity\n\t}, skoash.Component.defaultProps);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar randomFromSeed = __webpack_require__(47);\n\t\n\tvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\n\tvar alphabet;\n\tvar previousSeed;\n\t\n\tvar shuffled;\n\t\n\tfunction reset() {\n\t    shuffled = false;\n\t}\n\t\n\tfunction setCharacters(_alphabet_) {\n\t    if (!_alphabet_) {\n\t        if (alphabet !== ORIGINAL) {\n\t            alphabet = ORIGINAL;\n\t            reset();\n\t        }\n\t        return;\n\t    }\n\t\n\t    if (_alphabet_ === alphabet) {\n\t        return;\n\t    }\n\t\n\t    if (_alphabet_.length !== ORIGINAL.length) {\n\t        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n\t    }\n\t\n\t    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n\t       return ind !== arr.lastIndexOf(item);\n\t    });\n\t\n\t    if (unique.length) {\n\t        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n\t    }\n\t\n\t    alphabet = _alphabet_;\n\t    reset();\n\t}\n\t\n\tfunction characters(_alphabet_) {\n\t    setCharacters(_alphabet_);\n\t    return alphabet;\n\t}\n\t\n\tfunction setSeed(seed) {\n\t    randomFromSeed.seed(seed);\n\t    if (previousSeed !== seed) {\n\t        reset();\n\t        previousSeed = seed;\n\t    }\n\t}\n\t\n\tfunction shuffle() {\n\t    if (!alphabet) {\n\t        setCharacters(ORIGINAL);\n\t    }\n\t\n\t    var sourceArray = alphabet.split('');\n\t    var targetArray = [];\n\t    var r = randomFromSeed.nextValue();\n\t    var characterIndex;\n\t\n\t    while (sourceArray.length > 0) {\n\t        r = randomFromSeed.nextValue();\n\t        characterIndex = Math.floor(r * sourceArray.length);\n\t        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n\t    }\n\t    return targetArray.join('');\n\t}\n\t\n\tfunction getShuffled() {\n\t    if (shuffled) {\n\t        return shuffled;\n\t    }\n\t    shuffled = shuffle();\n\t    return shuffled;\n\t}\n\t\n\t/**\n\t * lookup shuffled letter\n\t * @param index\n\t * @returns {string}\n\t */\n\tfunction lookup(index) {\n\t    var alphabetShuffled = getShuffled();\n\t    return alphabetShuffled[index];\n\t}\n\t\n\tmodule.exports = {\n\t    characters: characters,\n\t    seed: setSeed,\n\t    lookup: lookup,\n\t    shuffled: getShuffled\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.14.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', ARY_FLAG],\n\t    ['bind', BIND_FLAG],\n\t    ['bindKey', BIND_KEY_FLAG],\n\t    ['curry', CURRY_FLAG],\n\t    ['curryRight', CURRY_RIGHT_FLAG],\n\t    ['flip', FLIP_FLAG],\n\t    ['partial', PARTIAL_FLAG],\n\t    ['partialRight', PARTIAL_RIGHT_FLAG],\n\t    ['rearg', REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return baseFindIndex(array, baseIsNaN, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes `func` with its first argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n\t        objectCreate = context.Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\t\n\t    /** Built-in method references that are mockable. */\n\t    var clearTimeout = function(id) { return context.clearTimeout.call(root, id); },\n\t        setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(context.Object, 'create');\n\t\n\t    /* Used to set `toString` methods. */\n\t    var defineProperty = (function() {\n\t      var func = getNative(context.Object, 'defineProperty'),\n\t          name = getNative.name;\n\t\n\t      return (name && name.length > 2) ? func : undefined;\n\t    }());\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache) {\n\t        var pairs = cache.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          return this;\n\t        }\n\t        cache = this.__data__ = new MapCache(pairs);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      var index = length;\n\t      while (index--) {\n\t        var key = props[index],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined &&\n\t            !(key in Object(object))) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return object != null &&\n\t        (hasOwnProperty.call(object, key) ||\n\t          (typeof object == 'object' && key in object && getPrototype(object) === null));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    var baseKeys = overArg(nativeKeys, Object);\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return basePickBy(object, props, function(value, key) {\n\t        return key in object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick from.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, props, predicate) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return baseRest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return baseRest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\t\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    var getPrototype = overArg(nativeGetPrototype, Object);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length,\n\t          lastIndex = length - 1;\n\t\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return defineProperty(wrapper, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      string = toString(string);\n\t\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return baseFindIndex(array, baseIsNaN, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = baseRest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = baseRest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    function now() {\n\t      return Date.now();\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = baseRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = baseRest(function(func, indexes) {\n\t      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`\n\t     * and is equivalent to `_.matches` when `source` is partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = baseRest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = baseRest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = baseRest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = baseRest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function supports comparing the same values as\n\t     * `_.isEqual` is equivalent to `_.isMatch` with `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(49)(module)))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (props, ref, key) {\n\t  return (0, _catch_game_screen_component2.default)(props, ref, key, {\n\t    id: 'catch-game-level-one',\n\t    level: 1,\n\t    rows: 3,\n\t    timeout: 120000,\n\t    prepTimeout: 1000,\n\t    openOnStart: 'instructions',\n\t    bin: [{\n\t      className: 'mushroom',\n\t      message: ''\n\t    }, {\n\t      className: 'banana',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'paper',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'dog',\n\t      message: ''\n\t    }, {\n\t      className: 'battery',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'duck',\n\t      message: ''\n\t    }, {\n\t      className: 'squirrel',\n\t      message: ''\n\t    }, {\n\t      className: 'tire',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'blue-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'yellow-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'red-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'purple-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'glass',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'plastic',\n\t      message: 'trash'\n\t    }],\n\t    vos: [React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'instructions',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/Instructions.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/PickUpLitter.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'level-up',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_effects/LevelUp.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/Congratulations.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'try-again',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_effects/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/YouDidntWin.mp3'\n\t      })\n\t    )],\n\t    sfx: [],\n\t    revealList: [React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'instructions',\n\t        className: 'instructions',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'instructions' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'level-up',\n\t        className: 'level-up',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'congratulations' }),\n\t        React.createElement('div', { className: 'level-up' })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'try-again',\n\t        className: 'try-again',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'try-again' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    )]\n\t  });\n\t};\n\t\n\tvar _catch_game_screen_component = __webpack_require__(6);\n\t\n\tvar _catch_game_screen_component2 = _interopRequireDefault(_catch_game_screen_component);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (props, ref, key) {\n\t  return (0, _catch_game_screen_component2.default)(props, ref, key, {\n\t    id: 'catch-game-level-three',\n\t    level: 3,\n\t    rows: 5,\n\t    timeout: 120000,\n\t    prepTimeout: 1000,\n\t    bin: [{\n\t      className: 'mushroom',\n\t      message: ''\n\t    }, {\n\t      className: 'banana',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'paper',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'dog',\n\t      message: ''\n\t    }, {\n\t      className: 'battery',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'duck',\n\t      message: ''\n\t    }, {\n\t      className: 'squirrel',\n\t      message: ''\n\t    }, {\n\t      className: 'tire',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'blue-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'yellow-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'red-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'purple-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'glass',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'plastic',\n\t      message: 'trash'\n\t    }],\n\t    vos: [React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'level-up',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_effects/WinTheGame1.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/YouveWon.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/YouvePickedUp.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'try-again',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_effects/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/YouDidntWin.mp3'\n\t      })\n\t    )],\n\t    sfx: [],\n\t    revealList: [React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'level-up',\n\t        className: 'level-up youve-won',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'congratulations' }),\n\t        React.createElement('div', { className: 'level-up' })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'try-again',\n\t        className: 'try-again',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'try-again' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    )]\n\t  });\n\t};\n\t\n\tvar _catch_game_screen_component = __webpack_require__(6);\n\t\n\tvar _catch_game_screen_component2 = _interopRequireDefault(_catch_game_screen_component);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (props, ref, key) {\n\t  return (0, _catch_game_screen_component2.default)(props, ref, key, {\n\t    id: 'catch-game-level-two',\n\t    level: 2,\n\t    rows: 4,\n\t    timeout: 120000,\n\t    prepTimeout: 1000,\n\t    bin: [{\n\t      className: 'mushroom',\n\t      message: ''\n\t    }, {\n\t      className: 'banana',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'paper',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'dog',\n\t      message: ''\n\t    }, {\n\t      className: 'battery',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'duck',\n\t      message: ''\n\t    }, {\n\t      className: 'squirrel',\n\t      message: ''\n\t    }, {\n\t      className: 'tire',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'blue-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'yellow-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'red-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'purple-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'glass',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'plastic',\n\t      message: 'trash'\n\t    }],\n\t    vos: [React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'level-up',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_effects/LevelUp.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/Congratulations.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'try-again',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_effects/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/YouDidntWin.mp3'\n\t      })\n\t    )],\n\t    sfx: [],\n\t    revealList: [React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'level-up',\n\t        className: 'level-up',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'congratulations' }),\n\t        React.createElement('div', { className: 'level-up' })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'try-again',\n\t        className: 'try-again',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'try-again' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    )]\n\t  });\n\t};\n\t\n\tvar _catch_game_screen_component = __webpack_require__(6);\n\t\n\tvar _catch_game_screen_component2 = _interopRequireDefault(_catch_game_screen_component);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: 'clean-up-game-lvl-1'\n\t    }),\n\t    React.createElement(\n\t      _3.default,\n\t      {\n\t        play: _.get(props, 'data.reveal.play', null),\n\t        onPlay: function onPlay() {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: null\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: null\n\t            }\n\t          });\n\t\n\t          if (_.get(props, 'data.reveal.play')) {\n\t            this.updateGameState({\n\t              path: 'game',\n\t              data: {\n\t                complete: true\n\t              }\n\t            });\n\t          }\n\t        }\n\t      },\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'complete', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Level1.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-2', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Wow.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/YouHaveGreat.mp3' })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'try-again', silentOnStart: true, complete: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-4', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/LevelLost.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-5', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/OhNo.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-6', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkStill.mp3', complete: true })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'throw', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-7', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/FastSwish.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-8', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/WinPoints.mp3' })\n\t      )\n\t    ),\n\t    React.createElement(_5.default, {\n\t      ref: 'reveal',\n\t      openReveal: _.get(props, 'data.reveal.open', null),\n\t      onClose: function onClose() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            start: true\n\t          }\n\t        });\n\t      },\n\t      list: [React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'complete' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame complete-lvl-1' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'You have some great cleaning skills!',\n\t            React.createElement('br', null),\n\t            'Keep up the good work!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'try-again' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is still covered with trash',\n\t            React.createElement('br', null),\n\t            'but you still have a chance to clean',\n\t            React.createElement('br', null),\n\t            'and beat the Litterbug!'\n\t          )\n\t        )\n\t      )]\n\t    }),\n\t    React.createElement(_7.default, {\n\t      ref: 'carousel',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      showNum: 5,\n\t      targetIndex: 2,\n\t      selected: _.get(props, 'data.cannon.fire'),\n\t      onSelect: function onSelect(target) {\n\t        var score = _.get(props, 'data.score.points', 0);\n\t        var classes = this.state.classes;\n\t        classes[target.props['data-key']] = 'SELECTED';\n\t\n\t        this.setState({\n\t          classes: classes\n\t        }, function () {\n\t          setTimeout(function () {\n\t            classes[target.props['data-key']] = '';\n\t          }, 1000);\n\t        });\n\t\n\t        if (score < CONFIG.POINTS) score += target.props.value;\n\t\n\t        this.updateGameState({\n\t          path: 'score',\n\t          data: {\n\t            points: score\n\t          }\n\t        });\n\t\n\t        if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'game',\n\t            data: {\n\t              complete: true\n\t            }\n\t          });\n\t        }\n\t      },\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'five', name: 'five', value: 5, complete: true }), React.createElement(skoash.Component, { className: 'ten', name: 'ten', value: 10, complete: true }), React.createElement(skoash.Component, { className: 'twenty', name: 'twenty', value: 20, complete: true }), React.createElement(skoash.Component, { className: 'thirty', name: 'thirty', value: 30, complete: true })]\n\t      })\n\t    }),\n\t    React.createElement(_9.default, {\n\t      ref: 'cannon',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      reverseReload: true,\n\t      showNum: 4,\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'plastic-bottle', complete: true }), React.createElement(skoash.Component, { className: 'soda-can', complete: true }), React.createElement(skoash.Component, { className: 'banana-peal', complete: true }), React.createElement(skoash.Component, { className: 'glass-bottle', complete: true }), React.createElement(skoash.Component, { className: 'crumbled-paper', complete: true }), React.createElement(skoash.Component, { className: 'tuna-can', complete: true }), React.createElement(skoash.Component, { className: 'tire', complete: true }), React.createElement(skoash.Component, { className: 'battery', complete: true })]\n\t      }),\n\t      onFire: function onFire() {\n\t        this.updateGameState({\n\t          path: 'reveal',\n\t          data: {\n\t            play: 'throw'\n\t          }\n\t        });\n\t      },\n\t      onReload: function onReload() {\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: true\n\t          }\n\t        });\n\t      }\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'grass' },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { className: 'stats' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'level' },\n\t          CONFIG.LVL\n\t        ),\n\t        React.createElement(_13.default, {\n\t          ref: 'timer',\n\t          countDown: true,\n\t          timeout: CONFIG.TIMER,\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          restart: _.get(props, 'data.game.start', false),\n\t          onComplete: function onComplete() {\n\t            if (_.get(props, 'data.reveal.open')) return;\n\t            if (_.get(props, 'data.score.points', 0) < 100) {\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  open: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  play: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'score',\n\t                data: {\n\t                  points: 0\n\t                }\n\t              });\n\t            }\n\t          }\n\t        }),\n\t        React.createElement(_15.default, {\n\t          ref: 'score',\n\t          max: CONFIG.POINTS,\n\t          correct: _.get(props, 'data.score.points', 0),\n\t          checkComplete: false,\n\t          complete: _.get(props, 'data.score.points', 0) === 100\n\t        })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(10);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(8);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(7);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(5);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(4);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  LVL: 1,\n\t  POINTS: 100,\n\t  TIMER: 30000\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: 'clean-up-game-lvl-2'\n\t    }),\n\t    React.createElement(\n\t      _3.default,\n\t      {\n\t        play: _.get(props, 'data.reveal.play', null),\n\t        onPlay: function onPlay() {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: null\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: null\n\t            }\n\t          });\n\t\n\t          if (_.get(props, 'data.reveal.play')) {\n\t            this.updateGameState({\n\t              path: 'game',\n\t              data: {\n\t                complete: true\n\t              }\n\t            });\n\t          }\n\t        }\n\t      },\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'complete-lvl', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Level2.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-2', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/AmazingJob.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ThankYouCaring.mp3' })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'try-again', silentOnStart: true, complete: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-4', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/LevelLost.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-5', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/OhNo.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-6', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkStill.mp3', complete: true })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'throw', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-7', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/FastSwish.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-8', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/WinPoints.mp3' })\n\t      )\n\t    ),\n\t    React.createElement(_5.default, {\n\t      ref: 'reveal',\n\t      openReveal: _.get(props, 'data.reveal.open', null),\n\t      list: [React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'complete' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame complete-lvl-2' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Thank you for caring so much',\n\t            React.createElement('br', null),\n\t            'about the environment!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'try-again' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is still covered with trash',\n\t            React.createElement('br', null),\n\t            'but you still have a chance to clean',\n\t            React.createElement('br', null),\n\t            'and beat the Litterbug!'\n\t          )\n\t        )\n\t      )]\n\t    }),\n\t    React.createElement(_7.default, {\n\t      ref: 'carousel',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      showNum: 5,\n\t      targetIndex: 2,\n\t      selected: _.get(props, 'data.cannon.fire'),\n\t      onSelect: function onSelect(target) {\n\t        var score = _.get(props, 'data.score.points', 0);\n\t        var classes = this.state.classes;\n\t        classes[target.props['data-key']] = 'SELECTED';\n\t\n\t        this.setState({\n\t          classes: classes\n\t        }, function () {\n\t          setTimeout(function () {\n\t            classes[target.props['data-key']] = '';\n\t          }, 1000);\n\t        });\n\t\n\t        if (score < CONFIG.POINTS) score += target.props.value;\n\t\n\t        this.updateGameState({\n\t          path: 'score',\n\t          data: {\n\t            points: score\n\t          }\n\t        });\n\t\n\t        if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'game',\n\t            data: {\n\t              complete: true\n\t            }\n\t          });\n\t        }\n\t      },\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'five', name: 'five', value: 5, complete: true }), React.createElement(skoash.Component, { className: 'ten', name: 'ten', value: 10, complete: true }), React.createElement(skoash.Component, { className: 'twenty', name: 'twenty', value: 20, complete: true }), React.createElement(skoash.Component, { className: 'thirty', name: 'thirty', value: 30, complete: true })]\n\t      })\n\t    }),\n\t    React.createElement(_9.default, {\n\t      ref: 'cannon',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      reverseReload: true,\n\t      showNum: 4,\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'plastic-bottle', complete: true }), React.createElement(skoash.Component, { className: 'soda-can', complete: true }), React.createElement(skoash.Component, { className: 'banana-peal', complete: true }), React.createElement(skoash.Component, { className: 'glass-bottle', complete: true }), React.createElement(skoash.Component, { className: 'crumbled-paper', complete: true }), React.createElement(skoash.Component, { className: 'tuna-can', complete: true }), React.createElement(skoash.Component, { className: 'tire', complete: true }), React.createElement(skoash.Component, { className: 'battery', complete: true })]\n\t      }),\n\t      onFire: function onFire() {\n\t        this.updateGameState({\n\t          path: 'reveal',\n\t          data: {\n\t            play: 'throw'\n\t          }\n\t        });\n\t      },\n\t      onReload: function onReload() {\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: true\n\t          }\n\t        });\n\t      }\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'grass' },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { className: 'stats' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'level' },\n\t          CONFIG.LVL\n\t        ),\n\t        React.createElement(_13.default, {\n\t          ref: 'timer',\n\t          countDown: true,\n\t          timeout: CONFIG.TIMER,\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          restart: _.get(props, 'data.game.start', false),\n\t          onComplete: function onComplete() {\n\t            if (_.get(props, 'data.reveal.open')) return;\n\t            if (_.get(props, 'data.score.points', 0) < 100) {\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  open: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  play: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'score',\n\t                data: {\n\t                  points: 0\n\t                }\n\t              });\n\t            }\n\t          }\n\t        }),\n\t        React.createElement(_15.default, {\n\t          ref: 'score',\n\t          max: CONFIG.POINTS,\n\t          correct: _.get(props, 'data.score.points', 0),\n\t          checkComplete: false,\n\t          complete: _.get(props, 'data.score.points', 0) === 100\n\t        })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(10);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(8);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(7);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(5);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(4);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  LVL: 2,\n\t  POINTS: 100,\n\t  TIMER: 30000\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: 'clean-up-game-lvl-3'\n\t    }),\n\t    React.createElement(\n\t      _3.default,\n\t      {\n\t        play: _.get(props, 'data.reveal.play', null),\n\t        onPlay: function onPlay() {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: null\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: null\n\t            }\n\t          });\n\t\n\t          if (_.get(props, 'data.reveal.play')) {\n\t            this.updateGameState({\n\t              path: 'game',\n\t              data: {\n\t                complete: true\n\t              }\n\t            });\n\t          }\n\t        }\n\t      },\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'complete', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Level3.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkClean.mp3' })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'try-again', silentOnStart: true, complete: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-4', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/LevelLost.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-5', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/OhNo.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-6', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkStill.mp3', complete: true })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'throw', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-7', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/FastSwish.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-8', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/WinPoints.mp3' })\n\t      )\n\t    ),\n\t    React.createElement(_5.default, {\n\t      ref: 'reveal',\n\t      openReveal: _.get(props, 'data.reveal.open', null),\n\t      list: [React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'complete' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame complete-lvl-3' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is now clean',\n\t            React.createElement('br', null),\n\t            'You are an'\n\t          ),\n\t          React.createElement('div', { className: 'banner-2' })\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'try-again' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is still covered with trash',\n\t            React.createElement('br', null),\n\t            'but you still have a chance to clean',\n\t            React.createElement('br', null),\n\t            'and beat the Litterbug!'\n\t          )\n\t        )\n\t      )]\n\t    }),\n\t    React.createElement(_7.default, {\n\t      ref: 'carousel',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      showNum: 5,\n\t      targetIndex: 2,\n\t      selected: _.get(props, 'data.cannon.fire'),\n\t      onSelect: function onSelect(target) {\n\t        var score = _.get(props, 'data.score.points', 0);\n\t        var classes = this.state.classes;\n\t        classes[target.props['data-key']] = 'SELECTED';\n\t\n\t        this.setState({\n\t          classes: classes\n\t        }, function () {\n\t          setTimeout(function () {\n\t            classes[target.props['data-key']] = '';\n\t          }, 1000);\n\t        });\n\t\n\t        if (score < CONFIG.POINTS) score += target.props.value;\n\t\n\t        this.updateGameState({\n\t          path: 'score',\n\t          data: {\n\t            points: score\n\t          }\n\t        });\n\t\n\t        if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'game',\n\t            data: {\n\t              complete: true\n\t            }\n\t          });\n\t        }\n\t      },\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'five', name: 'five', value: 5, complete: true }), React.createElement(skoash.Component, { className: 'ten', name: 'ten', value: 10, complete: true }), React.createElement(skoash.Component, { className: 'twenty', name: 'twenty', value: 20, complete: true }), React.createElement(skoash.Component, { className: 'thirty', name: 'thirty', value: 30, complete: true })]\n\t      })\n\t    }),\n\t    React.createElement(_9.default, {\n\t      ref: 'cannon',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      reverseReload: true,\n\t      showNum: 4,\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'plastic-bottle', complete: true }), React.createElement(skoash.Component, { className: 'soda-can', complete: true }), React.createElement(skoash.Component, { className: 'banana-peal', complete: true }), React.createElement(skoash.Component, { className: 'glass-bottle', complete: true }), React.createElement(skoash.Component, { className: 'crumbled-paper', complete: true }), React.createElement(skoash.Component, { className: 'tuna-can', complete: true }), React.createElement(skoash.Component, { className: 'tire', complete: true }), React.createElement(skoash.Component, { className: 'battery', complete: true })]\n\t      }),\n\t      onFire: function onFire() {\n\t        this.updateGameState({\n\t          path: 'reveal',\n\t          data: {\n\t            play: 'throw'\n\t          }\n\t        });\n\t      },\n\t      onReload: function onReload() {\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: true\n\t          }\n\t        });\n\t      }\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'grass' },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { className: 'stats' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'level' },\n\t          CONFIG.LVL\n\t        ),\n\t        React.createElement(_13.default, {\n\t          ref: 'timer',\n\t          countDown: true,\n\t          timeout: CONFIG.TIMER,\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          restart: _.get(props, 'data.game.start', false),\n\t          onComplete: function onComplete() {\n\t            if (_.get(props, 'data.reveal.open')) return;\n\t            if (_.get(props, 'data.score.points', 0) < 100) {\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  open: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  play: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'score',\n\t                data: {\n\t                  points: 0\n\t                }\n\t              });\n\t            }\n\t          }\n\t        }),\n\t        React.createElement(_15.default, {\n\t          ref: 'score',\n\t          max: CONFIG.POINTS,\n\t          correct: _.get(props, 'data.score.points', 0),\n\t          checkComplete: false,\n\t          complete: _.get(props, 'data.score.points', 0) === 100\n\t        })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(10);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(8);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(7);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(5);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(4);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  LVL: 3,\n\t  POINTS: 100,\n\t  TIMER: 30000\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"commit\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/IPromise.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/S_BU_1.mp3\" }),\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"pledge\" },\n\t      \"I promise to \",\n\t      React.createElement(\"span\", { className: \"never\" }),\n\t      \" litter\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacerA\" }),\n\t      \"and to pick up the litter\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacerB\" }),\n\t      \"I see whenever I safely can.\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacer1\" }),\n\t      \"I will dispose of it\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacer2\" }),\n\t      \"in a trash can\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacer3\" }),\n\t      \"or a recycle bin.\"\n\t    ),\n\t    React.createElement(\"div\", { className: \"banner animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"flip\",\n\t      emitOnComplete: {\n\t        name: 'flip'\n\t      }\n\t    }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"media/_assets/_sprites/sprites.mr.eco-01.png\" }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"media/_assets/_sprites/sprites.sing.thankyou.flip-01.png\" }),\n\t    React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/Flip.mp3\" }),\n\t    React.createElement(\"div\", { className: \"words\" }),\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"flip-container animated\" },\n\t      React.createElement(\"div\", { className: \"flip\" })\n\t    ),\n\t    React.createElement(\"div\", { className: \"mr-eco animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"good-for-you\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ThankYou.mp3\" }),\n\t    React.createElement(\"div\", { className: \"mr-eco animated\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"banner2 animated\" }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: \"sparkles\" },\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null)\n\t    )\n\t  );\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"ground\",\n\t      startDelay: 2000\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ShouldYouThrow.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/VO_4.2.mp3\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"avatar animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"room\",\n\t      startDelay: 2000\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ThrowTrashRoom.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/VO_4.2.mp3\" }),\n\t    React.createElement(\"div\", { className: \"avatar animated\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"school\",\n\t      startDelay: 2000\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ThrowTrashSchool.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/VO_4.2.mp3\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"avatar animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"sing-about-it\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/LetsSing.mp3\" }),\n\t    React.createElement(\"div\", { className: \"mr-eco animated\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"dancers animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"take-pledge\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/AntiLitterPledge.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/S_BU_1.mp3\" }),\n\t    React.createElement(skoash.Image, { ref: \"bkg\", className: \"background\", src: \"media/_Frames/FR_1.png\" }),\n\t    React.createElement(\"div\", { className: \"mr-eco\" }),\n\t    React.createElement(\"div\", { className: \"banner\" })\n\t  );\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(skoash.Screen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: \"title\",\n\t    hidePrev: true,\n\t    completeDelay: 5000\n\t  }));\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"video\"\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { ref: \"center\", className: \"center\" },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { ref: \"frame\", className: \"frame\" },\n\t        React.createElement(skoash.Video, { ref: \"video\", src: \"https://res.cloudinary.com/changemyworldnow/video/upload/v1455037034/Litterbug-Final_jjmrg7.mp4\" })\n\t      )\n\t    )\n\t  );\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar config = {\n\t  id: 'litter-bug',\n\t  version: 2,\n\t  skoash: '1.0.4',\n\t  dimensions: {\n\t    width: 960,\n\t    ratio: 16 / 9\n\t  }\n\t};\n\t\n\texports.default = config;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _config = __webpack_require__(29);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _ = __webpack_require__(36);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tvar _3 = __webpack_require__(35);\n\t\n\tvar _4 = _interopRequireDefault(_3);\n\t\n\tvar _title_screen = __webpack_require__(27);\n\t\n\tvar _title_screen2 = _interopRequireDefault(_title_screen);\n\t\n\tvar _catch_game_level_one_screen = __webpack_require__(13);\n\t\n\tvar _catch_game_level_one_screen2 = _interopRequireDefault(_catch_game_level_one_screen);\n\t\n\tvar _catch_game_level_two_screen = __webpack_require__(15);\n\t\n\tvar _catch_game_level_two_screen2 = _interopRequireDefault(_catch_game_level_two_screen);\n\t\n\tvar _catch_game_level_three_screen = __webpack_require__(14);\n\t\n\tvar _catch_game_level_three_screen2 = _interopRequireDefault(_catch_game_level_three_screen);\n\t\n\tvar _clean_up_game_lvl1_screen = __webpack_require__(16);\n\t\n\tvar _clean_up_game_lvl1_screen2 = _interopRequireDefault(_clean_up_game_lvl1_screen);\n\t\n\tvar _clean_up_game_lvl2_screen = __webpack_require__(17);\n\t\n\tvar _clean_up_game_lvl2_screen2 = _interopRequireDefault(_clean_up_game_lvl2_screen);\n\t\n\tvar _clean_up_game_lvl3_screen = __webpack_require__(18);\n\t\n\tvar _clean_up_game_lvl3_screen2 = _interopRequireDefault(_clean_up_game_lvl3_screen);\n\t\n\tvar _room_screen = __webpack_require__(23);\n\t\n\tvar _room_screen2 = _interopRequireDefault(_room_screen);\n\t\n\tvar _school_screen = __webpack_require__(24);\n\t\n\tvar _school_screen2 = _interopRequireDefault(_school_screen);\n\t\n\tvar _ground_screen = __webpack_require__(22);\n\t\n\tvar _ground_screen2 = _interopRequireDefault(_ground_screen);\n\t\n\tvar _sing_about_it_screen = __webpack_require__(25);\n\t\n\tvar _sing_about_it_screen2 = _interopRequireDefault(_sing_about_it_screen);\n\t\n\tvar _video_screen = __webpack_require__(28);\n\t\n\tvar _video_screen2 = _interopRequireDefault(_video_screen);\n\t\n\tvar _good_for_you_screen = __webpack_require__(21);\n\t\n\tvar _good_for_you_screen2 = _interopRequireDefault(_good_for_you_screen);\n\t\n\tvar _take_pledge_screen = __webpack_require__(26);\n\t\n\tvar _take_pledge_screen2 = _interopRequireDefault(_take_pledge_screen);\n\t\n\tvar _commit_screen = __webpack_require__(19);\n\t\n\tvar _commit_screen2 = _interopRequireDefault(_commit_screen);\n\t\n\tvar _flip_screen = __webpack_require__(20);\n\t\n\tvar _flip_screen2 = _interopRequireDefault(_flip_screen);\n\t\n\tvar _5 = __webpack_require__(37);\n\t\n\tvar _6 = _interopRequireDefault(_5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar LitterBug = React.createElement(skoash.Game, {\n\t  config: _config2.default,\n\t  screens: {\n\t    0: _4.default,\n\t    1: _title_screen2.default,\n\t    2: _catch_game_level_one_screen2.default,\n\t    3: _catch_game_level_two_screen2.default,\n\t    4: _catch_game_level_three_screen2.default,\n\t    5: _room_screen2.default,\n\t    6: _school_screen2.default,\n\t    7: _ground_screen2.default,\n\t    8: _sing_about_it_screen2.default,\n\t    9: _video_screen2.default,\n\t    10: _good_for_you_screen2.default,\n\t    11: _clean_up_game_lvl1_screen2.default,\n\t    12: _clean_up_game_lvl2_screen2.default,\n\t    13: _clean_up_game_lvl3_screen2.default,\n\t    14: _take_pledge_screen2.default,\n\t    15: _commit_screen2.default,\n\t    16: _flip_screen2.default\n\t  },\n\t  menus: {\n\t    quit: _6.default\n\t  },\n\t  loader: React.createElement(_2.default, null),\n\t  assets: [React.createElement(skoash.Audio, { ref: 'bkg-1', type: 'background', src: 'media/_BKG/S_BKG_1.mp3', loop: true }), React.createElement(skoash.Audio, { ref: 'button', type: 'sfx', src: 'media/_Buttons/S_BU_1.mp3' }), React.createElement(skoash.Image, { ref: 'img-bkg-1', className: 'hidden', src: 'media/_BKG/BKG_1.png' }), React.createElement(skoash.Image, { ref: 'img-bkg-2', className: 'hidden', src: 'media/_BKG/BKG_2.png' }), React.createElement(skoash.Image, { ref: 'img-bkg-3', className: 'hidden', src: 'media/_BKG/BKG_3.png' }), React.createElement(skoash.Image, { ref: 'img-bkg-4', className: 'hidden', src: 'media/_assets/_images/BKG.4.jpg' }), React.createElement(skoash.Image, { ref: 'img-bkg-5', className: 'hidden', src: 'media/_BKG/BKG_5.png' }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_images/BKG.3.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_images/BKG.5.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.1-01.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.2-01.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.3-01-min.jpg'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.4-01.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.mr.eco-01.png'\n\t  }), React.createElement('div', { className: 'background default' }), React.createElement('div', { className: 'background title' }), React.createElement('div', { className: 'background lets-clean-up' }), React.createElement('div', { className: 'background clean-up-game' }), React.createElement('div', { className: 'background select' }), React.createElement('div', { className: 'background sun' }), React.createElement('div', { className: 'background commit' })],\n\t  passData: function passData(opts) {\n\t    this.setState(opts);\n\t  },\n\t  getClassNames: function getClassNames() {\n\t    return (0, _classnames2.default)({ 'SUN': this.state.sun });\n\t  }\n\t});\n\t\n\tskoash.start(LitterBug);\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _2 = __webpack_require__(9);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Catch = function (_skoash$Component) {\n\t  _inherits(Catch, _skoash$Component);\n\t\n\t  function Catch() {\n\t    _classCallCheck(this, Catch);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Catch.__proto__ || Object.getPrototypeOf(Catch)).call(this));\n\t\n\t    _this.state = {\n\t      canCatch: true,\n\t      stamp: 0\n\t    };\n\t\n\t    _this.onMouseMove = _this.onMouseMove.bind(_this);\n\t    _this.onResize = _this.onResize.bind(_this);\n\t    _this.checkCollisions = _this.checkCollisions.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Catch, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bucketNode = ReactDOM.findDOMNode(this.refs.bucket);\n\t      this.catchableNodes = _.map(this.props.catchables, function (val, key) {\n\t        return ReactDOM.findDOMNode(this.refs[key + '-catchable']);\n\t      }.bind(this));\n\t    }\n\t  }, {\n\t    key: 'attachMouseEvents',\n\t    value: function attachMouseEvents() {\n\t      var catchRef = this.refs['catch-component'];\n\t      if (catchRef) {\n\t        catchRef.addEventListener('mousemove', this.onMouseMove);\n\t        catchRef.addEventListener('touchstart', this.onMouseMove);\n\t        catchRef.addEventListener('touchmove', this.onMouseMove);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMouseMove',\n\t    value: function onMouseMove(e) {\n\t      this.setState({\n\t        mouseX: e.pageX\n\t      });\n\t    }\n\t  }, {\n\t    key: 'onResize',\n\t    value: function onResize() {\n\t      var _this2 = this;\n\t\n\t      skoash.trigger('getState').then(function (state) {\n\t        var zoom = state.scale;\n\t        var edges = _this2.getEdges(_this2.bucketNode);\n\t        var bucketWidth = edges.right - edges.left;\n\t        var leftBound = _this2.bucketNode.offsetParent ? _this2.bucketNode.offsetParent.offsetWidth - bucketWidth : 0;\n\t\n\t        _this2.setState({\n\t          bucketTop: edges.top,\n\t          bucketBottom: edges.bottom,\n\t          bucketWidth: bucketWidth,\n\t          leftBound: leftBound,\n\t          zoom: zoom\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Catch.prototype.__proto__ || Object.getPrototypeOf(Catch.prototype), 'start', this).call(this);\n\t      this.bootstrap();\n\t      this.checkCollisions();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Catch.prototype.__proto__ || Object.getPrototypeOf(Catch.prototype), 'bootstrap', this).call(this);\n\t      this.onResize();\n\t      this.attachMouseEvents();\n\t      window.addEventListener('resize', this.onResize);\n\t      _.forEach(this.catchableNodes, function (node, key) {\n\t        var catchableRef = this.refs[key + '-catchable'];\n\t        node.addEventListener('animationiteration', catchableRef.reset, false);\n\t      }.bind(this));\n\t    }\n\t  }, {\n\t    key: 'restart',\n\t    value: function restart() {\n\t      var _this3 = this;\n\t\n\t      this.setState({\n\t        stamp: 0\n\t      }, function () {\n\t        _this3.checkCollisions();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      this.setState({\n\t        started: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      if (this.state.started) {\n\t        this.setState({\n\t          paused: true\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      var _this4 = this;\n\t\n\t      if (this.state.paused) {\n\t        this.setState({\n\t          paused: false\n\t        }, function () {\n\t          _this4.checkCollisions();\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'selectCatchable',\n\t    value: function selectCatchable(catchableNode, key) {\n\t      if (!this.state.started || this.state.paused || !this.state.canCatch || !catchableNode.canCatch()) return;\n\t      catchableNode.markCaught();\n\t      if (catchableNode.props.isCorrect) {\n\t        this.correct(catchableNode, key);\n\t      } else {\n\t        this.incorrect(catchableNode, key);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'correct',\n\t    value: function correct(catchable, key) {\n\t      if (this.audio.correct) {\n\t        this.audio.correct.play();\n\t      }\n\t      if (typeof this.props.onCorrect === 'function') {\n\t        this.props.onCorrect.call(this, catchable, key);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'incorrect',\n\t    value: function incorrect(catchable, key) {\n\t      if (this.audio.incorrect) {\n\t        this.audio.incorrect.play();\n\t      }\n\t      if (typeof this.props.onIncorrect === 'function') {\n\t        this.props.onIncorrect.call(this, catchable, key);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'checkCollisions',\n\t    value: function checkCollisions() {\n\t      var time = Date.now();\n\t      if (!this.state.started || this.state.paused) return;\n\t      if (time >= this.state.stamp) {\n\t        this.setState({\n\t          stamp: time + 1000\n\t        });\n\t        var bucketRect = this.bucketNode.getBoundingClientRect();\n\t        _.forEach(this.catchableNodes, function (val, key) {\n\t          if (this.isColliding(bucketRect, val.getBoundingClientRect())) {\n\t            this.selectCatchable(this.refs[key + '-catchable'], key);\n\t          }\n\t        }.bind(this));\n\t        window.requestAnimationFrame(this.checkCollisions);\n\t      } else {\n\t        window.requestAnimationFrame(this.checkCollisions);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isColliding',\n\t    value: function isColliding(bucketRect, catchRect) {\n\t      var xCenter = catchRect.left + (catchRect.right - catchRect.left) / 2;\n\t      var yOffset = (catchRect.bottom - catchRect.top) / 6;\n\t      return bucketRect.top < catchRect.bottom - yOffset && bucketRect.top > catchRect.top + yOffset && xCenter > bucketRect.left && xCenter < bucketRect.right;\n\t    }\n\t  }, {\n\t    key: 'getEdges',\n\t    value: function getEdges(el) {\n\t      var top, left, width, height;\n\t\n\t      left = 0;\n\t      top = 0;\n\t      width = el.offsetWidth;\n\t      height = el.offsetHeight;\n\t\n\t      while (el) {\n\t        if (el.className && el.className.indexOf('screen') !== -1) {\n\t          break;\n\t        }\n\t\n\t        left += el.offsetLeft || 0;\n\t        top += el.offsetTop || 0;\n\t        el = el.offsetParent;\n\t      }\n\t\n\t      return {\n\t        top: top,\n\t        bottom: top + height,\n\t        left: left,\n\t        right: left + width\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var left = this.state.mouseX / this.state.zoom - this.state.bucketWidth / 2;\n\t      if (this.props.bucketInBounds) {\n\t        left = left < 1 ? 1 : left;\n\t        left = left >= this.state.leftBound ? this.state.leftBound - 1 : left;\n\t      }\n\t\n\t      return {\n\t        left: left + 'px'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'renderBucket',\n\t    value: function renderBucket() {\n\t      return React.createElement(this.props.bucket.type, _extends({}, this.props.bucket.props, {\n\t        ref: 'bucket',\n\t        style: this.getStyle()\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'renderCatchables',\n\t    value: function renderCatchables() {\n\t      return this.props.catchables.map(function (item, key) {\n\t        return React.createElement(_3.default, _extends({}, item.props, {\n\t          key: key,\n\t          ref: key + '-catchable'\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClasses',\n\t    value: function getClasses() {\n\t      var classes = '';\n\t\n\t      if (this.state.complete || this.props.isComplete) classes += ' COMPLETE';\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { ref: 'catch-component', className: 'catch ' + this.getClasses() },\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'items' },\n\t          this.renderCatchables()\n\t        ),\n\t        this.renderBucket()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Catch;\n\t}(skoash.Component);\n\t\n\tCatch.defaultProps = _.merge(skoash.Component.defaultProps, {\n\t  catchables: [],\n\t  bucketInBounds: true\n\t});\n\t\n\texports.default = Catch;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _2 = __webpack_require__(31);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Catcher = function (_Catch) {\n\t  _inherits(Catcher, _Catch);\n\t\n\t  function Catcher(props) {\n\t    _classCallCheck(this, Catcher);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Catcher.__proto__ || Object.getPrototypeOf(Catcher)).call(this, props));\n\t\n\t    _this.state = _.defaults({\n\t      styles: []\n\t    }, _this.state);\n\t\n\t    _this.moveEvent = _this.moveEvent.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Catcher, [{\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      skoash.Component.prototype.bootstrap.call(this);\n\t      window.addEventListener('resize', this.onResize);\n\t      this.onResize();\n\t\n\t      if (this.props.moveBuckets) {\n\t        window.addEventListener('mousemove', this.moveEvent);\n\t        window.addEventListener('touchmove', this.moveEvent);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      this.props.onMove.call(this, e);\n\t    }\n\t  }, {\n\t    key: 'onReady',\n\t    value: function onReady() {\n\t      this.bucketNodes = _.reduce(this.refs, function (a, v, k) {\n\t        if (k.indexOf('buckets-')) return a;\n\t        a[k] = ReactDOM.findDOMNode(v);\n\t        return a;\n\t      }, {});\n\t    }\n\t  }, {\n\t    key: 'onResize',\n\t    value: function onResize() {\n\t      var _this2 = this;\n\t\n\t      skoash.trigger('getState').then(function (state) {\n\t        var zoom = state.scale;\n\t        _this2.setState({\n\t          zoom: zoom\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'checkCollisions',\n\t    value: function checkCollisions() {\n\t      var _this3 = this;\n\t\n\t      if (!this.state.started || this.state.paused) return;\n\t      _.each(this.bucketNodes, function (bucketNode, bucketRefKey) {\n\t        var bucketRect = bucketNode.getBoundingClientRect();\n\t        _.each(_this3.props.catchableRefs, function (catchableRef) {\n\t          if (_this3.isColliding(bucketRect, catchableRef.DOMNode.getBoundingClientRect())) {\n\t            _this3.selectCatchable(_this3.refs[bucketRefKey], catchableRef);\n\t          }\n\t        });\n\t      });\n\t\n\t      window.requestAnimationFrame(this.checkCollisions);\n\t    }\n\t  }, {\n\t    key: 'isColliding',\n\t    value: function isColliding(bucketRect, catchRect) {\n\t      var bucketCorners = [],\n\t          catchableCorners = [];\n\t\n\t      for (var i = 0; i < 4; i++) {\n\t        bucketCorners.push({\n\t          x: bucketRect.left + bucketRect.width * (i === 1 || i === 2 ? 1 : 0),\n\t          y: bucketRect.top + bucketRect.height * (i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      for (var _i = 0; _i < 4; _i++) {\n\t        catchableCorners.push({\n\t          x: catchRect.left + catchRect.width * (_i === 1 || _i === 2 ? 1 : 0),\n\t          y: catchRect.top + catchRect.height * (_i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      return skoash.util.doIntersect(bucketCorners, catchableCorners);\n\t    }\n\t  }, {\n\t    key: 'selectCatchable',\n\t    value: function selectCatchable(bucketRef, catchableRef) {\n\t      if (!this.state.started || this.state.paused || !this.state.canCatch || !this.props.canCatch || !catchableRef.canCatch()) return;\n\t      catchableRef.markCaught();\n\t      if (catchableRef.props.message === bucketRef.props.message) {\n\t        this.correct(bucketRef, catchableRef);\n\t      } else {\n\t        this.incorrect(bucketRef, catchableRef);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'correct',\n\t    value: function correct(bucketRef, catchableRef) {\n\t      this.playMedia('correct');\n\t      this.props.onCorrect.call(this, bucketRef, catchableRef);\n\t    }\n\t  }, {\n\t    key: 'incorrect',\n\t    value: function incorrect(bucketRef, catchableRef) {\n\t      this.playMedia('incorrect');\n\t      this.props.onIncorrect.call(this, bucketRef, catchableRef);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('catcher', _get(Catcher.prototype.__proto__ || Object.getPrototypeOf(Catcher.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'renderBucket',\n\t    value: function renderBucket() {\n\t      var _this4 = this;\n\t\n\t      return _.map([].concat(this.props.bucket), function (bucket, key) {\n\t        return React.createElement(bucket.type, _extends({}, bucket.props, {\n\t          ref: 'buckets-' + key,\n\t          style: _this4.state.styles[key],\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { ref: 'catcher', className: this.getClassNames() },\n\t        this.renderContentList('assets'),\n\t        this.renderBucket()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Catcher;\n\t}(_3.default);\n\t\n\tCatcher.defaultProps = _.defaults({\n\t  moveBuckets: false,\n\t  onMove: _.noop,\n\t  canCatch: true\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Catcher;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Draggable = function (_skoash$Component) {\n\t  _inherits(Draggable, _skoash$Component);\n\t\n\t  function Draggable() {\n\t    _classCallCheck(this, Draggable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this));\n\t\n\t    _this.state = {\n\t      startX: 0,\n\t      startY: 0,\n\t      endX: 0,\n\t      endY: 0,\n\t      zoom: 1\n\t    };\n\t\n\t    _this.mouseDown = _this.mouseDown.bind(_this);\n\t    _this.mouseUp = _this.mouseUp.bind(_this);\n\t\n\t    _this.moveEvent = _this.moveEvent.bind(_this);\n\t\n\t    _this.touchStart = _this.touchStart.bind(_this);\n\t    _this.touchEnd = _this.touchEnd.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Draggable, [{\n\t    key: 'shouldDrag',\n\t    value: function shouldDrag() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'incomplete',\n\t    value: function incomplete() {\n\t      this.markIncorrect();\n\t      this.returnToStart();\n\t\n\t      _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'incomplete', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'markCorrect',\n\t    value: function markCorrect() {\n\t      this.setState({\n\t        correct: true\n\t      });\n\t    }\n\t  }, {\n\t    key: 'markIncorrect',\n\t    value: function markIncorrect() {\n\t      this.setState({\n\t        correct: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'startEvent',\n\t    value: function startEvent(e, cb) {\n\t      var pageX, pageY, rect, startX, startY, endX, endY, grabX, grabY;\n\t\n\t      if (e.target !== this.refs.el) return;\n\t      if (!this.shouldDrag()) return;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        pageX = e.targetTouches[0].pageX;\n\t        pageY = e.targetTouches[0].pageY;\n\t        rect = e.target.getBoundingClientRect();\n\t        e = e.targetTouches[0];\n\t        e.offsetX = pageX - rect.left;\n\t        e.offsetY = pageY - rect.top;\n\t      }\n\t\n\t      grabX = e.offsetX;\n\t      grabY = e.offsetY;\n\t\n\t      startX = endX = e.pageX - grabX;\n\t      startY = endY = e.pageY - grabY;\n\t\n\t      if (!this.state.firstX) {\n\t        this.setState({\n\t          firstX: startX,\n\t          firstY: startY\n\t        });\n\t      }\n\t\n\t      if (!this.props.return) {\n\t        startX = _.isFinite(this.state.grabX) ? this.state.startX + this.state.grabX - grabX : startX;\n\t        startY = _.isFinite(this.state.grabY) ? this.state.startY + this.state.grabY - grabY : startY;\n\t      }\n\t\n\t      this.setState({\n\t        dragging: true,\n\t        return: false,\n\t        startX: startX,\n\t        startY: startY,\n\t        grabX: grabX,\n\t        grabY: grabY,\n\t        endX: endX,\n\t        endY: endY\n\t      });\n\t\n\t      if (typeof this.props.dragRespond === 'function') {\n\t        this.props.dragRespond(this.props.message);\n\t      }\n\t\n\t      if (typeof cb === 'function') {\n\t        cb.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'attachMouseEvents',\n\t    value: function attachMouseEvents() {\n\t      window.addEventListener('mousemove', this.moveEvent);\n\t      window.addEventListener('mouseup', this.mouseUp);\n\t    }\n\t  }, {\n\t    key: 'attachTouchEvents',\n\t    value: function attachTouchEvents() {\n\t      window.addEventListener('touchmove', this.moveEvent);\n\t      window.addEventListener('touchend', this.touchEnd);\n\t    }\n\t  }, {\n\t    key: 'mouseDown',\n\t    value: function mouseDown(e) {\n\t      this.startEvent(e, this.attachMouseEvents);\n\t    }\n\t  }, {\n\t    key: 'touchStart',\n\t    value: function touchStart(e) {\n\t      this.startEvent(e, this.attachTouchEvents);\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t        e.pageY = e.targetTouches[0].pageY;\n\t      }\n\t\n\t      this.setState({\n\t        endX: e.pageX - this.state.grabX,\n\t        endY: e.pageY - this.state.grabY\n\t      });\n\t    }\n\t  }, {\n\t    key: 'returnToStart',\n\t    value: function returnToStart() {\n\t      if (this.state.firstX) {\n\t        this.setState({\n\t          dragging: false,\n\t          return: true,\n\t          endX: this.state.firstX,\n\t          endY: this.state.firstY\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'endEvent',\n\t    value: function endEvent(cb) {\n\t      this.dropRespond();\n\t\n\t      if (this.props.return) {\n\t        this.returnToStart();\n\t      } else {\n\t        this.setState({\n\t          dragging: false,\n\t          return: this.state.return\n\t        });\n\t      }\n\t\n\t      if (typeof cb === 'function') {\n\t        cb.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'detachMouseEvents',\n\t    value: function detachMouseEvents() {\n\t      window.removeEventListener('mousemove', this.moveEvent);\n\t      window.removeEventListener('mouseup', this.mouseUp);\n\t    }\n\t  }, {\n\t    key: 'detachTouchEvents',\n\t    value: function detachTouchEvents() {\n\t      window.removeEventListener('touchmove', this.moveEvent);\n\t      window.removeEventListener('touchend', this.touchEnd);\n\t    }\n\t  }, {\n\t    key: 'mouseUp',\n\t    value: function mouseUp() {\n\t      this.endEvent(this.detachMouseEvents);\n\t    }\n\t  }, {\n\t    key: 'touchEnd',\n\t    value: function touchEnd() {\n\t      this.endEvent(this.detachTouchEvents);\n\t    }\n\t  }, {\n\t    key: 'dropRespond',\n\t    value: function dropRespond() {\n\t      var corners;\n\t\n\t      corners = this.setCorners();\n\t\n\t      if (typeof this.props.dropRespond === 'function') {\n\t        this.props.dropRespond(this.props.message, corners);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setCorners',\n\t    value: function setCorners() {\n\t      var top,\n\t          left,\n\t          width,\n\t          height,\n\t          el,\n\t          corners = [];\n\t\n\t      left = 0;\n\t      top = 0;\n\t      el = this.refs.el;\n\t      width = el.offsetWidth;\n\t      height = el.offsetHeight;\n\t\n\t      while (el) {\n\t        if (el.className.indexOf('screen') !== -1) {\n\t          break;\n\t        }\n\t\n\t        left += el.offsetLeft || 0;\n\t        top += el.offsetTop || 0;\n\t        el = el.offsetParent;\n\t      }\n\t\n\t      left += (this.state.endX - this.state.startX) / this.state.zoom;\n\t      top += (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t      for (var i = 0; i < 4; i++) {\n\t        corners.push({\n\t          x: left + width * (i === 1 || i === 2 ? 1 : 0),\n\t          y: top + height * (i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      this.setState({\n\t        corners: corners\n\t      });\n\t\n\t      return corners;\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bootstrap();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'bootstrap', this).call(this);\n\t\n\t      this.setZoom();\n\t\n\t      this.refs.el.addEventListener('mousedown', this.mouseDown);\n\t      this.refs.el.addEventListener('touchstart', this.touchStart);\n\t\n\t      window.addEventListener('resize', this.setZoom.bind(this));\n\t    }\n\t  }, {\n\t    key: 'setZoom',\n\t    value: function setZoom() {\n\t      var _this2 = this;\n\t\n\t      skoash.trigger('getState').then(function (state) {\n\t        _this2.setState({\n\t          zoom: state.scale\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var x, y;\n\t\n\t      x = (this.state.endX - this.state.startX) / this.state.zoom;\n\t      y = (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t      return {\n\t        transform: 'translateX(' + x + 'px) translateY(' + y + 'px)',\n\t        WebkitTransform: 'translateX(' + x + 'px) translateY(' + y + 'px)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      var _classNames;\n\t\n\t      return (0, _classnames2.default)((_classNames = {\n\t        draggable: true\n\t      }, _defineProperty(_classNames, this.props.className, this.props.className), _defineProperty(_classNames, this.props.message, this.props.message), _defineProperty(_classNames, 'DRAGGING', this.state.dragging), _defineProperty(_classNames, 'RETURN', this.state.return), _defineProperty(_classNames, 'CORRECT', this.state.correct), _classNames), _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          ref: 'el',\n\t          className: this.getClassNames(),\n\t          style: this.getStyle()\n\t        },\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Draggable;\n\t}(skoash.Component);\n\t\n\texports.default = Draggable;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _2 = __webpack_require__(33);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(2);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(9);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Dropper = function (_Draggable) {\n\t  _inherits(Dropper, _Draggable);\n\t\n\t  function Dropper() {\n\t    _classCallCheck(this, Dropper);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Dropper.__proto__ || Object.getPrototypeOf(Dropper)).call(this));\n\t\n\t    _this.state = _.defaults({\n\t      items: {},\n\t      itemCount: 0,\n\t      itemEndXs: {},\n\t      direction: ''\n\t    }, _this.state);\n\t\n\t    _this.next = _this.next.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Dropper, [{\n\t    key: 'next',\n\t    value: function next(on) {\n\t      var _this2 = this;\n\t\n\t      var items, index;\n\t\n\t      if (!this.state.started || !this.props.on && !on) return;\n\t\n\t      index = this.state.itemCount;\n\t      items = this.state.items;\n\t      items[index] = this.refs.bin.get(1)[0];\n\t\n\t      this.setState({\n\t        items: items,\n\t        itemCount: index + 1\n\t      }, function () {\n\t        var timeoutFunction = function timeoutFunction(i) {\n\t          var itemRef, itemEndXs;\n\t          itemRef = _this2.refs['items-' + index];\n\t          if (itemRef) {\n\t            itemRef.addClassName(_this2.props.prepClasses[i]);\n\t            _this2.props.onAddClassName.call(_this2, _this2.props.prepClasses[i]);\n\t            if (i === _this2.props.prepClasses.length - 1) {\n\t              itemEndXs = _this2.state.itemEndXs;\n\t              itemEndXs[index] = _this2.state.endX;\n\t              ReactDOM.findDOMNode(itemRef).addEventListener('transitionend', function () {\n\t                items = _this2.state.items;\n\t                delete items[index];\n\t                _this2.setState({\n\t                  items: items,\n\t                  itemEndXs: itemEndXs\n\t                });\n\t              });\n\t            }\n\t          }\n\t\n\t          if (i === _this2.props.prepClasses.length) _this2.next();\n\t        };\n\t\n\t        var _loop = function _loop(i) {\n\t          setTimeout(function () {\n\t            timeoutFunction(i);\n\t          }, i * _this2.props.prepTimeout);\n\t        };\n\t\n\t        for (var i = 0; i <= _this2.props.prepClasses.length; i++) {\n\t          _loop(i);\n\t        }\n\t\n\t        _this2.updateGameState({\n\t          path: _this2.props.refsTarget,\n\t          data: {\n\t            refs: _.filter(_this2.refs, function (v, k) {\n\t              return !k.indexOf('items-');\n\t            })\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      var endX;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t      }\n\t\n\t      endX = Math.min(Math.max(e.pageX - this.state.grabX, this.props.leftBound), this.props.rightBound);\n\t\n\t      this.setState({\n\t        endX: endX,\n\t        direction: endX > this.state.endX ? 'right' : 'left'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Dropper.prototype.__proto__ || Object.getPrototypeOf(Dropper.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.on === true && props.on !== this.props.on) {\n\t        this.next(true);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getItemStyle',\n\t    value: function getItemStyle(key, style) {\n\t      var endX, x;\n\t\n\t      endX = this.state.itemEndXs[key] || this.state.endX;\n\t      x = (endX - this.state.startX) / this.state.zoom;\n\t\n\t      return _.defaults({\n\t        transform: 'translateX(' + x + 'px)',\n\t        WebkitTransform: 'translateX(' + x + 'px)'\n\t      }, style);\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var x = (this.state.endX - this.state.startX) / this.state.zoom;\n\t\n\t      return {\n\t        transform: 'translateX(' + x + 'px)',\n\t        WebkitTransform: 'translateX(' + x + 'px)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('dropper', this.state.direction, _get(Dropper.prototype.__proto__ || Object.getPrototypeOf(Dropper.prototype), 'getClassNames', this).call(this));\n\t    }\n\t\n\t    /*\n\t     * shortid is intentionally not used for key here because we want to make sure\n\t     * that the element is transitioned and not replaced.\n\t     */\n\t\n\t  }, {\n\t    key: 'renderItems',\n\t    value: function renderItems() {\n\t      var _this3 = this;\n\t\n\t      return _.map(this.state.items, function (item, key) {\n\t        var ref = 'items-' + key;\n\t        if (!item) return null;\n\t        return React.createElement(item.type, _extends({}, item.props, {\n\t          style: _this3.getItemStyle(key, item.props.style),\n\t          'data-ref': ref,\n\t          'data-message': item.props.message,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t        ref: 'bin'\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          className: this.getClassNames()\n\t        },\n\t        this.renderBin(),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            ref: 'el',\n\t            className: 'el',\n\t            style: this.getStyle()\n\t          },\n\t          this.renderContentList()\n\t        ),\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'items' },\n\t          this.renderItems()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Dropper;\n\t}(_3.default);\n\t\n\tDropper.defaultProps = _.defaults({\n\t  prepClasses: ['ready', 'set', 'go'],\n\t  prepTimeout: 1000,\n\t  bin: React.createElement(_5.default, {\n\t    bin: [React.createElement(_7.default, null)]\n\t  }),\n\t  onStart: function onStart() {\n\t    this.next();\n\t  },\n\t  leftBound: 0,\n\t  rightBound: 800,\n\t  refsTarget: 'dropper',\n\t  on: true\n\t}, _3.default.defaultProps);\n\t\n\texports.default = Dropper;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"ios-splash\",\n\t      checkComplete: false,\n\t      completeDelay: 6000,\n\t      nextDelay: 3000,\n\t      completeOnStart: true,\n\t      hidePrev: true\n\t    }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball.png\" }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball_anim.gif\" })\n\t  );\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Loader = function (_skoash$Component) {\n\t  _inherits(Loader, _skoash$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        \"div\",\n\t        { id: \"loader\", className: \"center\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"group\" },\n\t          React.createElement(\n\t            \"h2\",\n\t            null,\n\t            \"Loading!\"\n\t          ),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"spinner animated\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"spinner animated\" },\n\t              React.createElement(\"div\", { className: \"spinner animated\" })\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(skoash.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar QuitScreen = function (_skoash$Screen) {\n\t  _inherits(QuitScreen, _skoash$Screen);\n\t\n\t  function QuitScreen() {\n\t    _classCallCheck(this, QuitScreen);\n\t\n\t    return _possibleConstructorReturn(this, (QuitScreen.__proto__ || Object.getPrototypeOf(QuitScreen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuitScreen, [{\n\t    key: 'okay',\n\t    value: function okay() {\n\t      skoash.trigger('quit');\n\t    }\n\t  }, {\n\t    key: 'cancel',\n\t    value: function cancel() {\n\t      this.close();\n\t      skoash.trigger('menuClose', {\n\t        id: this.props.id\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      if (this.props.assets) {\n\t        return this.props.assets.map(function (asset, key) {\n\t          return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t            ref: asset.ref || asset.props['data-ref'] || 'asset-' + key,\n\t            key: key,\n\t            'data-ref': key\n\t          }));\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { id: this.props.id, className: 'screen ' + this.getClassNames() },\n\t        this.renderAssets(),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'center' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'frame' },\n\t            React.createElement(\n\t              'h2',\n\t              null,\n\t              'Are you sure you',\n\t              React.createElement('br', null),\n\t              'want to quit?'\n\t            ),\n\t            React.createElement(\n\t              'h3',\n\t              null,\n\t              'Your game progress will be saved'\n\t            ),\n\t            React.createElement('button', { className: 'quit-yes', onClick: this.okay.bind(this) }),\n\t            React.createElement('button', { className: 'quit-no', onClick: this.cancel.bind(this) })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuitScreen;\n\t}(skoash.Screen);\n\t\n\texports.default = React.createElement(QuitScreen, {\n\t  id: 'quit'\n\t});\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _lodash = __webpack_require__(12);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Reveal = function (_skoash$Component) {\n\t  _inherits(Reveal, _skoash$Component);\n\t\n\t  function Reveal() {\n\t    _classCallCheck(this, Reveal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Reveal.__proto__ || Object.getPrototypeOf(Reveal)).call(this));\n\t\n\t    _this.state = {\n\t      openReveal: '',\n\t      currentlyOpen: []\n\t    };\n\t\n\t    _this.index = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Reveal, [{\n\t    key: 'incomplete',\n\t    value: function incomplete() {\n\t      this.setState({\n\t        openReveal: '',\n\t        currentlyOpen: []\n\t      });\n\t\n\t      _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'incomplete', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(message) {\n\t      var self = this;\n\t      var currentlyOpen = this.state.currentlyOpen.concat(message);\n\t\n\t      self.setState({\n\t        open: true,\n\t        currentlyOpen: currentlyOpen,\n\t        openReveal: '' + message\n\t      });\n\t\n\t      self.playAudio(message);\n\t\n\t      if (self.props.completeOnOpen) {\n\t        self.complete();\n\t      } else {\n\t        self.requireForComplete.map(function (key) {\n\t          if (key === message && self.refs[key]) {\n\t            self.refs[key].complete();\n\t          }\n\t        });\n\t      }\n\t\n\t      if (self.props.autoClose) {\n\t        setTimeout(function () {\n\t          self.close();\n\t        }, 2000);\n\t      }\n\t\n\t      if (self.props.openTarget) {\n\t        self.updateGameState({\n\t          path: self.props.openTarget,\n\t          data: {\n\t            open: '' + message\n\t          }\n\t        });\n\t      }\n\t\n\t      self.props.onOpen.call(self, message);\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      var prevMessage = this.state.openReveal;\n\t      var currentlyOpen = this.state.currentlyOpen;\n\t      currentlyOpen.splice(currentlyOpen.indexOf(prevMessage), 1);\n\t\n\t      this.setState({\n\t        open: false,\n\t        openReveal: '',\n\t        currentlyOpen: currentlyOpen\n\t      });\n\t\n\t      if (!opts.silent && this.audio['close-sound']) {\n\t        this.audio['close-sound'].play();\n\t      }\n\t\n\t      this.props.onClose.call(this, prevMessage);\n\t\n\t      if (typeof this.props.closeRespond === 'function') {\n\t        this.props.closeRespond(prevMessage);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'start', this).call(this);\n\t      if (this.props.openOnStart != null) {\n\t        this.open(this.props.openOnStart);\n\t      } else if (this.props.start && typeof this.props.start === 'function') {\n\t        this.props.start.call(this);\n\t      } else {\n\t        this.close({ silent: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'playAudio',\n\t    value: function playAudio(message) {\n\t      var _this2 = this;\n\t\n\t      var messages;\n\t\n\t      if ('' + parseInt(message, 10) === message) {\n\t        message = 'asset-' + message;\n\t      }\n\t\n\t      if (!message) return;\n\t\n\t      if (this.audio['open-sound']) {\n\t        this.audio['open-sound'].play();\n\t      }\n\t\n\t      if (typeof message === 'string') {\n\t        messages = message.split(' ');\n\t        messages.map(function (audio) {\n\t          audio = 'asset-' + audio;\n\t          if (_this2.audio[audio]) {\n\t            _this2.audio[audio].play();\n\t          } else if (_this2.media[audio] && typeof _this2.media[audio].play === 'function') {\n\t            _this2.media[audio].play();\n\t          }\n\t        });\n\t      } else {\n\t        if (this.audio.voiceOver[message]) {\n\t          this.audio.voiceOver[message].play();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      if (this.props.assets) {\n\t        return this.props.assets.map(function (asset, key) {\n\t          var ref = 'asset-';\n\t          ref += asset.ref || asset.props['data-ref'] || key;\n\t          return React.createElement(asset.type, _extends({}, asset.props, {\n\t            'data-ref': key,\n\t            ref: ref,\n\t            key: key\n\t          }));\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this3 = this;\n\t\n\t      var list = this.props.list;\n\t\n\t      return list.map(function (li, key) {\n\t        var dataRef = li.props['data-ref'] || key;\n\t        var ref = li.ref || dataRef;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          type: 'li',\n\t          className: _this3.getClass(li, key),\n\t          'data-ref': dataRef,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.openReveal != null && props.openReveal !== this.props.openReveal) {\n\t        this.open(props.openReveal);\n\t      }\n\t\n\t      if (props.closeReveal === true && props.closeReveal !== this.props.closeReveal) {\n\t        this.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(li, key) {\n\t      var classes = '';\n\t\n\t      if (li.props.className) classes = li.props.className;\n\t\n\t      if (this.state.currentlyOpen.indexOf(key) !== -1 || this.state.currentlyOpen.indexOf(li.props['data-ref']) !== -1 || this.state.currentlyOpen.indexOf(li.ref) !== -1) {\n\t        classes = (0, _classnames2.default)(classes, 'OPEN');\n\t      }\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      var classes,\n\t          open = 'open-none ';\n\t\n\t      if (this.state.open) {\n\t        open = '';\n\t        this.state.currentlyOpen.forEach(function (ref) {\n\t          open += 'open-' + ref + ' ';\n\t        });\n\t        open += 'OPEN';\n\t      }\n\t\n\t      classes = (0, _classnames2.default)('reveal', open, _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'getClassNames', this).call(this));\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        this.renderAssets(),\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'ul',\n\t            null,\n\t            this.renderList()\n\t          ),\n\t          React.createElement('button', { className: 'close-reveal', onClick: this.close.bind(this) })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Reveal;\n\t}(skoash.Component);\n\t\n\tReveal.defaultProps = _lodash2.default.defaults({\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  onOpen: _lodash2.default.noop,\n\t  onClose: _lodash2.default.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Reveal;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Selectable = function (_skoash$Component) {\n\t  _inherits(Selectable, _skoash$Component);\n\t\n\t  function Selectable() {\n\t    _classCallCheck(this, Selectable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Selectable.__proto__ || Object.getPrototypeOf(Selectable)).call(this));\n\t\n\t    _this.state = {\n\t      classes: {},\n\t      selectFunction: _this.select\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Selectable, [{\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'start', this).call(this);\n\t\n\t      var selectClass,\n\t          selectFunction,\n\t          classes = {};\n\t\n\t      selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n\t      selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\t\n\t      if (this.props.selectOnStart) {\n\t        classes[this.props.selectOnStart] = selectClass;\n\t      }\n\t\n\t      this.setState({\n\t        started: true,\n\t        classes: classes,\n\t        selectFunction: selectFunction,\n\t        selectClass: selectClass\n\t      });\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'bootstrap', this).call(this);\n\t\n\t      var self = this;\n\t\n\t      var correctAnswers = this.requireForComplete.filter(function (ref) {\n\t        return self.refs[ref].props.correct;\n\t      });\n\t\n\t      if (correctAnswers.length > 0) {\n\t        this.requireForComplete = correctAnswers;\n\t      }\n\t\n\t      if (this.refs.bin) {\n\t        this.setState({\n\t          list: this.refs.bin.getAll()\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'selectHelper',\n\t    value: function selectHelper(e, classes) {\n\t      var ref,\n\t          dataRef,\n\t          target,\n\t          id,\n\t          isCorrect,\n\t          self = this;\n\t\n\t      target = e.target.closest('LI');\n\t\n\t      if (!target) return;\n\t\n\t      dataRef = target.getAttribute('data-ref');\n\t      ref = self.refs[dataRef];\n\t\n\t      isCorrect = ref && ref.props && ref.props.correct || !self.props.answers || !self.props.answers.length || self.props.answers.indexOf(dataRef) !== -1;\n\t\n\t      if (self.props.allowDeselect && classes[dataRef]) {\n\t        delete classes[dataRef];\n\t      } else if (isCorrect) {\n\t        classes[dataRef] = self.state.selectClass;\n\t      }\n\t\n\t      self.setState({\n\t        classes: classes\n\t      });\n\t\n\t      self.props.selectRespond.call(self, dataRef);\n\t      self.props.onSelect.call(self, dataRef);\n\t\n\t      if (self.props.chooseOne) {\n\t        self.requireForComplete = [dataRef];\n\t      }\n\t\n\t      if (self.props.dataTarget) {\n\t        self.updateGameState({\n\t          path: self.props.dataTarget,\n\t          data: {\n\t            target: ref\n\t          }\n\t        });\n\t      }\n\t\n\t      if (self.props.completeListOnClick) {\n\t        self.requireForComplete.map(function (key) {\n\t          if (key === id && self.refs[id]) {\n\t            self.refs[id].complete();\n\t          }\n\t        });\n\t      }\n\t\n\t      self.requireForComplete.map(function (key) {\n\t        if (key === dataRef && self.refs[key]) {\n\t          self.refs[key].complete();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'select',\n\t    value: function select(e) {\n\t      var classes = [];\n\t      this.selectHelper(e, classes);\n\t    }\n\t  }, {\n\t    key: 'highlight',\n\t    value: function highlight(e) {\n\t      var classes = this.state.classes;\n\t      this.selectHelper(e, classes);\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key, li) {\n\t      return (0, _classnames2.default)(li.props.className, this.state.classes[key], this.state.classes[li.props['data-ref']], this.state.classes[li.props['data-key']]);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('selectable', _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'checkComplete',\n\t    value: function checkComplete() {\n\t      var self = this,\n\t          complete;\n\t\n\t      if (this.props.checkComplete === false) return;\n\t\n\t      complete = self.requireForComplete.every(function (key) {\n\t        if (self.refs[key] instanceof Node) {\n\t          return true;\n\t        }\n\t        if (!self.refs[key].state || self.refs[key].state && !self.refs[key].state.complete) {\n\t          if (typeof self.refs[key].checkComplete === 'function') {\n\t            self.refs[key].checkComplete();\n\t          }\n\t          return false;\n\t        }\n\t        return true;\n\t      });\n\t\n\t      if (complete && !self.state.complete) {\n\t        self.complete();\n\t      } else if (self.state.started && !complete && self.state.complete) {\n\t        self.incomplete();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      if (!this.props.bin) return null;\n\t\n\t      return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t        ref: 'bin'\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this2 = this;\n\t\n\t      var list = this.props.list || this.state.list;\n\t      return list.map(function (li, key) {\n\t        var dataRef = li.props['data-ref'] || key;\n\t        var ref = li.ref || li.props.id || dataRef;\n\t        var message = li.props.message || '' + key;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          type: 'li',\n\t          className: _this2.getClass(key, li),\n\t          message: message,\n\t          'data-message': message,\n\t          'data-ref': dataRef,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        this.renderBin(),\n\t        React.createElement(\n\t          'ul',\n\t          { className: this.getClassNames(), onClick: this.state.selectFunction.bind(this) },\n\t          this.renderList()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Selectable;\n\t}(skoash.Component);\n\t\n\tSelectable.defaultProps = _.defaults({\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  selectClass: 'SELECTED',\n\t  completeListOnClick: true,\n\t  selectRespond: _.identity,\n\t  onSelect: _.identity\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Selectable;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\twindow.ENVIRONMENT = {\n\t  MEDIA: 'https://media.changemyworldnow.com/'\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tmodule.exports = __webpack_require__(44);\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar alphabet = __webpack_require__(11);\n\t\n\t/**\n\t * Decode the id to get the version and worker\n\t * Mainly for debugging and testing.\n\t * @param id - the shortid-generated id.\n\t */\n\tfunction decode(id) {\n\t    var characters = alphabet.shuffled();\n\t    return {\n\t        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n\t        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n\t    };\n\t}\n\t\n\tmodule.exports = decode;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar randomByte = __webpack_require__(46);\n\t\n\tfunction encode(lookup, number) {\n\t    var loopCounter = 0;\n\t    var done;\n\t\n\t    var str = '';\n\t\n\t    while (!done) {\n\t        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n\t        done = number < (Math.pow(16, loopCounter + 1 ) );\n\t        loopCounter++;\n\t    }\n\t    return str;\n\t}\n\t\n\tmodule.exports = encode;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar alphabet = __webpack_require__(11);\n\tvar encode = __webpack_require__(43);\n\tvar decode = __webpack_require__(42);\n\tvar isValid = __webpack_require__(45);\n\t\n\t// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n\t// This number should be updated every year or so to keep the generated id short.\n\t// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\tvar REDUCE_TIME = 1459707606518;\n\t\n\t// don't change unless we change the algos or REDUCE_TIME\n\t// must be an integer and less than 16\n\tvar version = 6;\n\t\n\t// if you are using cluster or multiple servers use this to make each instance\n\t// has a unique value for worker\n\t// Note: I don't know if this is automatically set when using third\n\t// party cluster solutions such as pm2.\n\tvar clusterWorkerId = __webpack_require__(48) || 0;\n\t\n\t// Counter is used when shortid is called multiple times in one second.\n\tvar counter;\n\t\n\t// Remember the last time shortid was called in case counter is needed.\n\tvar previousSeconds;\n\t\n\t/**\n\t * Generate unique id\n\t * Returns string id\n\t */\n\tfunction generate() {\n\t\n\t    var str = '';\n\t\n\t    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\t\n\t    if (seconds === previousSeconds) {\n\t        counter++;\n\t    } else {\n\t        counter = 0;\n\t        previousSeconds = seconds;\n\t    }\n\t\n\t    str = str + encode(alphabet.lookup, version);\n\t    str = str + encode(alphabet.lookup, clusterWorkerId);\n\t    if (counter > 0) {\n\t        str = str + encode(alphabet.lookup, counter);\n\t    }\n\t    str = str + encode(alphabet.lookup, seconds);\n\t\n\t    return str;\n\t}\n\t\n\t\n\t/**\n\t * Set the seed.\n\t * Highly recommended if you don't want people to try to figure out your id schema.\n\t * exposed as shortid.seed(int)\n\t * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n\t */\n\tfunction seed(seedValue) {\n\t    alphabet.seed(seedValue);\n\t    return module.exports;\n\t}\n\t\n\t/**\n\t * Set the cluster worker or machine id\n\t * exposed as shortid.worker(int)\n\t * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n\t * returns shortid module so it can be chained.\n\t */\n\tfunction worker(workerId) {\n\t    clusterWorkerId = workerId;\n\t    return module.exports;\n\t}\n\t\n\t/**\n\t *\n\t * sets new characters to use in the alphabet\n\t * returns the shuffled alphabet\n\t */\n\tfunction characters(newCharacters) {\n\t    if (newCharacters !== undefined) {\n\t        alphabet.characters(newCharacters);\n\t    }\n\t\n\t    return alphabet.shuffled();\n\t}\n\t\n\t\n\t// Export all other functions as properties of the generate function\n\tmodule.exports = generate;\n\tmodule.exports.generate = generate;\n\tmodule.exports.seed = seed;\n\tmodule.exports.worker = worker;\n\tmodule.exports.characters = characters;\n\tmodule.exports.decode = decode;\n\tmodule.exports.isValid = isValid;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar alphabet = __webpack_require__(11);\n\t\n\tfunction isShortId(id) {\n\t    if (!id || typeof id !== 'string' || id.length < 6 ) {\n\t        return false;\n\t    }\n\t\n\t    var characters = alphabet.characters();\n\t    var len = id.length;\n\t    for(var i = 0; i < len;i++) {\n\t        if (characters.indexOf(id[i]) === -1) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\t\n\tmodule.exports = isShortId;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\t\n\tfunction randomByte() {\n\t    if (!crypto || !crypto.getRandomValues) {\n\t        return Math.floor(Math.random() * 256) & 0x30;\n\t    }\n\t    var dest = new Uint8Array(1);\n\t    crypto.getRandomValues(dest);\n\t    return dest[0] & 0x30;\n\t}\n\t\n\tmodule.exports = randomByte;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// Found this seed-based random generator somewhere\n\t// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\t\n\tvar seed = 1;\n\t\n\t/**\n\t * return a random number based on a seed\n\t * @param seed\n\t * @returns {number}\n\t */\n\tfunction getNextValue() {\n\t    seed = (seed * 9301 + 49297) % 233280;\n\t    return seed/(233280.0);\n\t}\n\t\n\tfunction setSeed(_seed_) {\n\t    seed = _seed_;\n\t}\n\t\n\tmodule.exports = {\n\t    nextValue: getNextValue,\n\t    seed: setSeed\n\t};\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = 0;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** litter-bug/ai.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5033ee76af4f5955aa4d\n **/","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/classnames/index.js\n ** module id = 1\n ** module chunks = 0\n **/","import classNames from 'classnames';\n\nclass Randomizer extends skoash.Component {\n  getAll() {\n    return _.shuffle(this.props.bin);\n  }\n\n  get(amount = 1) {\n    var bin = [];\n\n    if (this.props.remain) {\n      bin = this.state.bin;\n    }\n\n    while (bin.length < amount) {\n      bin = bin.concat(_.shuffle(this.props.bin));\n    }\n\n    if (this.props.remain) {\n      this.setState({bin});\n    }\n\n    return bin.slice(0, amount);\n  }\n\n  getClassNames() {\n    return classNames('randomizer', super.getClassNames());\n  }\n\n  renderBin() {\n    var bin = this.props.bin || [];\n\n    return bin.map((li, key) => {\n      var ref = li.ref || li.props['data-ref'] || key;\n      return (\n        <li.type\n          {...li.props}\n          data-ref={ref}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <ul className={this.getClassNames()}>\n        {this.renderBin()}\n      </ul>\n    );\n  }\n}\n\nRandomizer.defaultProps = _.defaults({\n  bin: [],\n  remain: false,\n  shouldComponentUpdate: () => false,\n}, skoash.Component.defaultProps);\n\nexport default Randomizer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/randomizer/0.1.js\n **/","class MediaCollection extends skoash.Component {\n  play(ref) {\n    if (this.refs[ref]) this.refs[ref].play();\n\n    this.props.onPlay.call(this, ref);\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.play && props.play !== this.props.play) {\n      this.play(props.play);\n    }\n  }\n}\n\nMediaCollection.defaultProps = _.defaults({\n  onPlay: _.identity,\n}, skoash.Component.defaultProps);\n\nexport default MediaCollection;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/media_collection/0.1.js\n **/","import classNames from 'classnames';\n\nclass Score extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      score: 0\n    };\n\n    this.checkComplete = this.checkComplete.bind(this);\n  }\n\n  checkComplete() {\n    if (!this.props.checkComplete || !this.state.ready || !this.requireForComplete) return;\n    if (!this.props.max) return;\n    if ((this.state.score >= this.props.max || this.props.correct >= this.props.max) && !this.state.complete) this.complete();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    this.setState({\n      score: this.props.startingScore\n    });\n  }\n\n  complete() {\n    super.complete();\n\n    setTimeout(() => {\n      if (this.props.resetOnComplete) {\n        this.setScore({\n          correct: 0,\n          incorrect: 0,\n        });\n      }\n    }, this.props.completeDelay);\n  }\n\n  checkScore(props) {\n    if (!props.max) return;\n    if (this.state.score >= props.max && (!this.state.complete || props.multipleCompletes)) {\n      this.complete();\n    } else if (this.state.complete && !props.complete) {\n      this.incomplete();\n    }\n  }\n\n  up(increment) {\n    increment = _.isFinite(increment) ? increment : _.isFinite(this.props.increment) ? this.props.increment : 1;\n    if (!_.isFinite(increment)) throw 'increment must be finite';\n\n    this.updateScore(increment);\n  }\n\n  down(increment) {\n    increment = _.isFinite(increment) ? increment : _.isFinite(this.props.downIncrement) ? this.props.downIncrement : _.isFinite(this.props.increment) ? this.props.increment : 1;\n    if (!_.isFinite(increment)) throw 'increment must be finite';\n\n    this.updateScore(-1 * increment);\n  }\n\n  updateScore(increment) {\n    this.setState({\n      score: this.state.score + increment\n    }, () => {\n      this.updateGameState({\n        path: this.props.dataTarget,\n        data: {\n          score: this.state.score\n        }\n      });\n\n      this.checkScore(this.props);\n      this.props.onUpdateScore.call(this, this.state.score);\n    });\n  }\n\n  setScore(props) {\n    var upIncrement, downIncrement, score;\n\n    if (_.isFinite(props)) {\n      score = props;\n    } else {\n      upIncrement = _.isFinite(props.increment) ? props.increment : 1;\n      downIncrement = _.isFinite(props.downIncrement) ? props.downIncrement :\n        _.isFinite(props.increment) ? props.increment : 1;\n      score = upIncrement * props.correct - downIncrement * props.incorrect;\n    }\n\n    this.setState({\n      score\n    }, () => {\n      this.checkScore(props);\n      this.props.onUpdateScore.call(this, score);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.correct !== this.props.correct ||\n      props.incorrect !== this.props.incorrect) {\n      this.setScore(props);\n    }\n  }\n\n  getClassNames() {\n    return classNames(\n      'score',\n      `score-${this.state.score}`,\n      super.getClassNames()\n    );\n  }\n\n  render() {\n    return (\n      <div {...this.props} className={this.getClassNames()} data-max={this.props.max} data-score={this.state.score} score={this.state.score}>\n        {this.props.leadingContent}\n        <span>\n          {this.state.score}\n        </span>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nScore.defaultProps = _.defaults({\n  checkComplete: false,\n  startingScore: 0,\n  correct: 0,\n  incorrect: 0,\n  onUpdateScore: _.identity,\n}, skoash.Component.defaultProps);\n\nexport default Score;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/score/0.1.js\n **/","import classNames from 'classnames';\n\nclass Timer extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      time: 0,\n      stamp: 0\n    };\n\n    this.checkComplete = this.checkComplete.bind(this);\n  }\n\n  checkComplete() {\n    var time = Date.now();\n\n    if (!this.props.checkComplete) return;\n\n    if (!this.state.started || this.state.paused) return;\n\n    if (time >= this.state.stamp) {\n      this.setState({\n        stamp: time + 1000,\n        time: this.state.time + 1\n      }, () => {\n        if (this.state.time * 1000 >= this.props.timeout) {\n          this.complete();\n          this.stop();\n        } else {\n          window.requestAnimationFrame(this.checkComplete);\n        }\n      });\n    } else {\n      window.requestAnimationFrame(this.checkComplete);\n    }\n  }\n\n  incompleteRefs() {\n    this.restart();\n  }\n\n  restart() {\n    if (!this.state.ready) return;\n    if (this.state.complete) this.incomplete();\n\n    this.setState({\n      time: 0,\n      stamp: 0,\n    }, () => {\n      if (this.state.started) {\n        this.checkComplete();\n      } else {\n        this.start();\n      }\n    });\n  }\n\n  stop() {\n    if (!this.state.started) return;\n    this.setState({\n      started: false\n    });\n  }\n\n  pause() {\n    if (!this.state.started) return;\n    this.setState({\n      paused: true\n    });\n  }\n\n  resume() {\n    if (!this.state.paused) return;\n    this.setState({\n      paused: false\n    }, () => {\n      if (this.state.started) {\n        this.checkComplete();\n      } else {\n        this.start();\n      }\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.restart && props.restart !== this.props.restart) {\n      this.restart();\n    }\n  }\n\n  getClassNames() {\n    return classNames('timer', super.getClassNames());\n  }\n\n  render() {\n    var time = this.props.getTime.call(this);\n    return (\n      <div {...this.props} className={this.getClassNames()} time={time}>\n        {this.props.leadingContent}\n        <span>\n          {time}\n        </span>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nTimer.defaultProps = _.defaults({\n  getTime: function () {\n    return this.props.countDown ? this.props.timeout / 1000 - this.state.time : this.state.time;\n  },\n  leadingContent: '',\n  timeout: 60000,\n  countDown: false,\n}, skoash.Component.defaultProps);\n\nexport default Timer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/timer/0.1.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\n\nimport Score from 'shared/components/score/0.1';\nimport Timer from 'shared/components/timer/0.1';\n\nimport Dropper from 'shared/components/dropper/0.1';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Catcher from 'shared/components/catcher/0.1';\nimport Catchable from 'shared/components/catchable/0.1';\n\nimport Reveal from 'shared/components/reveal/0.1';\n\nexport default function (props, ref, key, opts = {}) {\n  var onOpenReveal,\n    onCloseReveal,\n    onScoreComplete,\n    getTime,\n    onTimerComplete,\n    onAddClassName,\n    onCorrectCatch,\n    onIncorrectCatch,\n    onMove,\n    bin;\n\n  onOpenReveal = function () {\n    this.updateGameState({\n      path: 'game',\n      data: {\n        stop: true,\n        start: false,\n      },\n    });\n  };\n\n  onCloseReveal = function (prevMessage) {\n    this.updateGameState({\n      path: 'game',\n      data: {\n        stop: false,\n        start: true,\n      },\n    });\n    this.updateGameState({\n      path: 'reveal',\n      data: {\n        close: false,\n      }\n    });\n    this.updateGameState({\n      path: 'openReveal',\n      data: null,\n    });\n    this.updateGameState({\n      path: 'score',\n      data: {\n        correct: 0,\n        incorrect: 0,\n      }\n    });\n\n    if (prevMessage === 'level-up') {\n      skoash.Screen.prototype.goto(parseInt(key, 10) + 1);\n    }\n  };\n\n  onScoreComplete = function () {\n    this.updateGameState({\n      path: 'openReveal',\n      data: 'level-up',\n    });\n    this.updateGameState({\n      path: 'game',\n      data: {\n        complete: true,\n      },\n    });\n  };\n\n  getTime = function () {\n    var timeLeft, minutesLeft, secondsLeft;\n    timeLeft = this.props.timeout / 1000 - this.state.time;\n    minutesLeft = Math.floor(timeLeft / 60);\n    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n    secondsLeft = timeLeft % 60;\n    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n    return `${minutesLeft}:${secondsLeft}`;\n  };\n\n  onTimerComplete = function () {\n    if (_.get(props, 'data.openReveal') === 'level-up') return;\n    this.updateGameState({\n      path: 'openReveal',\n      data: 'try-again',\n    });\n  };\n\n  onAddClassName = function (className) {\n    if (className === 'go') return;\n    this.updateGameState({\n      path: 'sfx',\n      data: {\n        playing: 'print'\n      }\n    });\n  };\n\n  onCorrectCatch = function (bucketRef) {\n    bucketRef.addClassName('correct');\n    setTimeout(() => {\n      bucketRef.removeClassName('correct');\n    }, 1000);\n    this.updateGameState({\n      path: 'score',\n      data: {\n        correct: _.get(props, 'data.score.correct', 0) + 1,\n      },\n    });\n  };\n\n  onIncorrectCatch = function (bucketRef) {\n    bucketRef.addClassName('incorrect');\n    setTimeout(() => {\n      bucketRef.removeClassName('incorrect');\n    }, 1000);\n    this.updateGameState({\n      path: 'score',\n      data: {\n        incorrect: _.get(props, 'data.score.incorrect', 0) + 1,\n      },\n    });\n  };\n\n  onMove = function (e) {\n    var rect, styles;\n\n    if (e.target !== this.refs.catcher) return;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      rect = e.target.getBoundingClientRect();\n      e = e.targetTouches[0];\n      e.offsetY = e.pageY - rect.top;\n    }\n\n    styles = this.state.styles;\n\n    styles[0] = {\n      top: Math.min(e.offsetY, 360),\n    };\n\n    this.setState({\n      styles,\n    });\n  };\n\n  bin = [];\n  for (let i = 0; i < opts.bin.length; i++) {\n    for (let j = 0; j < opts.rows; j++) {\n      bin.push(\n        <Catchable\n          className={opts.bin[i].className}\n          message={opts.bin[i].message}\n          style={{\n            top: 400 * (j + .4) / opts.rows,\n          }}\n        />\n      );\n    }\n  }\n\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id={opts.id}\n    >\n      <MediaCollection\n        play={_.get(props, 'data.reveal.open')}\n        children={opts.vos}\n      />\n      <MediaCollection\n        play={_.get(props, 'data.sfx.playing')}\n        children={opts.sfx}\n      />\n      <skoash.Component className=\"bottom\">\n        <div className=\"level\">\n          {opts.level}\n        </div>\n        <Score\n          className=\"mr-eco-score\"\n          max={100}\n          increment={10}\n          correct={_.get(props, 'data.score.correct', 0)}\n          onComplete={onScoreComplete}\n        >\n          <div />\n        </Score>\n        <Score\n          className=\"litter-bug-score\"\n          max={100}\n          increment={10}\n          correct={_.get(props, 'data.score.incorrect', 0)}\n          complete={_.get(props, 'data.game.complete', false)}\n          onComplete={onTimerComplete}\n        >\n          <div />\n        </Score>\n        <Timer\n          countDown\n          timeout={opts.timeout}\n          getTime={getTime}\n          stop={_.get(props, 'data.game.complete', false)}\n          complete={_.get(props, 'data.game.complete', false)}\n          checkComplete={_.get(props, 'data.game.start', false)}\n          restart={_.get(props, 'data.game.start', false)}\n          onComplete={onTimerComplete}\n        />\n      </skoash.Component>\n      <skoash.Component className=\"main\">\n        <Dropper\n          leftBound={70}\n          rightBound={820}\n          on={_.get(props, 'data.game.start', false)}\n          start={_.get(props, 'data.game.start', false)}\n          stop={_.get(props, 'data.game.complete', false)}\n          prepClasses={['ready', 'go']}\n          prepTimeout={opts.prepTimeout}\n          onAddClassName={onAddClassName}\n          bin={\n            <Randomizer\n              completeOnStart\n              checkComplete={false}\n              bin={bin}\n            />\n          }\n        >\n        </Dropper>\n        <Catcher\n          completeOnStart\n          checkComplete={false}\n          start={_.get(props, 'data.game.start', false)}\n          canCatch={_.get(props, 'data.game.start', false)}\n          moveBuckets\n          onMove={onMove}\n          bucket={[\n            <skoash.Component className=\"mr-eco\" message=\"trash\" />,\n          ]}\n          catchableRefs={_.get(props, 'data.dropper.refs', [])}\n          onCorrect={onCorrectCatch}\n          onIncorrect={onIncorrectCatch}\n          assets={[\n            <skoash.Audio\n              type=\"voiceOver\"\n              ref=\"correct\"\n              src={'media/_assets/_sounds/_effects/WinPoints.mp3'}\n            />,\n            <skoash.Audio\n              type=\"voiceOver\"\n              ref=\"incorrect\"\n              src={'media/_assets/_sounds/_effects/LosePoints.mp3'}\n            />,\n          ]}\n        />\n      </skoash.Component>\n      <Reveal\n        openOnStart={opts.openOnStart}\n        openTarget=\"reveal\"\n        openReveal={_.get(props, 'data.openReveal', false)}\n        closeReveal={_.get(props, 'data.reveal.close', false)}\n        onClose={onCloseReveal}\n        onOpen={onOpenReveal}\n        list={opts.revealList}\n      />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_screen_component.js\n **/","import classNames from 'classnames';\n\nconst BALL = 'ball';\n\nclass Cannon extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      classes: {}\n    }\n\n    this.fire = this.fire.bind(this);\n    this.reload = this.reload.bind(this);\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    var list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\n    this.setState({\n      list\n    });\n  }\n\n  start() {\n    super.start();\n    this.next();\n  }\n\n  next() {\n    var classes, list;\n    classes = this.state.classes;\n    list = this.state.list;\n    if (this.props.reverseReload) {\n      list = this.refs.bin.get(1).concat(list);\n      list.pop();\n    } else {\n      list = list.concat(this.refs.bin.get(1));\n      list.shift();\n    }\n    classes[this.state.list.length - 1] = 'LOADED';\n    this.enabled = true;\n\n    this.setState({\n      classes,\n      list\n    });\n  }\n\n  fire() {\n    this.setState({\n      fire: true,\n      reload: false\n    }, () => {\n      setTimeout(() => {\n        this.reload();\n      }, 500);\n    });\n\n    if (typeof this.props.onFire === 'function') {\n      this.props.onFire.call(this);\n    }\n\n    this.next();\n  }\n\n  reload() {\n    this.setState({\n      fire: false,\n      reload: true\n    });\n\n    if (typeof this.props.onReload === 'function') {\n      this.props.onReload.call(this);\n    }\n  }\n\n  getClassNames() {\n    return classNames('cannon', {\n      FIRE: this.state.fire,\n      RELOAD: this.state.reload\n    }, super.getClassNames());\n  }\n\n  getClass(key, li) {\n    return classNames(\n      'ammo',\n      li.props.className,\n      this.state.classes[key]\n    );\n  }\n\n  renderBin() {\n    if (!this.props.bin) return null;\n\n    return (\n      <this.props.bin.type\n        {...this.props.bin.props}\n        ref=\"bin\"\n      />\n    );\n  }\n\n  renderAmmo() {\n    var list = this.state.list || this.props.list;\n    return list.map((li, key) => {\n      var ref;\n      ref = li.ref || li.props['data-ref'] || key;\n      return (\n        <li.type\n          {...li.props}\n          ref={ref}\n          data-ref={ref}\n          key={key}\n          className={this.getClass(key, li)}\n          onClick={this.fire}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        {this.renderBin()}\n        <div className=\"ammo-container\" />\n        {this.renderAmmo()}\n      </div>\n    );\n  }\n}\n\nCannon.defaultProps = _.defaults({\n  showNum: 3,\n  reverseReload: false,\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ]\n}, skoash.Component.defaultProps);\n\nexport default Cannon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/cannon/0.2.js\n **/","import classNames from 'classnames';\nimport shortid from 'shortid';\n\nimport Selectable from 'shared/components/selectable/0.1';\n\nclass Carousel extends Selectable {\n  constructor() {\n    super();\n\n    this.next = this.next.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selected) {\n      this.select();\n    }\n  }\n\n  start() {\n    super.start();\n    this.next();\n  }\n\n  next() {\n    var classes, list;\n    classes = this.state.classes;\n    list = this.state.list;\n    list = list.concat(this.refs.bin.get(1));\n    list.shift();\n    classes[0] = '';\n    this.enabled = true;\n\n    this.setState({\n      classes,\n      list,\n    }, () => {\n      setTimeout(() => {\n        classes[0] = 'LEAVE';\n        this.setState({\n          classes,\n        });\n      }, this.props.pause);\n    });\n  }\n\n  bootstrap() {\n    var list;\n    // skoash.Component is not the super here, but this is what we want\n    skoash.Component.prototype.bootstrap.call(this);\n\n    list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\n    this.setState({\n      list\n    });\n  }\n\n  selectHelper() {\n    if (!this.enabled) return;\n\n    if (this.props.dataTarget) {\n      this.updateGameState({\n        path: this.props.dataTarget,\n        data: {\n          target: this.state.list[this.props.targetIndex]\n        }\n      });\n    }\n\n    this.enabled = false;\n\n\n    if (typeof this.props.onSelect === 'function') {\n      this.props.onSelect.call(this, this.state.list[this.props.targetIndex]);\n    }\n  }\n\n  getClassNames() {\n    return classNames('carousel', super.getClassNames());\n  }\n\n  /*\n   * shortid is intentionally not used for key here because we want to make sure\n   * that the element is transitioned and not replaced.\n   */\n  renderList() {\n    var list = this.state.list || this.props.list;\n    return list.map((li, key) => {\n      var ref, onTransitionEnd;\n      ref = li.ref || li.props['data-ref'] || key;\n      onTransitionEnd = key === 0 ? this.next : null;\n      return (\n        <li.type\n          {...li.props}\n          className={this.getClass(key, li)}\n          data-ref={ref}\n          data-message={li.props.message}\n          onTransitionEnd={onTransitionEnd}\n          ref={ref}\n          key={key}\n          data-key={shortid(key)}\n        />\n      );\n    });\n  }\n\n  render() {\n    var onClick = this.props.clickable ? this.state.selectFunction.bind(this) : null;\n    return (\n      <div>\n        {this.renderBin()}\n        <div className={this.getClassNames()} onClick={onClick}>\n          {this.renderList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nCarousel.defaultProps = _.defaults({\n  showNum: 3,\n  targetIndex: 1,\n  pause: 500,\n  clickable: false\n}, Selectable.defaultProps);\n\nexport default Carousel;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/carousel/0.1.js\n **/","import classNames from 'classnames';\n\nclass Catchable extends skoash.Component {\n  constructor() {\n    super();\n    this.state = {\n      canCatch: true\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  complete() {\n    setTimeout(() => {\n      this.setState({\n        complete: true,\n      }, () => {\n        skoash.trigger('complete');\n        this.props.onComplete.call(this, this);\n      });\n    }, this.props.completeDelay);\n  }\n\n  bootstrap() {\n    super.bootstrap();\n    this.DOMNode = ReactDOM.findDOMNode(this);\n  }\n\n  markCaught() {\n    if (!this.state.ready) return;\n    this.setState({canCatch: false});\n    this.props.onCaught.call(this);\n  }\n\n  canCatch() {\n    return !this.props.disabled && this.state.canCatch;\n  }\n\n  getClassNames() {\n    return classNames('catchable', {\n      CAUGHT: !this.state.canCatch\n    }, super.getClassNames());\n  }\n\n  reset() {\n    if (this.state.ready && !this.props.disabled && this.props.reCatchable) {\n      this.setState({canCatch: true});\n    }\n  }\n\n  render() {\n    return (\n      <li {...this.props} className={this.getClassNames()} />\n    );\n  }\n}\n\nCatchable.defaultProps = _.defaults({\n  disabled: false,\n  isCorrect: true,\n  reCatchable: true,\n  onCaught: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default Catchable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/catchable/0.1.js\n **/","import _ from 'lodash';\nimport ClassNames from 'classnames';\n\nexport default class RevealPrompt extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      openReveal: '',\n    };\n\n    this.index = 0;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    super.componentWillReceiveProps(nextProps);\n\n    if (nextProps.openReveal != null && nextProps.openReveal !== this.props.openReveal) {\n      this.open(nextProps.openReveal);\n    }\n\n    if (nextProps.closeReveal === true && nextProps.closeReveal !== this.props.closeReveal) {\n      this.close();\n    }\n  }\n\n  start() {\n    super.start();\n\n    if (this.props.openOnStart) {\n      this.open(this.props.openOnStart);\n    } else {\n      this.close();\n    }\n  }\n\n  open(message) {\n    var self = this;\n    self.setState({\n      open: true,\n      openReveal: '' + message,\n    });\n\n    self.props.onOpen.call(self, message);\n\n    if (self.props.completeOnOpen) {\n      self.complete();\n    } else {\n      self.requireForComplete.map(key => {\n        if (key === message && self.refs[key]) {\n          self.refs[key].complete();\n        }\n      });\n    }\n\n    if (self.props.autoClose) {\n      setTimeout(function () {\n        self.close();\n      }, 2000);\n    }\n  }\n\n  close() {\n    var prevMessage = this.state.openReveal;\n\n    this.props.onClose.call(this, prevMessage);\n\n    this.setState({\n      open: false,\n      openReveal: '',\n    });\n  }\n\n  renderList() {\n    return this.props.list.map((li, key) => {\n      var ref = li.ref == null ? key : li.ref;\n      return (\n        <li.type\n          {...li.props}\n          type=\"li\"\n          className={this.getClass(li, key)}\n          data-ref={ref}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  getClass(li, key) {\n    return ClassNames(\n      {\n        [li.props.className]: li.props.className,\n        OPEN: this.state.openReveal.indexOf(key) !== -1 || this.state.openReveal.indexOf(li.props['data-ref']) !== -1\n      }\n    );\n  }\n\n  getClassNames() {\n    return ClassNames(\n      super.getClassNames(),\n      'reveal',\n      {\n        ['open-' + this.state.openReveal]: this.state.openReveal,\n        'open-none': !this.state.openReveal\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        <div>\n          <ul>\n            {this.renderList()}\n          </ul>\n          <button className=\"close-reveal\" onClick={this.close.bind(this)}></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nRevealPrompt.defaultProps = _.defaults({\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  onOpen: _.identity,\n  onClose: _.identity,\n}, skoash.Component.defaultProps);\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/reveal_prompt/0.1.js\n **/","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/alphabet.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.14.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return baseFindIndex(array, baseIsNaN, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = context.Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Built-in method references that are mockable. */\n    var clearTimeout = function(id) { return context.clearTimeout.call(root, id); },\n        setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(context.Object, 'create');\n\n    /* Used to set `toString` methods. */\n    var defineProperty = (function() {\n      var func = getNative(context.Object, 'defineProperty'),\n          name = getNative.name;\n\n      return (name && name.length > 2) ? func : undefined;\n    }());\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          return this;\n        }\n        cache = this.__data__ = new MapCache(pairs);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      var index = length;\n      while (index--) {\n        var key = props[index],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined &&\n            !(key in Object(object))) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    var baseKeys = overArg(nativeKeys, Object);\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return baseRest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return baseRest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    var getPrototype = overArg(nativeGetPrototype, Object);\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length,\n          lastIndex = length - 1;\n\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return defineProperty(wrapper, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n      });\n    };\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return baseFindIndex(array, baseIsNaN, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = baseRest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = baseRest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = baseRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = baseRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`\n     * and is equivalent to `_.matches` when `source` is partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = baseRest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = baseRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = baseRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = baseRest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function supports comparing the same values as\n     * `_.isEqual` is equivalent to `_.isMatch` with `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lodash.js\n ** module id = 12\n ** module chunks = 0\n **/","import CatchGameScreenComponent from './catch_game_screen_component';\n\nexport default function (props, ref, key) {\n  return CatchGameScreenComponent(props, ref, key, {\n    id: 'catch-game-level-one',\n    level: 1,\n    rows: 3,\n    timeout: 120000,\n    prepTimeout: 1000,\n    openOnStart: 'instructions',\n    bin: [\n      {\n        className: 'mushroom',\n        message: ''\n      },\n      {\n        className: 'banana',\n        message: 'trash'\n      },\n      {\n        className: 'paper',\n        message: 'trash'\n      },\n      {\n        className: 'dog',\n        message: ''\n      },\n      {\n        className: 'battery',\n        message: 'trash'\n      },\n      {\n        className: 'duck',\n        message: ''\n      },\n      {\n        className: 'squirrel',\n        message: ''\n      },\n      {\n        className: 'tire',\n        message: 'trash'\n      },\n      {\n        className: 'blue-flower',\n        message: ''\n      },\n      {\n        className: 'yellow-flower',\n        message: ''\n      },\n      {\n        className: 'red-flower',\n        message: ''\n      },\n      {\n        className: 'purple-flower',\n        message: ''\n      },\n      {\n        className: 'glass',\n        message: 'trash'\n      },\n      {\n        className: 'plastic',\n        message: 'trash'\n      },\n    ],\n    vos: [\n      <skoash.MediaSequence\n        ref=\"instructions\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/Instructions.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/PickUpLitter.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"level-up\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_effects/LevelUp.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/Congratulations.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"try-again\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_effects/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/YouDidntWin.mp3'}\n        />\n      </skoash.MediaSequence>,\n    ],\n    sfx: [],\n    revealList: [\n      <skoash.Component\n        ref=\"instructions\"\n        className=\"instructions\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"instructions\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"level-up\"\n        className=\"level-up\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"congratulations\" />\n          <div className=\"level-up\" />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"try-again\"\n        className=\"try-again\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"try-again\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n    ]\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_level_one_screen.js\n **/","import CatchGameScreenComponent from './catch_game_screen_component';\n\nexport default function (props, ref, key) {\n  return CatchGameScreenComponent(props, ref, key, {\n    id: 'catch-game-level-three',\n    level: 3,\n    rows: 5,\n    timeout: 120000,\n    prepTimeout: 1000,\n    bin: [\n      {\n        className: 'mushroom',\n        message: ''\n      },\n      {\n        className: 'banana',\n        message: 'trash'\n      },\n      {\n        className: 'paper',\n        message: 'trash'\n      },\n      {\n        className: 'dog',\n        message: ''\n      },\n      {\n        className: 'battery',\n        message: 'trash'\n      },\n      {\n        className: 'duck',\n        message: ''\n      },\n      {\n        className: 'squirrel',\n        message: ''\n      },\n      {\n        className: 'tire',\n        message: 'trash'\n      },\n      {\n        className: 'blue-flower',\n        message: ''\n      },\n      {\n        className: 'yellow-flower',\n        message: ''\n      },\n      {\n        className: 'red-flower',\n        message: ''\n      },\n      {\n        className: 'purple-flower',\n        message: ''\n      },\n      {\n        className: 'glass',\n        message: 'trash'\n      },\n      {\n        className: 'plastic',\n        message: 'trash'\n      },\n    ],\n    vos: [\n      <skoash.MediaSequence\n        ref=\"level-up\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_effects/WinTheGame1.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/YouveWon.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/YouvePickedUp.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"try-again\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_effects/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/YouDidntWin.mp3'}\n        />\n      </skoash.MediaSequence>,\n    ],\n    sfx: [],\n    revealList: [\n      <skoash.Component\n        ref=\"level-up\"\n        className=\"level-up youve-won\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"congratulations\" />\n          <div className=\"level-up\" />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"try-again\"\n        className=\"try-again\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"try-again\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n    ]\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_level_three_screen.js\n **/","import CatchGameScreenComponent from './catch_game_screen_component';\n\nexport default function (props, ref, key) {\n  return CatchGameScreenComponent(props, ref, key, {\n    id: 'catch-game-level-two',\n    level: 2,\n    rows: 4,\n    timeout: 120000,\n    prepTimeout: 1000,\n    bin: [\n      {\n        className: 'mushroom',\n        message: ''\n      },\n      {\n        className: 'banana',\n        message: 'trash'\n      },\n      {\n        className: 'paper',\n        message: 'trash'\n      },\n      {\n        className: 'dog',\n        message: ''\n      },\n      {\n        className: 'battery',\n        message: 'trash'\n      },\n      {\n        className: 'duck',\n        message: ''\n      },\n      {\n        className: 'squirrel',\n        message: ''\n      },\n      {\n        className: 'tire',\n        message: 'trash'\n      },\n      {\n        className: 'blue-flower',\n        message: ''\n      },\n      {\n        className: 'yellow-flower',\n        message: ''\n      },\n      {\n        className: 'red-flower',\n        message: ''\n      },\n      {\n        className: 'purple-flower',\n        message: ''\n      },\n      {\n        className: 'glass',\n        message: 'trash'\n      },\n      {\n        className: 'plastic',\n        message: 'trash'\n      },\n    ],\n    vos: [\n      <skoash.MediaSequence\n        ref=\"level-up\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_effects/LevelUp.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/Congratulations.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"try-again\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_effects/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/YouDidntWin.mp3'}\n        />\n      </skoash.MediaSequence>,\n    ],\n    sfx: [],\n    revealList: [\n      <skoash.Component\n        ref=\"level-up\"\n        className=\"level-up\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"congratulations\" />\n          <div className=\"level-up\" />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"try-again\"\n        className=\"try-again\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"try-again\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n    ]\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_level_two_screen.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\nimport RevealPrompt from 'shared/components/reveal_prompt/0.1';\nimport Carousel from 'shared/components/carousel/0.1';\nimport Cannon from 'shared/components/cannon/0.2';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Timer from 'shared/components/timer/0.1';\nimport Score from 'shared/components/score/0.1';\n\nconst CONFIG = {\n  LVL: 1,\n  POINTS: 100,\n  TIMER: 30000,\n};\n\nexport default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"clean-up-game-lvl-1\"\n    >\n      <MediaCollection\n        play={_.get(props, 'data.reveal.play', null)}\n        onPlay={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: null\n            }\n          });\n\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              open: null\n            }\n          });\n\n          if (_.get(props, 'data.reveal.play')) {\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n      >\n        <skoash.MediaSequence ref=\"complete\" silentOnStart>\n          <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Level1.mp3\" />\n          <skoash.Audio ref=\"vo-2\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Wow.mp3\" />\n          <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/YouHaveGreat.mp3\" />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"try-again\" silentOnStart complete>\n          <skoash.Audio ref=\"vo-4\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LevelLost.mp3\" complete />\n          <skoash.Audio ref=\"vo-5\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/OhNo.mp3\" complete />\n          <skoash.Audio ref=\"vo-6\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkStill.mp3\" complete />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"throw\" silentOnStart>\n          <skoash.Audio ref=\"vo-7\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/FastSwish.mp3\" />\n          <skoash.Audio ref=\"vo-8\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/WinPoints.mp3\" />\n        </skoash.MediaSequence>\n      </MediaCollection>\n\n      <RevealPrompt\n        ref=\"reveal\"\n        openReveal={_.get(props, 'data.reveal.open', null)}\n        onClose={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              start: true\n            }\n          });\n        }}\n        list={[\n          <skoash.Component data-ref=\"complete\">\n            <skoash.Component className=\"frame complete-lvl-1\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                You have some great cleaning skills!<br />Keep up the good work!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"try-again\">\n            <skoash.Component className=\"frame\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                The park is still covered with trash<br />but you still have a chance to clean<br />and beat the Litterbug!\n              </span>\n            </skoash.Component>\n          </skoash.Component>\n        ]}\n      />\n\n      <Carousel\n        ref=\"carousel\"\n        completeOnStart={true}\n        checkComplete={false}\n        showNum={5}\n        targetIndex={2}\n        selected={_.get(props, 'data.cannon.fire')}\n        onSelect={function (target) {\n          var score = _.get(props, 'data.score.points', 0);\n          var classes = this.state.classes;\n          classes[target.props['data-key']] = 'SELECTED';\n\n          this.setState({\n            classes\n          }, () => {\n            setTimeout(() => {\n              classes[target.props['data-key']] = '';\n            }, 1000);\n          });\n\n          if (score < CONFIG.POINTS) score += target.props.value;\n\n          this.updateGameState({\n            path: 'score',\n            data: {\n              points: score\n            }\n          });\n\n          if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                open: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                play: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"five\" name=\"five\" value={5} complete />,\n              <skoash.Component className=\"ten\" name=\"ten\" value={10} complete />,\n              <skoash.Component className=\"twenty\" name=\"twenty\" value={20} complete />,\n              <skoash.Component className=\"thirty\" name=\"thirty\" value={30} complete />,\n            ]}\n          />\n        }\n      />\n\n      <Cannon\n        ref=\"cannon\"\n        completeOnStart={true}\n        checkComplete={false}\n        reverseReload={true}\n        showNum={4}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"plastic-bottle\" complete />,\n              <skoash.Component className=\"soda-can\" complete />,\n              <skoash.Component className=\"banana-peal\" complete />,\n              <skoash.Component className=\"glass-bottle\" complete />,\n              <skoash.Component className=\"crumbled-paper\" complete />,\n              <skoash.Component className=\"tuna-can\" complete />,\n              <skoash.Component className=\"tire\" complete />,\n              <skoash.Component className=\"battery\" complete/>,\n            ]}\n          />\n        }\n        onFire={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: 'throw'\n            }\n          });\n        }}\n        onReload={function () {\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: true\n            }\n          });\n        }}\n      />\n\n      <skoash.Component className=\"grass\">\n        <skoash.Component className=\"stats\">\n          <span className=\"level\">\n            {CONFIG.LVL}\n          </span>\n\n          <Timer\n            ref=\"timer\"\n            countDown={true}\n            timeout={CONFIG.TIMER}\n            complete={_.get(props, 'data.game.complete', false)}\n            restart={_.get(props, 'data.game.start', false)}\n            onComplete={function () {\n              if (_.get(props, 'data.reveal.open')) return;\n              if (_.get(props, 'data.score.points', 0) < 100) {\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    open: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    play: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'score',\n                  data: {\n                    points: 0\n                  }\n                });\n              }\n            }}\n          />\n\n          <Score\n            ref=\"score\"\n            max={CONFIG.POINTS}\n            correct={_.get(props, 'data.score.points', 0)}\n            checkComplete={false}\n            complete={_.get(props, 'data.score.points', 0) === 100}\n          />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/clean_up_game_lvl1_screen.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\nimport RevealPrompt from 'shared/components/reveal_prompt/0.1';\nimport Carousel from 'shared/components/carousel/0.1';\nimport Cannon from 'shared/components/cannon/0.2';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Timer from 'shared/components/timer/0.1';\nimport Score from 'shared/components/score/0.1';\n\nconst CONFIG = {\n  LVL: 2,\n  POINTS: 100,\n  TIMER: 30000,\n};\n\nexport default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"clean-up-game-lvl-2\"\n    >\n      <MediaCollection\n        play={_.get(props, 'data.reveal.play', null)}\n        onPlay={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: null\n            }\n          });\n\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              open: null\n            }\n          });\n\n          if (_.get(props, 'data.reveal.play')) {\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n      >\n        <skoash.MediaSequence ref=\"complete-lvl\" silentOnStart>\n          <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Level2.mp3\" />\n          <skoash.Audio ref=\"vo-2\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/AmazingJob.mp3\" />\n          <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThankYouCaring.mp3\" />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"try-again\" silentOnStart complete>\n          <skoash.Audio ref=\"vo-4\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LevelLost.mp3\" complete />\n          <skoash.Audio ref=\"vo-5\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/OhNo.mp3\" complete />\n          <skoash.Audio ref=\"vo-6\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkStill.mp3\" complete />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"throw\" silentOnStart>\n          <skoash.Audio ref=\"vo-7\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/FastSwish.mp3\" />\n          <skoash.Audio ref=\"vo-8\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/WinPoints.mp3\" />\n        </skoash.MediaSequence>\n      </MediaCollection>\n\n      <RevealPrompt\n        ref=\"reveal\"\n        openReveal={_.get(props, 'data.reveal.open', null)}\n        list={[\n          <skoash.Component data-ref=\"complete\">\n            <skoash.Component className=\"frame complete-lvl-2\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                Thank you for caring so much<br />about the environment!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"try-again\">\n            <skoash.Component className=\"frame\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                The park is still covered with trash<br />but you still have a chance to clean<br />and beat the Litterbug!\n              </span>\n            </skoash.Component>\n          </skoash.Component>\n        ]}\n      />\n\n      <Carousel\n        ref=\"carousel\"\n        completeOnStart={true}\n        checkComplete={false}\n        showNum={5}\n        targetIndex={2}\n        selected={_.get(props, 'data.cannon.fire')}\n        onSelect={function (target) {\n          var score = _.get(props, 'data.score.points', 0);\n          var classes = this.state.classes;\n          classes[target.props['data-key']] = 'SELECTED';\n\n          this.setState({\n            classes\n          }, () => {\n            setTimeout(() => {\n              classes[target.props['data-key']] = '';\n            }, 1000);\n          });\n\n          if (score < CONFIG.POINTS) score += target.props.value;\n\n          this.updateGameState({\n            path: 'score',\n            data: {\n              points: score\n            }\n          });\n\n          if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                open: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                play: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"five\" name=\"five\" value={5} complete />,\n              <skoash.Component className=\"ten\" name=\"ten\" value={10} complete />,\n              <skoash.Component className=\"twenty\" name=\"twenty\" value={20} complete />,\n              <skoash.Component className=\"thirty\" name=\"thirty\" value={30} complete />,\n            ]}\n          />\n        }\n      />\n\n      <Cannon\n        ref=\"cannon\"\n        completeOnStart={true}\n        checkComplete={false}\n        reverseReload={true}\n        showNum={4}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"plastic-bottle\" complete />,\n              <skoash.Component className=\"soda-can\" complete />,\n              <skoash.Component className=\"banana-peal\" complete />,\n              <skoash.Component className=\"glass-bottle\" complete />,\n              <skoash.Component className=\"crumbled-paper\" complete />,\n              <skoash.Component className=\"tuna-can\" complete />,\n              <skoash.Component className=\"tire\" complete />,\n              <skoash.Component className=\"battery\" complete/>,\n            ]}\n          />\n        }\n        onFire={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: 'throw'\n            }\n          });\n        }}\n        onReload={function () {\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: true\n            }\n          });\n        }}\n      />\n\n      <skoash.Component className=\"grass\">\n        <skoash.Component className=\"stats\">\n          <span className=\"level\">\n            {CONFIG.LVL}\n          </span>\n\n          <Timer\n            ref=\"timer\"\n            countDown={true}\n            timeout={CONFIG.TIMER}\n            complete={_.get(props, 'data.game.complete', false)}\n            restart={_.get(props, 'data.game.start', false)}\n            onComplete={function () {\n              if (_.get(props, 'data.reveal.open')) return;\n              if (_.get(props, 'data.score.points', 0) < 100) {\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    open: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    play: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'score',\n                  data: {\n                    points: 0\n                  }\n                });\n              }\n            }}\n          />\n\n          <Score\n            ref=\"score\"\n            max={CONFIG.POINTS}\n            correct={_.get(props, 'data.score.points', 0)}\n            checkComplete={false}\n            complete={_.get(props, 'data.score.points', 0) === 100}\n          />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/clean_up_game_lvl2_screen.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\nimport RevealPrompt from 'shared/components/reveal_prompt/0.1';\nimport Carousel from 'shared/components/carousel/0.1';\nimport Cannon from 'shared/components/cannon/0.2';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Timer from 'shared/components/timer/0.1';\nimport Score from 'shared/components/score/0.1';\n\nconst CONFIG = {\n  LVL: 3,\n  POINTS: 100,\n  TIMER: 30000,\n};\n\nexport default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"clean-up-game-lvl-3\"\n    >\n            <MediaCollection\n        play={_.get(props, 'data.reveal.play', null)}\n        onPlay={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: null\n            }\n          });\n\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              open: null\n            }\n          });\n\n          if (_.get(props, 'data.reveal.play')) {\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n      >\n        <skoash.MediaSequence ref=\"complete\" silentOnStart>\n          <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Level3.mp3\" />\n          <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkClean.mp3\" />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"try-again\" silentOnStart complete>\n          <skoash.Audio ref=\"vo-4\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LevelLost.mp3\" complete />\n          <skoash.Audio ref=\"vo-5\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/OhNo.mp3\" complete />\n          <skoash.Audio ref=\"vo-6\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkStill.mp3\" complete />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"throw\" silentOnStart>\n          <skoash.Audio ref=\"vo-7\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/FastSwish.mp3\" />\n          <skoash.Audio ref=\"vo-8\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/WinPoints.mp3\" />\n        </skoash.MediaSequence>\n      </MediaCollection>\n\n      <RevealPrompt\n        ref=\"reveal\"\n        openReveal={_.get(props, 'data.reveal.open', null)}\n        list={[\n          <skoash.Component data-ref=\"complete\">\n            <skoash.Component className=\"frame complete-lvl-3\">\n              <div className=\"banner\" />\n              <span>\n                The park is now clean<br />You are an\n              </span>\n              <div className=\"banner-2\" />\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"try-again\">\n            <skoash.Component className=\"frame\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                The park is still covered with trash<br />but you still have a chance to clean<br />and beat the Litterbug!\n              </span>\n            </skoash.Component>\n          </skoash.Component>\n        ]}\n      />\n\n      <Carousel\n        ref=\"carousel\"\n        completeOnStart={true}\n        checkComplete={false}\n        showNum={5}\n        targetIndex={2}\n        selected={_.get(props, 'data.cannon.fire')}\n        onSelect={function (target) {\n          var score = _.get(props, 'data.score.points', 0);\n          var classes = this.state.classes;\n          classes[target.props['data-key']] = 'SELECTED';\n\n          this.setState({\n            classes\n          }, () => {\n            setTimeout(() => {\n              classes[target.props['data-key']] = '';\n            }, 1000);\n          });\n\n          if (score < CONFIG.POINTS) score += target.props.value;\n\n          this.updateGameState({\n            path: 'score',\n            data: {\n              points: score\n            }\n          });\n\n          if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                open: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                play: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"five\" name=\"five\" value={5} complete />,\n              <skoash.Component className=\"ten\" name=\"ten\" value={10} complete />,\n              <skoash.Component className=\"twenty\" name=\"twenty\" value={20} complete />,\n              <skoash.Component className=\"thirty\" name=\"thirty\" value={30} complete />,\n            ]}\n          />\n        }\n      />\n\n      <Cannon\n        ref=\"cannon\"\n        completeOnStart={true}\n        checkComplete={false}\n        reverseReload={true}\n        showNum={4}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"plastic-bottle\" complete />,\n              <skoash.Component className=\"soda-can\" complete />,\n              <skoash.Component className=\"banana-peal\" complete />,\n              <skoash.Component className=\"glass-bottle\" complete />,\n              <skoash.Component className=\"crumbled-paper\" complete />,\n              <skoash.Component className=\"tuna-can\" complete />,\n              <skoash.Component className=\"tire\" complete />,\n              <skoash.Component className=\"battery\" complete/>,\n            ]}\n          />\n        }\n        onFire={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: 'throw'\n            }\n          });\n        }}\n        onReload={function () {\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: true\n            }\n          });\n        }}\n      />\n\n      <skoash.Component className=\"grass\">\n        <skoash.Component className=\"stats\">\n          <span className=\"level\">\n            {CONFIG.LVL}\n          </span>\n\n          <Timer\n            ref=\"timer\"\n            countDown={true}\n            timeout={CONFIG.TIMER}\n            complete={_.get(props, 'data.game.complete', false)}\n            restart={_.get(props, 'data.game.start', false)}\n            onComplete={function () {\n              if (_.get(props, 'data.reveal.open')) return;\n              if (_.get(props, 'data.score.points', 0) < 100) {\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    open: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    play: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'score',\n                  data: {\n                    points: 0\n                  }\n                });\n              }\n            }}\n          />\n\n          <Score\n            ref=\"score\"\n            max={CONFIG.POINTS}\n            correct={_.get(props, 'data.score.points', 0)}\n            checkComplete={false}\n            complete={_.get(props, 'data.score.points', 0) === 100}\n          />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/clean_up_game_lvl3_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"commit\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/IPromise.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/S_BU_1.mp3\" />\n      <div className=\"pledge\">\n        I promise to <span className=\"never\"></span> litter\n        <br /><span className=\"spacerA\"></span>and to pick up the litter\n        <br /><span className=\"spacerB\"></span>I see whenever I safely can.\n        <br /><span className=\"spacer1\"></span>I will dispose of it\n        <br /><span className=\"spacer2\"></span>in a trash can\n        <br /><span className=\"spacer3\"></span>or a recycle bin.\n      </div>\n      <div className=\"banner animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/commit_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"flip\"\n      emitOnComplete={{\n        name: 'flip',\n      }}\n    >\n      <skoash.Image className=\"hidden\" src=\"media/_assets/_sprites/sprites.mr.eco-01.png\" />\n      <skoash.Image className=\"hidden\" src=\"media/_assets/_sprites/sprites.sing.thankyou.flip-01.png\" />\n      <skoash.Audio type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Flip.mp3\" />\n      <div className=\"words\" />\n      <div className=\"flip-container animated\">\n        <div className=\"flip\" />\n      </div>\n      <div className=\"mr-eco animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/flip_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"good-for-you\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThankYou.mp3\" />\n      <div className=\"mr-eco animated\" />\n      <div className=\"banner animated\" />\n      <div className=\"banner2 animated\" />\n\n      <skoash.Component className=\"sparkles\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/good_for_you_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"ground\"\n      startDelay={2000}\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ShouldYouThrow.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/VO_4.2.mp3\" />\n      <div className=\"banner animated\" />\n      <div className=\"avatar animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/ground_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"room\"\n      startDelay={2000}\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThrowTrashRoom.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/VO_4.2.mp3\" />\n      <div className=\"avatar animated\" />\n      <div className=\"banner animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/room_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"school\"\n      startDelay={2000}\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThrowTrashSchool.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/VO_4.2.mp3\" />\n      <div className=\"banner animated\" />\n      <div className=\"avatar animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/school_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"sing-about-it\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LetsSing.mp3\" />\n      <div className=\"mr-eco animated\" />\n      <div className=\"banner animated\" />\n      <div className=\"dancers animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/sing_about_it_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"take-pledge\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/AntiLitterPledge.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/S_BU_1.mp3\" />\n      <skoash.Image ref=\"bkg\" className=\"background\" src=\"media/_Frames/FR_1.png\" />\n      <div className=\"mr-eco\"></div>\n      <div className=\"banner\"></div>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/take_pledge_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"title\"\n      hidePrev\n      completeDelay={5000}\n    >\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/title_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"video\"\n    >\n      <skoash.Component ref=\"center\" className=\"center\">\n        <skoash.Component ref=\"frame\" className=\"frame\">\n          <skoash.Video ref=\"video\" src=\"https://res.cloudinary.com/changemyworldnow/video/upload/v1455037034/Litterbug-Final_jjmrg7.mp4\" />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/video_screen.js\n **/","var config = {\n  id: 'litter-bug',\n  version: 2,\n  skoash: '1.0.4',\n  dimensions: {\n    width: 960,\n    ratio: 16 / 9\n  },\n};\n\nexport default config;\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/config.game.js\n **/","import classNames from 'classnames';\n\nimport config from './config.game';\n\nimport Loader from 'shared/components/loader/0.1';\n\nimport iOSScreen from 'shared/components/ios_splash_screen/0.1';\nimport TitleScreen from './components/title_screen';\nimport CatchGameLevelOne from './components/catch_game_level_one_screen';\nimport CatchGameLevelTwo from './components/catch_game_level_two_screen';\nimport CatchGameLevelThree from './components/catch_game_level_three_screen';\nimport CleanUpGameLvl1Screen from './components/clean_up_game_lvl1_screen';\nimport CleanUpGameLvl2Screen from './components/clean_up_game_lvl2_screen';\nimport CleanUpGameLvl3Screen from './components/clean_up_game_lvl3_screen';\nimport RoomScreen from './components/room_screen';\nimport SchoolScreen from './components/school_screen';\nimport GroundScreen from './components/ground_screen';\nimport SingAboutItScreen from './components/sing_about_it_screen';\nimport VideoScreen from './components/video_screen';\nimport GoodForYouScreen from './components/good_for_you_screen';\nimport TakePledgeScreen from './components/take_pledge_screen';\nimport CommitScreen from './components/commit_screen';\nimport FlipScreen from './components/flip_screen';\n\nimport QuitScreen from 'shared/components/quit_screen/0.1';\n\nvar LitterBug = (\n  <skoash.Game\n    config={config}\n    screens={{\n      0: iOSScreen,\n      1: TitleScreen,\n      2: CatchGameLevelOne,\n      3: CatchGameLevelTwo,\n      4: CatchGameLevelThree,\n      5: RoomScreen,\n      6: SchoolScreen,\n      7: GroundScreen,\n      8: SingAboutItScreen,\n      9: VideoScreen,\n      10: GoodForYouScreen,\n      11: CleanUpGameLvl1Screen,\n      12: CleanUpGameLvl2Screen,\n      13: CleanUpGameLvl3Screen,\n      14: TakePledgeScreen,\n      15: CommitScreen,\n      16: FlipScreen,\n    }}\n    menus={{\n      quit: QuitScreen,\n    }}\n    loader={<Loader />}\n    assets={[\n      <skoash.Audio ref=\"bkg-1\" type=\"background\" src=\"media/_BKG/S_BKG_1.mp3\" loop/>,\n      <skoash.Audio ref=\"button\" type=\"sfx\" src=\"media/_Buttons/S_BU_1.mp3\" />,\n      <skoash.Image ref=\"img-bkg-1\" className=\"hidden\" src=\"media/_BKG/BKG_1.png\" />,\n      <skoash.Image ref=\"img-bkg-2\" className=\"hidden\" src=\"media/_BKG/BKG_2.png\" />,\n      <skoash.Image ref=\"img-bkg-3\" className=\"hidden\" src=\"media/_BKG/BKG_3.png\" />,\n      <skoash.Image ref=\"img-bkg-4\" className=\"hidden\" src=\"media/_assets/_images/BKG.4.jpg\" />,\n      <skoash.Image ref=\"img-bkg-5\" className=\"hidden\" src=\"media/_BKG/BKG_5.png\" />,\n      <skoash.Image\n        className=\"hidden\"\n        src=\"media/_assets/_images/BKG.3.png\"\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src=\"media/_assets/_images/BKG.5.png\"\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.1-01.png'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.2-01.png'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.3-01-min.jpg'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.4-01.png'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.mr.eco-01.png'}\n      />,\n      <div className=\"background default\" />,\n      <div className=\"background title\" />,\n      <div className=\"background lets-clean-up\" />,\n      <div className=\"background clean-up-game\" />,\n      <div className=\"background select\" />,\n      <div className=\"background sun\" />,\n      <div className=\"background commit\" />,\n    ]}\n    passData={function (opts) {\n      this.setState(opts);\n    }}\n    getClassNames={function () {\n      return classNames({'SUN': this.state.sun});\n    }}\n  />\n);\n\nskoash.start(LitterBug);\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/index.js\n **/","import Catchable from 'shared/components/catchable/0.1';\n\n\nclass Catch extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      canCatch: true,\n      stamp: 0\n    };\n\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.checkCollisions = this.checkCollisions.bind(this);\n  }\n\n  componentDidMount() {\n    this.bucketNode = ReactDOM.findDOMNode(this.refs.bucket);\n    this.catchableNodes = _.map(this.props.catchables, function (val, key) {\n      return ReactDOM.findDOMNode(this.refs[`${key}-catchable`]);\n    }.bind(this));\n  }\n\n  attachMouseEvents() {\n    var catchRef = this.refs['catch-component'];\n    if (catchRef) {\n      catchRef.addEventListener('mousemove', this.onMouseMove);\n      catchRef.addEventListener('touchstart', this.onMouseMove);\n      catchRef.addEventListener('touchmove', this.onMouseMove);\n    }\n  }\n\n  onMouseMove(e) {\n    this.setState({\n      mouseX: e.pageX\n    });\n  }\n\n  onResize() {\n    skoash.trigger('getState').then(state => {\n      var zoom = state.scale;\n      var edges = this.getEdges(this.bucketNode);\n      var bucketWidth = edges.right - edges.left;\n      var leftBound = this.bucketNode.offsetParent ? this.bucketNode.offsetParent.offsetWidth - bucketWidth : 0;\n\n      this.setState({\n        bucketTop: edges.top,\n        bucketBottom: edges.bottom,\n        bucketWidth,\n        leftBound,\n        zoom\n      });\n    });\n  }\n\n  start() {\n    super.start();\n    this.bootstrap();\n    this.checkCollisions();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n    this.onResize();\n    this.attachMouseEvents();\n    window.addEventListener('resize', this.onResize);\n    _.forEach(this.catchableNodes, function (node, key) {\n      var catchableRef = this.refs[`${key}-catchable`];\n      node.addEventListener('animationiteration', catchableRef.reset, false);\n    }.bind(this));\n  }\n\n  restart() {\n    this.setState({\n      stamp: 0\n    }, () => {\n      this.checkCollisions();\n    });\n  }\n\n  stop() {\n    this.setState({\n      started: false\n    });\n  }\n\n  pause() {\n    if (this.state.started) {\n      this.setState({\n        paused: true\n      });\n    }\n  }\n\n  resume() {\n    if (this.state.paused) {\n      this.setState({\n        paused: false\n      }, () => {\n        this.checkCollisions();\n      });\n    }\n  }\n\n  selectCatchable(catchableNode, key) {\n    if (!this.state.started || this.state.paused || !this.state.canCatch || !catchableNode.canCatch()) return;\n    catchableNode.markCaught();\n    if (catchableNode.props.isCorrect) {\n      this.correct(catchableNode, key);\n    } else {\n      this.incorrect(catchableNode, key);\n    }\n  }\n\n  correct(catchable, key) {\n    if (this.audio.correct) {\n      this.audio.correct.play();\n    }\n    if (typeof this.props.onCorrect === 'function') {\n      this.props.onCorrect.call(this, catchable, key);\n    }\n  }\n\n  incorrect(catchable, key) {\n    if (this.audio.incorrect) {\n      this.audio.incorrect.play();\n    }\n    if (typeof this.props.onIncorrect === 'function') {\n      this.props.onIncorrect.call(this, catchable, key);\n    }\n  }\n\n  checkCollisions() {\n    var time = Date.now();\n    if (!this.state.started || this.state.paused) return;\n    if (time >= this.state.stamp) {\n      this.setState({\n        stamp: time + 1000\n      });\n      var bucketRect = this.bucketNode.getBoundingClientRect();\n      _.forEach(this.catchableNodes, function (val, key) {\n        if (this.isColliding(bucketRect, val.getBoundingClientRect())) {\n          this.selectCatchable(this.refs[`${key}-catchable`], key);\n        }\n      }.bind(this));\n      window.requestAnimationFrame(this.checkCollisions);\n    } else {\n      window.requestAnimationFrame(this.checkCollisions);\n    }\n  }\n\n  isColliding(bucketRect, catchRect) {\n    var xCenter = catchRect.left + (catchRect.right - catchRect.left) / 2;\n    var yOffset = (catchRect.bottom - catchRect.top) / 6;\n    return (bucketRect.top < catchRect.bottom - yOffset && bucketRect.top > catchRect.top + yOffset &&\n    xCenter > bucketRect.left && xCenter < bucketRect.right);\n  }\n\n  getEdges(el) {\n    var top, left, width, height;\n\n    left = 0;\n    top = 0;\n    width = el.offsetWidth;\n    height = el.offsetHeight;\n\n    while (el) {\n      if (el.className && el.className.indexOf('screen') !== -1) {\n        break;\n      }\n\n      left += el.offsetLeft || 0;\n      top += el.offsetTop || 0;\n      el = el.offsetParent;\n    }\n\n    return {\n      top,\n      bottom: top + height,\n      left,\n      right: left + width\n    };\n  }\n\n  getStyle() {\n    var left = (this.state.mouseX / this.state.zoom) - (this.state.bucketWidth / 2);\n    if (this.props.bucketInBounds) {\n      left = left < 1 ? 1 : left;\n      left = left >= this.state.leftBound ? this.state.leftBound - 1 : left;\n    }\n\n    return {\n      left: `${left}px`\n    };\n  }\n\n  renderBucket() {\n    return (\n      <this.props.bucket.type\n        {...this.props.bucket.props}\n        ref=\"bucket\"\n        style={this.getStyle()}\n      />\n    );\n  }\n\n  renderCatchables() {\n    return this.props.catchables.map((item, key) =>\n      <Catchable\n        {...item.props}\n        key={key}\n        ref={`${key}-catchable`}\n      />\n    );\n  }\n\n  getClasses() {\n    var classes = '';\n\n    if (this.state.complete || this.props.isComplete) classes += ' COMPLETE';\n\n    return classes;\n  }\n\n  render() {\n    return (\n      <div ref=\"catch-component\" className={'catch ' + this.getClasses()}>\n        <ul className=\"items\">\n          {this.renderCatchables()}\n        </ul>\n        {this.renderBucket()}\n      </div>\n    );\n  }\n\n}\n\nCatch.defaultProps = _.merge(skoash.Component.defaultProps, {\n  catchables: [],\n  bucketInBounds: true,\n});\n\nexport default Catch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/catch/0.1.js\n **/","import classNames from 'classnames';\n\nimport Catch from 'shared/components/catch/0.1';\n\nclass Catcher extends Catch {\n  constructor(props) {\n    super(props);\n\n    this.state = _.defaults({\n      styles: [],\n    }, this.state);\n\n    this.moveEvent = this.moveEvent.bind(this);\n  }\n\n  bootstrap() {\n    skoash.Component.prototype.bootstrap.call(this);\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n\n    if (this.props.moveBuckets) {\n      window.addEventListener('mousemove', this.moveEvent);\n      window.addEventListener('touchmove', this.moveEvent);\n    }\n  }\n\n  moveEvent(e) {\n    this.props.onMove.call(this, e);\n  }\n\n  onReady() {\n    this.bucketNodes = _.reduce(this.refs, (a, v, k) => {\n      if (k.indexOf('buckets-')) return a;\n      a[k] = ReactDOM.findDOMNode(v);\n      return a;\n    }, {});\n  }\n\n  onResize() {\n    skoash.trigger('getState').then(state => {\n      var zoom = state.scale;\n      this.setState({\n        zoom\n      });\n    });\n  }\n\n  checkCollisions() {\n    if (!this.state.started || this.state.paused) return;\n    _.each(this.bucketNodes, (bucketNode, bucketRefKey) => {\n      var bucketRect = bucketNode.getBoundingClientRect();\n      _.each(this.props.catchableRefs, catchableRef => {\n        if (this.isColliding(bucketRect, catchableRef.DOMNode.getBoundingClientRect())) {\n          this.selectCatchable(this.refs[bucketRefKey], catchableRef);\n        }\n      });\n    });\n\n    window.requestAnimationFrame(this.checkCollisions);\n  }\n\n  isColliding(bucketRect, catchRect) {\n    var bucketCorners = [], catchableCorners = [];\n\n    for (let i = 0; i < 4; i++) {\n      bucketCorners.push({\n        x: bucketRect.left + bucketRect.width * (i === 1 || i === 2 ? 1 : 0),\n        y: bucketRect.top + bucketRect.height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    for (let i = 0; i < 4; i++) {\n      catchableCorners.push({\n        x: catchRect.left + catchRect.width * (i === 1 || i === 2 ? 1 : 0),\n        y: catchRect.top + catchRect.height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    return skoash.util.doIntersect(bucketCorners, catchableCorners);\n  }\n\n  selectCatchable(bucketRef, catchableRef) {\n    if (!this.state.started || this.state.paused || !this.state.canCatch || !this.props.canCatch || !catchableRef.canCatch()) return;\n    catchableRef.markCaught();\n    if (catchableRef.props.message === bucketRef.props.message) {\n      this.correct(bucketRef, catchableRef);\n    } else {\n      this.incorrect(bucketRef, catchableRef);\n    }\n  }\n\n  correct(bucketRef, catchableRef) {\n    this.playMedia('correct');\n    this.props.onCorrect.call(this, bucketRef, catchableRef);\n  }\n\n  incorrect(bucketRef, catchableRef) {\n    this.playMedia('incorrect');\n    this.props.onIncorrect.call(this, bucketRef, catchableRef);\n  }\n\n  getClassNames() {\n    return classNames('catcher', super.getClassNames());\n  }\n\n  renderBucket() {\n    return _.map([].concat(this.props.bucket), (bucket, key) =>\n      <bucket.type\n        {...bucket.props}\n        ref={'buckets-' + key}\n        style={this.state.styles[key]}\n        key={key}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div ref=\"catcher\" className={this.getClassNames()}>\n        {this.renderContentList('assets')}\n        {this.renderBucket()}\n      </div>\n    );\n  }\n}\n\nCatcher.defaultProps = _.defaults({\n  moveBuckets: false,\n  onMove: _.noop,\n  canCatch: true,\n}, skoash.Component.defaultProps);\n\nexport default Catcher;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/catcher/0.1.js\n **/","import classNames from 'classnames';\n\nclass Draggable extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      zoom: 1,\n    };\n\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n\n    this.moveEvent = this.moveEvent.bind(this);\n\n    this.touchStart = this.touchStart.bind(this);\n    this.touchEnd = this.touchEnd.bind(this);\n  }\n\n  shouldDrag() {\n    return true;\n  }\n\n  incomplete() {\n    this.markIncorrect();\n    this.returnToStart();\n\n    super.incomplete();\n  }\n\n  markCorrect() {\n    this.setState({\n      correct: true,\n    });\n  }\n\n  markIncorrect() {\n    this.setState({\n      correct: false,\n    });\n  }\n\n  startEvent(e, cb) {\n    var pageX, pageY, rect, startX, startY, endX, endY, grabX, grabY;\n\n    if (e.target !== this.refs.el) return;\n    if (!this.shouldDrag()) return;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      pageX = e.targetTouches[0].pageX;\n      pageY = e.targetTouches[0].pageY;\n      rect = e.target.getBoundingClientRect();\n      e = e.targetTouches[0];\n      e.offsetX = pageX - rect.left;\n      e.offsetY = pageY - rect.top;\n    }\n\n    grabX = e.offsetX;\n    grabY = e.offsetY;\n\n    startX = endX = e.pageX - grabX;\n    startY = endY = e.pageY - grabY;\n\n    if (!this.state.firstX) {\n      this.setState({\n        firstX: startX,\n        firstY: startY,\n      });\n    }\n\n    if (!this.props.return) {\n      startX = _.isFinite(this.state.grabX) ?\n        this.state.startX + this.state.grabX - grabX :\n        startX;\n      startY = _.isFinite(this.state.grabY) ?\n        this.state.startY + this.state.grabY - grabY :\n        startY;\n    }\n\n    this.setState({\n      dragging: true,\n      return: false,\n      startX,\n      startY,\n      grabX,\n      grabY,\n      endX,\n      endY,\n    });\n\n    if (typeof this.props.dragRespond === 'function') {\n      this.props.dragRespond(this.props.message);\n    }\n\n    if (typeof cb === 'function') {\n      cb.call(this);\n    }\n  }\n\n  attachMouseEvents() {\n    window.addEventListener('mousemove', this.moveEvent);\n    window.addEventListener('mouseup', this.mouseUp);\n  }\n\n  attachTouchEvents() {\n    window.addEventListener('touchmove', this.moveEvent);\n    window.addEventListener('touchend', this.touchEnd);\n  }\n\n  mouseDown(e) {\n    this.startEvent(e, this.attachMouseEvents);\n  }\n\n  touchStart(e) {\n    this.startEvent(e, this.attachTouchEvents);\n  }\n\n  moveEvent(e) {\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n      e.pageY = e.targetTouches[0].pageY;\n    }\n\n    this.setState({\n      endX: e.pageX - this.state.grabX,\n      endY: e.pageY - this.state.grabY,\n    });\n  }\n\n  returnToStart() {\n    if (this.state.firstX) {\n      this.setState({\n        dragging: false,\n        return: true,\n        endX: this.state.firstX,\n        endY: this.state.firstY,\n      });\n    }\n  }\n\n  endEvent(cb) {\n    this.dropRespond();\n\n    if (this.props.return) {\n      this.returnToStart();\n    } else {\n      this.setState({\n        dragging: false,\n        return: this.state.return,\n      });\n    }\n\n    if (typeof cb === 'function') {\n      cb.call(this);\n    }\n  }\n\n  detachMouseEvents() {\n    window.removeEventListener('mousemove', this.moveEvent);\n    window.removeEventListener('mouseup', this.mouseUp);\n  }\n\n  detachTouchEvents() {\n    window.removeEventListener('touchmove', this.moveEvent);\n    window.removeEventListener('touchend', this.touchEnd);\n  }\n\n  mouseUp() {\n    this.endEvent(this.detachMouseEvents);\n  }\n\n  touchEnd() {\n    this.endEvent(this.detachTouchEvents);\n  }\n\n  dropRespond() {\n    var corners;\n\n    corners = this.setCorners();\n\n    if (typeof this.props.dropRespond === 'function') {\n      this.props.dropRespond(this.props.message, corners);\n    }\n  }\n\n  setCorners() {\n    var top, left, width, height, el, corners = [];\n\n    left = 0;\n    top = 0;\n    el = this.refs.el;\n    width = el.offsetWidth;\n    height = el.offsetHeight;\n\n    while (el) {\n      if (el.className.indexOf('screen') !== -1) {\n        break;\n      }\n\n      left += el.offsetLeft || 0;\n      top += el.offsetTop || 0;\n      el = el.offsetParent;\n    }\n\n    left += ((this.state.endX - this.state.startX) / this.state.zoom);\n    top += ((this.state.endY - this.state.startY) / this.state.zoom);\n\n    for (var i = 0; i < 4; i++) {\n      corners.push({\n        x: left + width * (i === 1 || i === 2 ? 1 : 0),\n        y: top + height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    this.setState({\n      corners,\n    });\n\n    return corners;\n  }\n\n  componentDidMount() {\n    this.bootstrap();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    this.setZoom();\n\n    this.refs.el.addEventListener('mousedown', this.mouseDown);\n    this.refs.el.addEventListener('touchstart', this.touchStart);\n\n    window.addEventListener('resize', this.setZoom.bind(this));\n  }\n\n  setZoom() {\n    skoash.trigger('getState').then(state => {\n      this.setState({\n        zoom: state.scale,\n      });\n    });\n  }\n\n  getStyle() {\n    var x, y;\n\n    x = ((this.state.endX - this.state.startX) / this.state.zoom);\n    y = ((this.state.endY - this.state.startY) / this.state.zoom);\n\n    return {\n      transform: `translateX(${x}px) translateY(${y}px)`,\n      WebkitTransform: `translateX(${x}px) translateY(${y}px)`,\n    };\n  }\n\n  getClassNames() {\n    return classNames({\n      draggable: true,\n      [this.props.className]: this.props.className,\n      [this.props.message]: this.props.message,\n      DRAGGING: this.state.dragging,\n      RETURN: this.state.return,\n      CORRECT: this.state.correct,\n    }, super.getClassNames());\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"el\"\n        className={this.getClassNames()}\n        style={this.getStyle()}\n      >{this.props.children}</div>\n    );\n  }\n}\n\nexport default Draggable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/draggable/0.1.js\n **/","import classNames from 'classnames';\n\nimport Draggable from 'shared/components/draggable/0.1';\n\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Catchable from 'shared/components/catchable/0.1';\n\nclass Dropper extends Draggable {\n  constructor() {\n    super();\n\n    this.state = _.defaults({\n      items: {},\n      itemCount: 0,\n      itemEndXs: {},\n      direction: '',\n    }, this.state);\n\n    this.next = this.next.bind(this);\n  }\n\n  next(on) {\n    var items, index;\n\n    if (!this.state.started || (!this.props.on && !on)) return;\n\n    index = this.state.itemCount;\n    items = this.state.items;\n    items[index] = this.refs.bin.get(1)[0];\n\n    this.setState({\n      items,\n      itemCount: index + 1,\n    }, () => {\n      var timeoutFunction = i => {\n        var itemRef, itemEndXs;\n        itemRef = this.refs['items-' + index];\n        if (itemRef) {\n          itemRef.addClassName(this.props.prepClasses[i]);\n          this.props.onAddClassName.call(this, this.props.prepClasses[i]);\n          if (i === this.props.prepClasses.length - 1) {\n            itemEndXs = this.state.itemEndXs;\n            itemEndXs[index] = this.state.endX;\n            ReactDOM.findDOMNode(itemRef).addEventListener('transitionend', () => {\n              items = this.state.items;\n              delete items[index];\n              this.setState({\n                items,\n                itemEndXs\n              });\n            });\n          }\n        }\n\n        if (i === this.props.prepClasses.length) this.next();\n      };\n\n      for (let i = 0; i <= this.props.prepClasses.length; i++) {\n        setTimeout(() => {\n          timeoutFunction(i);\n        }, i * this.props.prepTimeout);\n      }\n\n      this.updateGameState({\n        path: this.props.refsTarget,\n        data: {\n          refs: _.filter(this.refs, (v, k) => !k.indexOf('items-')),\n        }\n      });\n    });\n  }\n\n  moveEvent(e) {\n    var endX;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n    }\n\n    endX = Math.min(Math.max(e.pageX - this.state.grabX, this.props.leftBound), this.props.rightBound);\n\n    this.setState({\n      endX,\n      direction: endX > this.state.endX ? 'right' : 'left'\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.on === true && props.on !== this.props.on) {\n      this.next(true);\n    }\n  }\n\n  getItemStyle(key, style) {\n    var endX, x;\n\n    endX = this.state.itemEndXs[key] || this.state.endX;\n    x = ((endX - this.state.startX) / this.state.zoom);\n\n    return _.defaults({\n      transform: `translateX(${x}px)`,\n      WebkitTransform: `translateX(${x}px)`,\n    }, style);\n  }\n\n  getStyle() {\n    var x = ((this.state.endX - this.state.startX) / this.state.zoom);\n\n    return {\n      transform: `translateX(${x}px)`,\n      WebkitTransform: `translateX(${x}px)`,\n    };\n  }\n\n  getClassNames() {\n    return classNames('dropper', this.state.direction, super.getClassNames());\n  }\n\n  /*\n   * shortid is intentionally not used for key here because we want to make sure\n   * that the element is transitioned and not replaced.\n   */\n  renderItems() {\n    return _.map(this.state.items, (item, key) => {\n      var ref = 'items-' + key;\n      if (!item) return null;\n      return (\n        <item.type\n          {...item.props}\n          style={this.getItemStyle(key, item.props.style)}\n          data-ref={ref}\n          data-message={item.props.message}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  renderBin() {\n    return (\n      <this.props.bin.type\n        {...this.props.bin.props}\n        ref=\"bin\"\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div\n        className={this.getClassNames()}\n      >\n        {this.renderBin()}\n        <div\n          ref=\"el\"\n          className=\"el\"\n          style={this.getStyle()}\n        >\n          {this.renderContentList()}\n        </div>\n        <ul className=\"items\">\n          {this.renderItems()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nDropper.defaultProps = _.defaults({\n  prepClasses: ['ready', 'set', 'go'],\n  prepTimeout: 1000,\n  bin: (\n    <Randomizer\n      bin={[\n        <Catchable />,\n      ]}\n    />\n  ),\n  onStart: function () {\n    this.next();\n  },\n  leftBound: 0,\n  rightBound: 800,\n  refsTarget: 'dropper',\n  on: true,\n}, Draggable.defaultProps);\n\nexport default Dropper;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/dropper/0.1.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"ios-splash\"\n      checkComplete={false}\n      completeDelay={6000}\n      nextDelay={3000}\n      completeOnStart\n      hidePrev\n    >\n      <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball.png\" />\n      <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball_anim.gif\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/ios_splash_screen/0.1.js\n **/","class Loader extends skoash.Component {\n  constructor() {\n    super();\n\n  }\n\n  render() {\n    return (\n      <div id=\"loader\" className=\"center\">\n        <div className=\"group\">\n          <h2>Loading!</h2>\n          <div className=\"spinner animated\">\n            <div className=\"spinner animated\">\n              <div className=\"spinner animated\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/loader/0.1.js\n **/","class QuitScreen extends skoash.Screen {\n  okay() {\n    skoash.trigger('quit');\n  }\n\n  cancel() {\n    this.close();\n    skoash.trigger('menuClose', {\n      id: this.props.id,\n    });\n  }\n\n  renderAssets() {\n    if (this.props.assets) {\n      return this.props.assets.map((asset, key) => {\n        return (\n          <skoash.Audio\n            {...asset.props}\n            ref={asset.ref || asset.props['data-ref'] || ('asset-' + key)}\n            key={key}\n            data-ref={key}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} className={'screen ' + this.getClassNames()}>\n        {this.renderAssets()}\n        <div className=\"center\">\n          <div className=\"frame\">\n            <h2>Are you sure you<br/>want to quit?</h2>\n            <h3>Your game progress will be saved</h3>\n            <button className=\"quit-yes\" onClick={this.okay.bind(this)}></button>\n            <button className=\"quit-no\" onClick={this.cancel.bind(this)}></button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default (\n  <QuitScreen\n    id=\"quit\"\n  />\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/quit_screen/0.1.js\n **/","import classNames from 'classnames';\nimport _ from 'lodash';\n\nclass Reveal extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      openReveal: '',\n      currentlyOpen: []\n    };\n\n    this.index = 0;\n  }\n\n  incomplete() {\n    this.setState({\n      openReveal: '',\n      currentlyOpen: []\n    });\n\n    super.incomplete();\n  }\n\n  open(message) {\n    var self = this;\n    var currentlyOpen = this.state.currentlyOpen.concat(message);\n\n    self.setState({\n      open: true,\n      currentlyOpen,\n      openReveal: '' + message,\n    });\n\n    self.playAudio(message);\n\n    if (self.props.completeOnOpen) {\n      self.complete();\n    } else {\n      self.requireForComplete.map(key => {\n        if (key === message && self.refs[key]) {\n          self.refs[key].complete();\n        }\n      });\n    }\n\n    if (self.props.autoClose) {\n      setTimeout(function () {\n        self.close();\n      }, 2000);\n    }\n\n    if (self.props.openTarget) {\n      self.updateGameState({\n        path: self.props.openTarget,\n        data: {\n          open: '' + message\n        }\n      });\n    }\n\n    self.props.onOpen.call(self, message);\n  }\n\n  close(opts = {}) {\n    var prevMessage = this.state.openReveal;\n    var currentlyOpen = this.state.currentlyOpen;\n    currentlyOpen.splice(currentlyOpen.indexOf(prevMessage), 1);\n\n    this.setState({\n      open: false,\n      openReveal: '',\n      currentlyOpen,\n    });\n\n    if (!opts.silent && this.audio['close-sound']) {\n      this.audio['close-sound'].play();\n    }\n\n    this.props.onClose.call(this, prevMessage);\n\n    if (typeof this.props.closeRespond === 'function') {\n      this.props.closeRespond(prevMessage);\n    }\n  }\n\n  start() {\n    super.start();\n    if (this.props.openOnStart != null) {\n      this.open(this.props.openOnStart);\n    } else if (this.props.start && typeof this.props.start === 'function') {\n      this.props.start.call(this);\n    } else {\n      this.close({silent: true});\n    }\n  }\n\n  playAudio(message) {\n    var messages;\n\n    if ('' + parseInt(message, 10) === message) {\n      message = 'asset-' + message;\n    }\n\n    if (!message) return;\n\n    if (this.audio['open-sound']) {\n      this.audio['open-sound'].play();\n    }\n\n    if (typeof message === 'string') {\n      messages = message.split(' ');\n      messages.map(audio => {\n        audio = 'asset-' + audio;\n        if (this.audio[audio]) {\n          this.audio[audio].play();\n        } else if (this.media[audio] && typeof this.media[audio].play === 'function') {\n          this.media[audio].play();\n        }\n      });\n    } else {\n      if (this.audio.voiceOver[message]) {\n        this.audio.voiceOver[message].play();\n      }\n    }\n  }\n\n  renderAssets() {\n    if (this.props.assets) {\n      return this.props.assets.map((asset, key) => {\n        var ref = 'asset-';\n        ref += asset.ref || asset.props['data-ref'] || key;\n        return (\n          <asset.type\n            {...asset.props}\n            data-ref={key}\n            ref={ref}\n            key={key}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderList() {\n    var list = this.props.list;\n\n    return list.map((li, key) => {\n      var dataRef = li.props['data-ref'] || key;\n      var ref = li.ref || dataRef;\n      return (\n        <li.type\n          {...li.props}\n          type=\"li\"\n          className={this.getClass(li, key)}\n          data-ref={dataRef}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.openReveal != null && props.openReveal !== this.props.openReveal) {\n      this.open(props.openReveal);\n    }\n\n    if (props.closeReveal === true && props.closeReveal !== this.props.closeReveal) {\n      this.close();\n    }\n  }\n\n  getClass(li, key) {\n    var classes = '';\n\n    if (li.props.className) classes = li.props.className;\n\n    if (this.state.currentlyOpen.indexOf(key) !== -1 ||\n        this.state.currentlyOpen.indexOf(li.props['data-ref']) !== -1 ||\n        this.state.currentlyOpen.indexOf(li.ref) !== -1\n    ) {\n      classes = classNames(classes, 'OPEN');\n    }\n\n    return classes;\n  }\n\n  getClassNames() {\n    var classes, open = 'open-none ';\n\n    if (this.state.open) {\n      open = '';\n      this.state.currentlyOpen.forEach(ref => {\n        open += 'open-' + ref + ' ';\n      });\n      open += 'OPEN';\n    }\n\n    classes = classNames(\n      'reveal',\n      open,\n      super.getClassNames(),\n    );\n\n    return classes;\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        {this.renderAssets()}\n        <div>\n          <ul>\n            {this.renderList()}\n          </ul>\n          <button className=\"close-reveal\" onClick={this.close.bind(this)}></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nReveal.defaultProps = _.defaults({\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  onOpen: _.noop,\n  onClose: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default Reveal;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/reveal/0.1.js\n **/","import classNames from 'classnames';\n\nclass Selectable extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      classes: {},\n      selectFunction: this.select,\n    };\n  }\n\n  start() {\n    super.start();\n\n    var selectClass, selectFunction, classes = {};\n\n    selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n    selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\n    if (this.props.selectOnStart) {\n      classes[this.props.selectOnStart] = selectClass;\n    }\n\n    this.setState({\n      started: true,\n      classes,\n      selectFunction,\n      selectClass,\n    });\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    var self = this;\n\n    var correctAnswers = this.requireForComplete.filter((ref) => {\n      return self.refs[ref].props.correct;\n    });\n\n    if (correctAnswers.length > 0) {\n      this.requireForComplete = correctAnswers;\n    }\n\n    if (this.refs.bin) {\n      this.setState({\n        list: this.refs.bin.getAll()\n      });\n    }\n  }\n\n  selectHelper(e, classes) {\n    var ref, dataRef, target, id, isCorrect, self = this;\n\n    target = e.target.closest('LI');\n\n    if (!target) return;\n\n    dataRef = target.getAttribute('data-ref');\n    ref = self.refs[dataRef];\n\n    isCorrect = (ref && ref.props && ref.props.correct) || (!self.props.answers || !self.props.answers.length || self.props.answers.indexOf(dataRef) !== -1);\n\n    if (self.props.allowDeselect && classes[dataRef]) {\n      delete classes[dataRef];\n    } else if (isCorrect) {\n      classes[dataRef] = self.state.selectClass;\n    }\n\n    self.setState({\n      classes,\n    });\n\n    self.props.selectRespond.call(self, dataRef);\n    self.props.onSelect.call(self, dataRef);\n\n    if (self.props.chooseOne) {\n      self.requireForComplete = [dataRef];\n    }\n\n    if (self.props.dataTarget) {\n      self.updateGameState({\n        path: self.props.dataTarget,\n        data: {\n          target: ref\n        }\n      });\n    }\n\n    if (self.props.completeListOnClick) {\n      self.requireForComplete.map(key => {\n        if (key === id && self.refs[id]) {\n          self.refs[id].complete();\n        }\n      });\n    }\n\n    self.requireForComplete.map(key => {\n      if (key === dataRef && self.refs[key]) {\n        self.refs[key].complete();\n      }\n    });\n  }\n\n  select(e) {\n    var classes = [];\n    this.selectHelper(e, classes);\n  }\n\n  highlight(e) {\n    var classes = this.state.classes;\n    this.selectHelper(e, classes);\n  }\n\n  getClass(key, li) {\n    return classNames(\n      li.props.className,\n      this.state.classes[key],\n      this.state.classes[li.props['data-ref']],\n      this.state.classes[li.props['data-key']]\n    );\n  }\n\n  getClassNames() {\n    return classNames('selectable', super.getClassNames());\n  }\n\n  checkComplete() {\n    var self = this, complete;\n\n    if (this.props.checkComplete === false) return;\n\n    complete = self.requireForComplete.every(key => {\n      if (self.refs[key] instanceof Node) {\n        return true;\n      }\n      if (!self.refs[key].state || (self.refs[key].state && !self.refs[key].state.complete)) {\n        if (typeof self.refs[key].checkComplete === 'function') {\n          self.refs[key].checkComplete();\n        }\n        return false;\n      }\n      return true;\n    });\n\n    if (complete && !self.state.complete) {\n      self.complete();\n    } else if (self.state.started && !complete && self.state.complete) {\n      self.incomplete();\n    }\n  }\n\n  renderBin() {\n    if (!this.props.bin) return null;\n\n    return (\n      <this.props.bin.type\n        {...this.props.bin.props}\n        ref=\"bin\"\n      />\n    );\n  }\n\n  renderList() {\n    var list = this.props.list || this.state.list;\n    return list.map((li, key) => {\n      var dataRef = li.props['data-ref'] || key;\n      var ref = li.ref || li.props.id || dataRef;\n      var message = li.props.message || '' + key;\n      return (\n        <li.type\n          {...li.props}\n          type=\"li\"\n          className={this.getClass(key, li)}\n          message={message}\n          data-message={message}\n          data-ref={dataRef}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBin()}\n        <ul className={this.getClassNames()} onClick={this.state.selectFunction.bind(this)}>\n          {this.renderList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nSelectable.defaultProps = _.defaults({\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  selectClass: 'SELECTED',\n  completeListOnClick: true,\n  selectRespond: _.identity,\n  onSelect: _.identity,\n}, skoash.Component.defaultProps);\n\nexport default Selectable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/selectable/0.1.js\n **/","window.ENVIRONMENT = {\n  MEDIA: 'https://media.changemyworldnow.com/'\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/js/prod-variables.js\n **/","'use strict';\nmodule.exports = require('./lib/index');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/index.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/decode.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/encode.js\n ** module id = 43\n ** module chunks = 0\n **/","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar isValid = require('./is-valid');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/index.js\n ** module id = 44\n ** module chunks = 0\n **/","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/is-valid.js\n ** module id = 45\n ** module chunks = 0\n **/","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/random/random-byte-browser.js\n ** module id = 46\n ** module chunks = 0\n **/","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/random/random-from-seed.js\n ** module id = 47\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = 0;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/util/cluster-worker-id-browser.js\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 49\n ** module chunks = 0\n **/"],"sourceRoot":""}