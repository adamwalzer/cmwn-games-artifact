{"version":3,"sources":["webpack:///litter-bug/ai.js","webpack:///webpack/bootstrap 0192020ba821d0c7d3d9","webpack:///../~/classnames/index.js","webpack:///./shared/components/randomizer/0.1.js","webpack:///./shared/components/media_collection/0.1.js","webpack:///./shared/components/score/0.1.js","webpack:///./shared/components/timer/0.1.js","webpack:///./litter-bug/components/catch_game_screen_component.js","webpack:///./shared/components/cannon/0.2.js","webpack:///./shared/components/carousel/0.1.js","webpack:///./shared/components/catchable/0.1.js","webpack:///./shared/components/reveal_prompt/0.1.js","webpack:///../~/shortid/lib/alphabet.js","webpack:///../~/lodash/lodash.js","webpack:///./litter-bug/components/catch_game_level_one_screen.js","webpack:///./litter-bug/components/catch_game_level_three_screen.js","webpack:///./litter-bug/components/catch_game_level_two_screen.js","webpack:///./litter-bug/components/clean_up_game_lvl1_screen.js","webpack:///./litter-bug/components/clean_up_game_lvl2_screen.js","webpack:///./litter-bug/components/clean_up_game_lvl3_screen.js","webpack:///./litter-bug/components/commit_screen.js","webpack:///./litter-bug/components/flip_screen.js","webpack:///./litter-bug/components/good_for_you_screen.js","webpack:///./litter-bug/components/ground_screen.js","webpack:///./litter-bug/components/room_screen.js","webpack:///./litter-bug/components/school_screen.js","webpack:///./litter-bug/components/sing_about_it_screen.js","webpack:///./litter-bug/components/take_pledge_screen.js","webpack:///./litter-bug/components/title_screen.js","webpack:///./litter-bug/components/video_screen.js","webpack:///./litter-bug/config.game.js","webpack:///./litter-bug/index.js","webpack:///./shared/components/catch/0.1.js","webpack:///./shared/components/catcher/0.1.js","webpack:///./shared/components/draggable/0.1.js","webpack:///./shared/components/dropper/0.1.js","webpack:///./shared/components/ios_splash_screen/0.1.js","webpack:///./shared/components/loader/0.1.js","webpack:///./shared/components/quit_screen/0.1.js","webpack:///./shared/components/reveal/0.1.js","webpack:///./shared/components/selectable/0.1.js","webpack:///./shared/js/prod-variables.js","webpack:///../~/shortid/index.js","webpack:///../~/shortid/lib/decode.js","webpack:///../~/shortid/lib/encode.js","webpack:///../~/shortid/lib/index.js","webpack:///../~/shortid/lib/is-valid.js","webpack:///../~/shortid/lib/random/random-byte-browser.js","webpack:///../~/shortid/lib/random/random-from-seed.js","webpack:///../~/shortid/lib/util/cluster-worker-id-browser.js","webpack:///../~/webpack/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","hasOwn","join","hasOwnProperty","undefined","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","source","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_classnames","_classnames2","Randomizer","_skoash$Component","this","getAll","_","shuffle","bin","amount","items","remain","state","concat","splice","setState","getClassNames","renderBin","map","li","ref","React","createElement","type","data-ref","render","className","skoash","Component","defaultProps","defaults","shouldComponentUpdate","MediaCollection","play","refs","onPlay","componentWillReceiveProps","identity","Score","_this","score","checkComplete","bind","ready","requireForComplete","max","correct","complete","bootstrap","startingScore","_this2","setTimeout","resetOnComplete","setScore","incorrect","completeDelay","checkScore","multipleCompletes","incomplete","up","increment","isFinite","updateScore","down","downIncrement","_this3","updateGameState","path","dataTarget","data","onUpdateScore","_this4","upIncrement","data-max","data-score","leadingContent","children","Timer","time","stamp","Date","now","started","paused","timeout","stop","window","requestAnimationFrame","incompleteRefs","restart","start","pause","resume","getTime","countDown","opts","onOpenReveal","onCloseReveal","onScoreComplete","onTimerComplete","onAddClassName","onTransitionEnd","onPlaySFX","onCorrectCatch","onIncorrectCatch","onMove","prevMessage","close","Screen","parseInt","timeLeft","minutesLeft","secondsLeft","Math","floor","playing","item","gameState","message","canCatch","litter","bucketRef","addClassName","removeClassName","e","rect","styles","catcher","targetTouches","getBoundingClientRect","offsetY","pageY","top","min","j","rows","_15","style","_3","vos","sfx","level","_5","onComplete","_7","_9","leftBound","rightBound","on","prepClasses","prepTimeout","_11","completeOnStart","_13","moveBuckets","bucket","catchableRefs","onCorrect","onIncorrect","assets","Audio","src","_17","openOnStart","openTarget","openReveal","closeReveal","onClose","onOpen","list","revealList","_2","_4","_6","_8","_10","_12","_14","_16","Cannon","fire","reload","showNum","next","reverseReload","pop","shift","enabled","reloadTime","onFire","onReload","FIRE","RELOAD","getClass","renderAmmo","renderLaunchButton","launchButton","onClick","noop","_shortid","_shortid2","Carousel","_Selectable","nextProps","selected","select","selectHelper","targetIndex","onSelect","renderList","data-message","data-key","clickable","selectFunction","Catchable","reset","trigger","DOMNode","ReactDOM","findDOMNode","markCaught","onCaught","disabled","CAUGHT","reCatchable","isCorrect","_defineProperty","_lodash","_lodash2","RevealPrompt","index","open","completeOnOpen","autoClose","_ClassNames","indexOf","_ClassNames2","shuffled","setCharacters","_alphabet_","alphabet","ORIGINAL","Error","unique","split","filter","ind","arr","lastIndexOf","characters","setSeed","seed","randomFromSeed","previousSeed","sourceArray","targetArray","r","nextValue","characterIndex","getShuffled","lookup","alphabetShuffled","global","addMapEntry","pair","set","addSetEntry","add","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","isHostObject","toString","iteratorToArray","iterator","done","mapToArray","size","forEach","overArg","transform","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","match","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseConformsTo","baseCreate","proto","objectCreate","baseDelay","wait","FUNC_ERROR_TEXT","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","objectToString","baseGt","other","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","last","baseIsArrayBuffer","arrayBufferTag","baseIsDate","dateTag","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","mapTag","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIsRegExp","regexpTag","baseIsSet","setTag","baseIsTypedArray","isLength","typedArrayTags","baseIteratee","baseMatchesProperty","baseMatches","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseRest","otherArgs","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","slice","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","root","Ctor","isBind","BIND_FLAG","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","reApos","thisBinding","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","boolTag","numberTag","errorTag","name","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getAllKeysIn","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","transforms","getWrapDetails","reWrapDetails","reSplitDetails","hasPath","hasFunc","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","insertWrapDetails","details","reWrapComment","spreadableSymbol","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","updateWrapDetails","wrapFlags","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","rand","some","after","before","curry","curryRight","debounce","options","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","propertyIsEnumerable","getLength","isBoolean","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","objectCtorString","isSafeInteger","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","isProto","baseKeys","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","deburrLetter","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","isRegExp","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","imports","importsKeys","importsValues","isEscaping","isEvaluating","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","unescapeHtmlChar","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","maxBy","mean","meanBy","minBy","sum","sumBy","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","Symbol","enumerate","isConcatSpreadable","ceil","nativeGetPrototype","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","nativeKeys","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","remaining","HOT_SPAN","HOT_COUNT","reference","reLeadingDot","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","isArrayBuffer","nodeIsArrayBuffer","isDate","nodeIsDate","isMap","nodeIsMap","nodeIsRegExp","isSet","nodeIsSet","nodeIsTypedArray","lt","lte","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeGlobal","freeSelf","freeExports","freeModule","freeProcess","process","nodeUtil","binding","_catch_game_screen_component2","MediaSequence","silentOnStart","_catch_game_screen_component","playTarget","fall","Image","CONFIG","POINTS","points","LVL","TIMER","emitOnComplete","hidePrev","Video","config","version","dimensions","width","ratio","_config","_config2","_title_screen","_title_screen2","_catch_game_level_one_screen","_catch_game_level_one_screen2","_catch_game_level_two_screen","_catch_game_level_two_screen2","_catch_game_level_three_screen","_catch_game_level_three_screen2","_clean_up_game_lvl1_screen","_clean_up_game_lvl1_screen2","_clean_up_game_lvl2_screen","_clean_up_game_lvl2_screen2","_clean_up_game_lvl3_screen","_clean_up_game_lvl3_screen2","_room_screen","_room_screen2","_school_screen","_school_screen2","_ground_screen","_ground_screen2","_sing_about_it_screen","_sing_about_it_screen2","_video_screen","_video_screen2","_good_for_you_screen","_good_for_you_screen2","_take_pledge_screen","_take_pledge_screen2","_commit_screen","_commit_screen2","_flip_screen","_flip_screen2","LitterBug","Game","screens","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","menus","quit","loader","getBackgroundIndex","loop","passData","SUN","sun","Catch","onMouseMove","onResize","checkCollisions","componentDidMount","bucketNode","catchableNodes","catchables","val","attachMouseEvents","catchRef","addEventListener","mouseX","pageX","then","zoom","scale","edges","getEdges","bucketWidth","right","left","offsetParent","offsetWidth","bucketTop","bucketBottom","bottom","node","catchableRef","selectCatchable","catchableNode","catchable","audio","bucketRect","isColliding","catchRect","xCenter","yOffset","el","height","offsetHeight","offsetLeft","offsetTop","getStyle","bucketInBounds","renderBucket","renderCatchables","getClasses","isComplete","Catcher","_Catch","moveEvent","onReady","bucketNodes","a","v","k","bucketRefKey","bucketCorners","catchableCorners","x","y","util","doIntersect","playMedia","renderContentList","Draggable","startX","startY","endX","endY","mouseDown","mouseUp","touchStart","touchEnd","shouldDrag","markIncorrect","returnToStart","markCorrect","startEvent","cb","grabX","grabY","offsetX","firstX","firstY","dragging","return","dragRespond","attachTouchEvents","endEvent","dropRespond","detachMouseEvents","removeEventListener","detachTouchEvents","corners","setCorners","setZoom","WebkitTransform","_classNames","draggable","Dropper","_Draggable","itemCount","itemEndXs","direction","timeoutFunction","itemRef","itemDOM","_loop","refsTarget","getItemStyle","renderItems","onStart","onResume","nextDelay","Loader","QuitScreen","_skoash$Screen","okay","renderAssets","asset","Reveal","currentlyOpen","allowMultipleOpen","playAudio","silent","closeRespond","messages","media","voiceOver","dataRef","Selectable","selectClass","highlight","selectOnStart","correctAnswers","closest","getAttribute","answers","allowDeselect","selectRespond","chooseOne","completeListOnClick","Node","ENVIRONMENT","MEDIA","decode","substr","worker","encode","loopCounter","str","randomByte","pow","generate","seconds","REDUCE_TIME","previousSeconds","counter","clusterWorkerId","seedValue","workerId","newCharacters","isValid","isShortId","len","crypto","getRandomValues","dest","msCrypto","getNextValue","_seed_","webpackPolyfill","deprecate"],"mappings":"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","file":"litter-bug/ai.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(40);\n\tmodule.exports = __webpack_require__(30);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar hasOwn = {}.hasOwnProperty;\n\t\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\t\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\t\n\t\t\t\tvar argType = typeof arg;\n\t\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn classes.join(' ');\n\t\t}\n\t\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (true) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn classNames;\n\t\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Randomizer = function (_skoash$Component) {\n\t  _inherits(Randomizer, _skoash$Component);\n\t\n\t  function Randomizer() {\n\t    _classCallCheck(this, Randomizer);\n\t\n\t    return _possibleConstructorReturn(this, (Randomizer.__proto__ || Object.getPrototypeOf(Randomizer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Randomizer, [{\n\t    key: 'getAll',\n\t    value: function getAll() {\n\t      return _.shuffle(this.props.bin);\n\t    }\n\t  }, {\n\t    key: 'get',\n\t    value: function get() {\n\t      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t\n\t      var items,\n\t          bin = [];\n\t\n\t      if (this.props.remain && this.state.bin) {\n\t        bin = this.state.bin;\n\t      }\n\t\n\t      while (bin.length < amount) {\n\t        bin = bin.concat(_.shuffle(this.props.bin));\n\t      }\n\t\n\t      items = bin.splice(0, amount);\n\t\n\t      if (this.props.remain) {\n\t        this.setState({ bin: bin });\n\t      }\n\t\n\t      return items;\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('randomizer', _get(Randomizer.prototype.__proto__ || Object.getPrototypeOf(Randomizer.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      var bin = this.props.bin || [];\n\t\n\t      return bin.map(function (li, key) {\n\t        var ref = li.ref || li.props['data-ref'] || key;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          'data-ref': ref,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'ul',\n\t        { className: this.getClassNames() },\n\t        this.renderBin()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Randomizer;\n\t}(skoash.Component);\n\t\n\tRandomizer.defaultProps = _.defaults({\n\t  bin: [],\n\t  remain: false,\n\t  shouldComponentUpdate: function shouldComponentUpdate() {\n\t    return false;\n\t  }\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Randomizer;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MediaCollection = function (_skoash$Component) {\n\t  _inherits(MediaCollection, _skoash$Component);\n\t\n\t  function MediaCollection() {\n\t    _classCallCheck(this, MediaCollection);\n\t\n\t    return _possibleConstructorReturn(this, (MediaCollection.__proto__ || Object.getPrototypeOf(MediaCollection)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(MediaCollection, [{\n\t    key: \"play\",\n\t    value: function play(ref) {\n\t      if (this.refs[ref]) this.refs[ref].play();\n\t\n\t      this.props.onPlay.call(this, ref);\n\t    }\n\t  }, {\n\t    key: \"componentWillReceiveProps\",\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(MediaCollection.prototype.__proto__ || Object.getPrototypeOf(MediaCollection.prototype), \"componentWillReceiveProps\", this).call(this, props);\n\t\n\t      if (props.play && props.play !== this.props.play) {\n\t        this.play(props.play);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return MediaCollection;\n\t}(skoash.Component);\n\t\n\tMediaCollection.defaultProps = _.defaults({\n\t  onPlay: _.identity\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = MediaCollection;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Score = function (_skoash$Component) {\n\t  _inherits(Score, _skoash$Component);\n\t\n\t  function Score() {\n\t    _classCallCheck(this, Score);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Score.__proto__ || Object.getPrototypeOf(Score)).call(this));\n\t\n\t    _this.state = {\n\t      score: 0\n\t    };\n\t\n\t    _this.checkComplete = _this.checkComplete.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Score, [{\n\t    key: 'checkComplete',\n\t    value: function checkComplete() {\n\t      if (!this.props.checkComplete || !this.state.ready || !this.requireForComplete) return;\n\t      if (!this.props.max) return;\n\t      if ((this.state.score >= this.props.max || this.props.correct >= this.props.max) && !this.state.complete) this.complete();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'bootstrap', this).call(this);\n\t\n\t      this.setState({\n\t        score: this.props.startingScore\n\t      });\n\t    }\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      var _this2 = this;\n\t\n\t      _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'complete', this).call(this);\n\t\n\t      setTimeout(function () {\n\t        if (_this2.props.resetOnComplete) {\n\t          _this2.setScore({\n\t            correct: 0,\n\t            incorrect: 0\n\t          });\n\t        }\n\t      }, this.props.completeDelay);\n\t    }\n\t  }, {\n\t    key: 'checkScore',\n\t    value: function checkScore(props) {\n\t      if (!props.max) return;\n\t      if (this.state.score >= props.max && (!this.state.complete || props.multipleCompletes)) {\n\t        this.complete();\n\t      } else if (this.state.complete && !props.complete) {\n\t        this.incomplete();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'up',\n\t    value: function up(increment) {\n\t      increment = _.isFinite(increment) ? increment : _.isFinite(this.props.increment) ? this.props.increment : 1;\n\t      if (!_.isFinite(increment)) throw 'increment must be finite';\n\t\n\t      this.updateScore(increment);\n\t    }\n\t  }, {\n\t    key: 'down',\n\t    value: function down(increment) {\n\t      increment = _.isFinite(increment) ? increment : _.isFinite(this.props.downIncrement) ? this.props.downIncrement : _.isFinite(this.props.increment) ? this.props.increment : 1;\n\t      if (!_.isFinite(increment)) throw 'increment must be finite';\n\t\n\t      this.updateScore(-1 * increment);\n\t    }\n\t  }, {\n\t    key: 'updateScore',\n\t    value: function updateScore(increment) {\n\t      var _this3 = this;\n\t\n\t      this.setState({\n\t        score: this.state.score + increment\n\t      }, function () {\n\t        _this3.updateGameState({\n\t          path: _this3.props.dataTarget,\n\t          data: {\n\t            score: _this3.state.score\n\t          }\n\t        });\n\t\n\t        _this3.checkScore(_this3.props);\n\t        _this3.props.onUpdateScore.call(_this3, _this3.state.score);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setScore',\n\t    value: function setScore(props) {\n\t      var _this4 = this;\n\t\n\t      var upIncrement, downIncrement, score;\n\t\n\t      if (_.isFinite(props)) {\n\t        score = props;\n\t      } else {\n\t        upIncrement = _.isFinite(props.increment) ? props.increment : 1;\n\t        downIncrement = _.isFinite(props.downIncrement) ? props.downIncrement : _.isFinite(props.increment) ? props.increment : 1;\n\t        score = upIncrement * props.correct - downIncrement * props.incorrect;\n\t      }\n\t\n\t      this.setState({\n\t        score: score\n\t      }, function () {\n\t        _this4.checkScore(props);\n\t        _this4.props.onUpdateScore.call(_this4, score);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.correct !== this.props.correct || props.incorrect !== this.props.incorrect) {\n\t        this.setScore(props);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('score', 'score-' + this.state.score, _get(Score.prototype.__proto__ || Object.getPrototypeOf(Score.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        _extends({}, this.props, { className: this.getClassNames(), 'data-max': this.props.max, 'data-score': this.state.score, score: this.state.score }),\n\t        this.props.leadingContent,\n\t        React.createElement(\n\t          'span',\n\t          null,\n\t          this.state.score\n\t        ),\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Score;\n\t}(skoash.Component);\n\t\n\tScore.defaultProps = _.defaults({\n\t  checkComplete: false,\n\t  startingScore: 0,\n\t  correct: 0,\n\t  incorrect: 0,\n\t  onUpdateScore: _.identity\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Score;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Timer = function (_skoash$Component) {\n\t  _inherits(Timer, _skoash$Component);\n\t\n\t  function Timer() {\n\t    _classCallCheck(this, Timer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Timer.__proto__ || Object.getPrototypeOf(Timer)).call(this));\n\t\n\t    _this.state = {\n\t      time: 0,\n\t      stamp: 0\n\t    };\n\t\n\t    _this.checkComplete = _this.checkComplete.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Timer, [{\n\t    key: 'checkComplete',\n\t    value: function checkComplete() {\n\t      var _this2 = this;\n\t\n\t      var time = Date.now();\n\t\n\t      if (!this.props.checkComplete) return;\n\t\n\t      if (!this.state.started || this.state.paused) return;\n\t\n\t      if (time >= this.state.stamp) {\n\t        this.setState({\n\t          stamp: time + 1000,\n\t          time: this.state.time + 1\n\t        }, function () {\n\t          if (_this2.state.time * 1000 >= _this2.props.timeout) {\n\t            _this2.complete();\n\t            _this2.stop();\n\t          } else {\n\t            window.requestAnimationFrame(_this2.checkComplete);\n\t          }\n\t        });\n\t      } else {\n\t        window.requestAnimationFrame(this.checkComplete);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'incompleteRefs',\n\t    value: function incompleteRefs() {\n\t      this.restart();\n\t    }\n\t  }, {\n\t    key: 'restart',\n\t    value: function restart() {\n\t      var _this3 = this;\n\t\n\t      if (!this.state.ready) return;\n\t      if (this.state.complete) this.incomplete();\n\t\n\t      this.setState({\n\t        time: 0,\n\t        stamp: 0\n\t      }, function () {\n\t        if (_this3.state.started) {\n\t          _this3.checkComplete();\n\t        } else {\n\t          _this3.start();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (!this.state.started) return;\n\t      this.setState({\n\t        started: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      if (!this.state.started) return;\n\t      this.setState({\n\t        paused: true\n\t      });\n\t    }\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      var _this4 = this;\n\t\n\t      if (!this.state.paused) return;\n\t      this.setState({\n\t        paused: false\n\t      }, function () {\n\t        if (_this4.state.started) {\n\t          _this4.checkComplete();\n\t        } else {\n\t          _this4.start();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Timer.prototype.__proto__ || Object.getPrototypeOf(Timer.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.restart && props.restart !== this.props.restart) {\n\t        this.restart();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('timer', _get(Timer.prototype.__proto__ || Object.getPrototypeOf(Timer.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var time = this.props.getTime.call(this);\n\t      return React.createElement(\n\t        'div',\n\t        _extends({}, this.props, { className: this.getClassNames(), time: time }),\n\t        this.props.leadingContent,\n\t        React.createElement(\n\t          'span',\n\t          null,\n\t          time\n\t        ),\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Timer;\n\t}(skoash.Component);\n\t\n\tTimer.defaultProps = _.defaults({\n\t  getTime: function getTime() {\n\t    return this.props.countDown ? this.props.timeout / 1000 - this.state.time : this.state.time;\n\t  },\n\t  leadingContent: '',\n\t  timeout: 60000,\n\t  countDown: false\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Timer;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t  var onOpenReveal, onCloseReveal, onScoreComplete, getTime, onTimerComplete, onAddClassName, onTransitionEnd, onPlaySFX, onCorrectCatch, onIncorrectCatch, onMove, bin;\n\t\n\t  onOpenReveal = function onOpenReveal() {\n\t    this.updateGameState({\n\t      path: 'game',\n\t      data: {\n\t        stop: true,\n\t        start: false\n\t      }\n\t    });\n\t  };\n\t\n\t  onCloseReveal = function onCloseReveal(prevMessage) {\n\t    this.updateGameState({\n\t      path: 'game',\n\t      data: {\n\t        stop: false,\n\t        start: true\n\t      }\n\t    });\n\t    this.updateGameState({\n\t      path: 'reveal',\n\t      data: {\n\t        close: false\n\t      }\n\t    });\n\t    this.updateGameState({\n\t      path: 'openReveal',\n\t      data: null\n\t    });\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        correct: 0,\n\t        incorrect: 0\n\t      }\n\t    });\n\t\n\t    if (prevMessage === 'level-up') {\n\t      skoash.Screen.prototype.goto(parseInt(key, 10) + 1);\n\t    }\n\t  };\n\t\n\t  onScoreComplete = function onScoreComplete() {\n\t    this.updateGameState({\n\t      path: 'openReveal',\n\t      data: 'level-up'\n\t    });\n\t    this.updateGameState({\n\t      path: 'game',\n\t      data: {\n\t        complete: true\n\t      }\n\t    });\n\t  };\n\t\n\t  getTime = function getTime() {\n\t    var timeLeft, minutesLeft, secondsLeft;\n\t    timeLeft = this.props.timeout / 1000 - this.state.time;\n\t    minutesLeft = Math.floor(timeLeft / 60);\n\t    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n\t    secondsLeft = timeLeft % 60;\n\t    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n\t    return minutesLeft + ':' + secondsLeft;\n\t  };\n\t\n\t  onTimerComplete = function onTimerComplete() {\n\t    if (_.get(props, 'data.openReveal') === 'level-up') return;\n\t    this.updateGameState({\n\t      path: 'openReveal',\n\t      data: 'try-again'\n\t    });\n\t  };\n\t\n\t  onAddClassName = function onAddClassName(className) {\n\t    if (className === 'go') return;\n\t    this.updateGameState({\n\t      path: 'sfx',\n\t      data: {\n\t        playing: 'print'\n\t      }\n\t    });\n\t  };\n\t\n\t  onTransitionEnd = function onTransitionEnd(item) {\n\t    if (_.get(props, 'data.openReveal') || props.gameState.paused || item.props.message !== 'trash' || !item.state.canCatch) return;\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        litter: _.get(props, 'data.score.litter', 0) + 1\n\t      }\n\t    });\n\t    this.updateGameState({\n\t      path: 'sfx',\n\t      data: {\n\t        playing: 'miss'\n\t      }\n\t    });\n\t  };\n\t\n\t  onPlaySFX = function onPlaySFX() {\n\t    this.updateGameState({\n\t      path: 'sfx',\n\t      data: {\n\t        playing: null\n\t      }\n\t    });\n\t  };\n\t\n\t  onCorrectCatch = function onCorrectCatch(bucketRef) {\n\t    bucketRef.addClassName('correct');\n\t    setTimeout(function () {\n\t      bucketRef.removeClassName('correct');\n\t    }, 1000);\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        correct: _.get(props, 'data.score.correct', 0) + 1\n\t      }\n\t    });\n\t  };\n\t\n\t  onIncorrectCatch = function onIncorrectCatch(bucketRef) {\n\t    bucketRef.addClassName('incorrect');\n\t    setTimeout(function () {\n\t      bucketRef.removeClassName('incorrect');\n\t    }, 1000);\n\t    this.updateGameState({\n\t      path: 'score',\n\t      data: {\n\t        incorrect: _.get(props, 'data.score.incorrect', 0) + 1\n\t      }\n\t    });\n\t  };\n\t\n\t  onMove = function onMove(e) {\n\t    var rect, styles;\n\t\n\t    if (e.target !== this.refs.catcher) return;\n\t\n\t    if (e.targetTouches && e.targetTouches[0]) {\n\t      rect = e.target.getBoundingClientRect();\n\t      e = e.targetTouches[0];\n\t      e.offsetY = e.pageY - rect.top;\n\t    }\n\t\n\t    styles = this.state.styles;\n\t\n\t    styles[0] = {\n\t      top: Math.min(e.offsetY, 360)\n\t    };\n\t\n\t    this.setState({\n\t      styles: styles\n\t    });\n\t  };\n\t\n\t  bin = [];\n\t  for (var i = 0; i < opts.bin.length; i++) {\n\t    for (var j = 0; j < opts.rows; j++) {\n\t      bin.push(React.createElement(_15.default, {\n\t        className: opts.bin[i].className,\n\t        message: opts.bin[i].message,\n\t        style: {\n\t          top: 400 * (j + .4) / opts.rows\n\t        }\n\t      }));\n\t    }\n\t  }\n\t\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: opts.id\n\t    }),\n\t    React.createElement(_3.default, {\n\t      play: _.get(props, 'data.reveal.open'),\n\t      children: opts.vos\n\t    }),\n\t    React.createElement(_3.default, {\n\t      play: _.get(props, 'data.sfx.playing'),\n\t      children: opts.sfx,\n\t      onPlay: onPlaySFX\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'bottom' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'level' },\n\t        opts.level\n\t      ),\n\t      React.createElement(\n\t        _5.default,\n\t        {\n\t          className: 'mr-eco-score',\n\t          max: 100,\n\t          increment: 10,\n\t          correct: _.get(props, 'data.score.correct', 0),\n\t          incorrect: _.get(props, 'data.score.incorrect', 0),\n\t          onComplete: onScoreComplete\n\t        },\n\t        React.createElement('div', null)\n\t      ),\n\t      React.createElement(\n\t        _5.default,\n\t        {\n\t          className: 'litter-bug-score',\n\t          max: 100,\n\t          increment: 10,\n\t          correct: _.get(props, 'data.score.litter', 0),\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          onComplete: onTimerComplete\n\t        },\n\t        React.createElement('div', null)\n\t      ),\n\t      React.createElement(_7.default, {\n\t        countDown: true,\n\t        timeout: opts.timeout,\n\t        getTime: getTime,\n\t        stop: _.get(props, 'data.game.complete', false),\n\t        complete: _.get(props, 'data.game.complete', false),\n\t        checkComplete: _.get(props, 'data.game.start', false),\n\t        restart: _.get(props, 'data.game.start', false),\n\t        onComplete: onTimerComplete\n\t      })\n\t    ),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'main' },\n\t      React.createElement(_9.default, {\n\t        leftBound: 70,\n\t        rightBound: 820,\n\t        on: _.get(props, 'data.game.start', false),\n\t        start: _.get(props, 'data.game.start', false),\n\t        stop: _.get(props, 'data.game.complete', false),\n\t        prepClasses: ['ready', 'go'],\n\t        prepTimeout: opts.prepTimeout,\n\t        onAddClassName: onAddClassName,\n\t        onTransitionEnd: onTransitionEnd,\n\t        bin: React.createElement(_11.default, {\n\t          completeOnStart: true,\n\t          checkComplete: false,\n\t          bin: bin,\n\t          remain: true\n\t        })\n\t      }),\n\t      React.createElement(_13.default, {\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        start: _.get(props, 'data.game.start', false),\n\t        canCatch: _.get(props, 'data.game.start', false),\n\t        moveBuckets: true,\n\t        onMove: onMove,\n\t        bucket: [React.createElement(skoash.Component, { className: 'mr-eco', message: 'trash' })],\n\t        catchableRefs: _.get(props, 'data.dropper.refs', []),\n\t        onCorrect: onCorrectCatch,\n\t        onIncorrect: onIncorrectCatch,\n\t        assets: [React.createElement(skoash.Audio, {\n\t          type: 'voiceOver',\n\t          ref: 'correct',\n\t          src: 'media/_assets/_sounds/_effects/WinPoints.mp3'\n\t        }), React.createElement(skoash.Audio, {\n\t          type: 'voiceOver',\n\t          ref: 'incorrect',\n\t          src: 'media/_assets/_sounds/_effects/LosePoints.mp3'\n\t        })]\n\t      })\n\t    ),\n\t    React.createElement(_17.default, {\n\t      openOnStart: opts.openOnStart,\n\t      openTarget: 'reveal',\n\t      openReveal: _.get(props, 'data.openReveal', false),\n\t      closeReveal: _.get(props, 'data.reveal.close', false),\n\t      onClose: onCloseReveal,\n\t      onOpen: onOpenReveal,\n\t      list: opts.revealList\n\t    })\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(4);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(5);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(34);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(32);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(9);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tvar _16 = __webpack_require__(38);\n\t\n\tvar _17 = _interopRequireDefault(_16);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Cannon = function (_skoash$Component) {\n\t  _inherits(Cannon, _skoash$Component);\n\t\n\t  function Cannon() {\n\t    _classCallCheck(this, Cannon);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Cannon.__proto__ || Object.getPrototypeOf(Cannon)).call(this));\n\t\n\t    _this.state = {\n\t      classes: {}\n\t    };\n\t\n\t    _this.fire = _this.fire.bind(_this);\n\t    _this.reload = _this.reload.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Cannon, [{\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Cannon.prototype.__proto__ || Object.getPrototypeOf(Cannon.prototype), 'bootstrap', this).call(this);\n\t\n\t      var list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\t\n\t      this.setState({\n\t        list: list\n\t      });\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Cannon.prototype.__proto__ || Object.getPrototypeOf(Cannon.prototype), 'start', this).call(this);\n\t      this.next();\n\t    }\n\t  }, {\n\t    key: 'next',\n\t    value: function next() {\n\t      var classes, list;\n\t      classes = this.state.classes;\n\t      list = this.state.list;\n\t      if (this.props.reverseReload) {\n\t        list = this.refs.bin.get(1).concat(list);\n\t        list.pop();\n\t      } else {\n\t        list = list.concat(this.refs.bin.get(1));\n\t        list.shift();\n\t      }\n\t      classes[this.state.list.length - 1] = 'LOADED';\n\t      this.enabled = true;\n\t\n\t      this.setState({\n\t        classes: classes,\n\t        list: list\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fire',\n\t    value: function fire() {\n\t      var _this2 = this;\n\t\n\t      this.setState({\n\t        fire: true,\n\t        reload: false\n\t      }, function () {\n\t        setTimeout(function () {\n\t          _this2.reload();\n\t          _this2.next();\n\t        }, _this2.props.reloadTime);\n\t      });\n\t\n\t      this.props.onFire.call(this);\n\t    }\n\t  }, {\n\t    key: 'reload',\n\t    value: function reload() {\n\t      this.setState({\n\t        fire: false,\n\t        reload: true\n\t      });\n\t\n\t      this.props.onReload.call(this);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('cannon', {\n\t        FIRE: this.state.fire,\n\t        RELOAD: this.state.reload\n\t      }, _get(Cannon.prototype.__proto__ || Object.getPrototypeOf(Cannon.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key, li) {\n\t      return (0, _classnames2.default)('ammo', li.props.className, this.state.classes[key]);\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      if (!this.props.bin) return null;\n\t\n\t      return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t        ref: 'bin'\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'renderAmmo',\n\t    value: function renderAmmo() {\n\t      var _this3 = this;\n\t\n\t      var list = this.state.list || this.props.list;\n\t      return list.map(function (li, key) {\n\t        var ref;\n\t        ref = li.ref || li.props['data-ref'] || key;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          ref: ref,\n\t          'data-ref': ref,\n\t          key: key,\n\t          className: _this3.getClass(key, li)\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderLaunchButton',\n\t    value: function renderLaunchButton() {\n\t      if (!this.props.launchButton) return;\n\t\n\t      return React.createElement('div', { className: 'launch-button', onClick: this.fire });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        this.renderBin(),\n\t        React.createElement('div', { className: 'ammo-container' }),\n\t        this.renderAmmo(),\n\t        this.renderLaunchButton()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Cannon;\n\t}(skoash.Component);\n\t\n\tCannon.defaultProps = _.defaults({\n\t  showNum: 3,\n\t  reverseReload: false,\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  onReload: _.noop,\n\t  onFire: _.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Cannon;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _shortid = __webpack_require__(41);\n\t\n\tvar _shortid2 = _interopRequireDefault(_shortid);\n\t\n\tvar _2 = __webpack_require__(39);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Carousel = function (_Selectable) {\n\t  _inherits(Carousel, _Selectable);\n\t\n\t  function Carousel() {\n\t    _classCallCheck(this, Carousel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this));\n\t\n\t    _this.next = _this.next.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Carousel, [{\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      _get(Carousel.prototype.__proto__ || Object.getPrototypeOf(Carousel.prototype), 'componentWillReceiveProps', this).call(this, nextProps);\n\t\n\t      if (nextProps.selected && nextProps.selected !== this.props.selected) {\n\t        this.select();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Carousel.prototype.__proto__ || Object.getPrototypeOf(Carousel.prototype), 'start', this).call(this);\n\t      this.next();\n\t    }\n\t  }, {\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      var classes, list;\n\t      classes = this.state.classes;\n\t      list = this.state.list;\n\t      list = list.concat(this.refs.bin.get(1));\n\t      list.shift();\n\t      classes[0] = '';\n\t      this.enabled = true;\n\t\n\t      this.setState({\n\t        classes: classes,\n\t        list: list\n\t      }, function () {\n\t        setTimeout(function () {\n\t          classes[0] = 'LEAVE';\n\t          _this2.setState({\n\t            classes: classes\n\t          });\n\t        }, _this2.props.pause);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      var list;\n\t      // skoash.Component is not the super here, but this is what we want\n\t      skoash.Component.prototype.bootstrap.call(this);\n\t\n\t      list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\t\n\t      this.setState({\n\t        list: list\n\t      });\n\t    }\n\t  }, {\n\t    key: 'selectHelper',\n\t    value: function selectHelper() {\n\t      if (!this.enabled) return;\n\t\n\t      if (this.props.dataTarget) {\n\t        this.updateGameState({\n\t          path: this.props.dataTarget,\n\t          data: {\n\t            target: this.state.list[this.props.targetIndex]\n\t          }\n\t        });\n\t      }\n\t\n\t      this.enabled = false;\n\t\n\t      this.props.onSelect.call(this, this.state.list[this.props.targetIndex]);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('carousel', _get(Carousel.prototype.__proto__ || Object.getPrototypeOf(Carousel.prototype), 'getClassNames', this).call(this));\n\t    }\n\t\n\t    /*\n\t     * shortid is intentionally not used for key here because we want to make sure\n\t     * that the element is transitioned and not replaced.\n\t     */\n\t\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this3 = this;\n\t\n\t      var list = this.state.list || this.props.list;\n\t      return list.map(function (li, key) {\n\t        var ref, onTransitionEnd;\n\t        ref = li.ref || li.props['data-ref'] || key;\n\t        onTransitionEnd = key === 0 ? _this3.next : null;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          className: _this3.getClass(key, li),\n\t          'data-ref': ref,\n\t          'data-message': li.props.message,\n\t          onTransitionEnd: onTransitionEnd,\n\t          ref: ref,\n\t          key: key,\n\t          'data-key': (0, _shortid2.default)(key)\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var onClick = this.props.clickable ? this.state.selectFunction.bind(this) : null;\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        this.renderBin(),\n\t        React.createElement(\n\t          'div',\n\t          { className: this.getClassNames(), onClick: onClick },\n\t          this.renderList()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Carousel;\n\t}(_3.default);\n\t\n\tCarousel.defaultProps = _.defaults({\n\t  showNum: 3,\n\t  targetIndex: 1,\n\t  pause: 500,\n\t  clickable: false,\n\t  onSelect: _.noop\n\t}, _3.default.defaultProps);\n\t\n\texports.default = Carousel;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Catchable = function (_skoash$Component) {\n\t  _inherits(Catchable, _skoash$Component);\n\t\n\t  function Catchable() {\n\t    _classCallCheck(this, Catchable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Catchable.__proto__ || Object.getPrototypeOf(Catchable)).call(this));\n\t\n\t    _this.state = {\n\t      canCatch: true\n\t    };\n\t    _this.reset = _this.reset.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Catchable, [{\n\t    key: 'complete',\n\t    value: function complete() {\n\t      var _this2 = this;\n\t\n\t      setTimeout(function () {\n\t        _this2.setState({\n\t          complete: true\n\t        }, function () {\n\t          skoash.trigger('complete');\n\t          _this2.props.onComplete.call(_this2, _this2);\n\t        });\n\t      }, this.props.completeDelay);\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Catchable.prototype.__proto__ || Object.getPrototypeOf(Catchable.prototype), 'bootstrap', this).call(this);\n\t      this.DOMNode = ReactDOM.findDOMNode(this);\n\t    }\n\t  }, {\n\t    key: 'markCaught',\n\t    value: function markCaught() {\n\t      if (!this.state.ready) return;\n\t      this.setState({ canCatch: false });\n\t      this.props.onCaught.call(this);\n\t    }\n\t  }, {\n\t    key: 'canCatch',\n\t    value: function canCatch() {\n\t      return !this.props.disabled && this.state.canCatch;\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('catchable', {\n\t        CAUGHT: !this.state.canCatch\n\t      }, _get(Catchable.prototype.__proto__ || Object.getPrototypeOf(Catchable.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      if (this.state.ready && !this.props.disabled && this.props.reCatchable) {\n\t        this.setState({ canCatch: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement('li', _extends({}, this.props, { className: this.getClassNames() }));\n\t    }\n\t  }]);\n\t\n\t  return Catchable;\n\t}(skoash.Component);\n\t\n\tCatchable.defaultProps = _.defaults({\n\t  disabled: false,\n\t  isCorrect: true,\n\t  reCatchable: true,\n\t  onCaught: _.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Catchable;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _lodash = __webpack_require__(12);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar RevealPrompt = function (_skoash$Component) {\n\t  _inherits(RevealPrompt, _skoash$Component);\n\t\n\t  function RevealPrompt() {\n\t    _classCallCheck(this, RevealPrompt);\n\t\n\t    var _this = _possibleConstructorReturn(this, (RevealPrompt.__proto__ || Object.getPrototypeOf(RevealPrompt)).call(this));\n\t\n\t    _this.state = {\n\t      openReveal: ''\n\t    };\n\t\n\t    _this.index = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(RevealPrompt, [{\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      _get(RevealPrompt.prototype.__proto__ || Object.getPrototypeOf(RevealPrompt.prototype), 'componentWillReceiveProps', this).call(this, nextProps);\n\t\n\t      if (nextProps.openReveal != null && nextProps.openReveal !== this.props.openReveal) {\n\t        this.open(nextProps.openReveal);\n\t      }\n\t\n\t      if (nextProps.closeReveal === true && nextProps.closeReveal !== this.props.closeReveal) {\n\t        this.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(RevealPrompt.prototype.__proto__ || Object.getPrototypeOf(RevealPrompt.prototype), 'start', this).call(this);\n\t\n\t      if (this.props.openOnStart) {\n\t        this.open(this.props.openOnStart);\n\t      } else {\n\t        this.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(message) {\n\t      var self = this;\n\t      self.setState({\n\t        open: true,\n\t        openReveal: '' + message\n\t      });\n\t\n\t      self.props.onOpen.call(self, message);\n\t\n\t      if (self.props.completeOnOpen) {\n\t        self.complete();\n\t      } else {\n\t        self.requireForComplete.map(function (key) {\n\t          if (key === message && self.refs[key]) {\n\t            self.refs[key].complete();\n\t          }\n\t        });\n\t      }\n\t\n\t      if (self.props.autoClose) {\n\t        setTimeout(function () {\n\t          self.close();\n\t        }, 2000);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var prevMessage = this.state.openReveal;\n\t\n\t      this.props.onClose.call(this, prevMessage);\n\t\n\t      this.setState({\n\t        open: false,\n\t        openReveal: ''\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this2 = this;\n\t\n\t      return this.props.list.map(function (li, key) {\n\t        var ref = li.ref == null ? key : li.ref;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          type: 'li',\n\t          className: _this2.getClass(li, key),\n\t          'data-ref': ref,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(li, key) {\n\t      var _ClassNames;\n\t\n\t      return (0, _classnames2.default)((_ClassNames = {}, _defineProperty(_ClassNames, li.props.className, li.props.className), _defineProperty(_ClassNames, 'OPEN', this.state.openReveal.indexOf(key) !== -1 || this.state.openReveal.indexOf(li.props['data-ref']) !== -1), _ClassNames));\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      var _ClassNames2;\n\t\n\t      return (0, _classnames2.default)(_get(RevealPrompt.prototype.__proto__ || Object.getPrototypeOf(RevealPrompt.prototype), 'getClassNames', this).call(this), 'reveal', (_ClassNames2 = {}, _defineProperty(_ClassNames2, 'open-' + this.state.openReveal, this.state.openReveal), _defineProperty(_ClassNames2, 'open-none', !this.state.openReveal), _ClassNames2));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'ul',\n\t            null,\n\t            this.renderList()\n\t          ),\n\t          React.createElement('button', { className: 'close-reveal', onClick: this.close.bind(this) })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return RevealPrompt;\n\t}(skoash.Component);\n\t\n\texports.default = RevealPrompt;\n\t\n\t\n\tRevealPrompt.defaultProps = _lodash2.default.defaults({\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  onOpen: _lodash2.default.identity,\n\t  onClose: _lodash2.default.identity\n\t}, skoash.Component.defaultProps);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar randomFromSeed = __webpack_require__(47);\n\t\n\tvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\n\tvar alphabet;\n\tvar previousSeed;\n\t\n\tvar shuffled;\n\t\n\tfunction reset() {\n\t    shuffled = false;\n\t}\n\t\n\tfunction setCharacters(_alphabet_) {\n\t    if (!_alphabet_) {\n\t        if (alphabet !== ORIGINAL) {\n\t            alphabet = ORIGINAL;\n\t            reset();\n\t        }\n\t        return;\n\t    }\n\t\n\t    if (_alphabet_ === alphabet) {\n\t        return;\n\t    }\n\t\n\t    if (_alphabet_.length !== ORIGINAL.length) {\n\t        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n\t    }\n\t\n\t    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n\t       return ind !== arr.lastIndexOf(item);\n\t    });\n\t\n\t    if (unique.length) {\n\t        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n\t    }\n\t\n\t    alphabet = _alphabet_;\n\t    reset();\n\t}\n\t\n\tfunction characters(_alphabet_) {\n\t    setCharacters(_alphabet_);\n\t    return alphabet;\n\t}\n\t\n\tfunction setSeed(seed) {\n\t    randomFromSeed.seed(seed);\n\t    if (previousSeed !== seed) {\n\t        reset();\n\t        previousSeed = seed;\n\t    }\n\t}\n\t\n\tfunction shuffle() {\n\t    if (!alphabet) {\n\t        setCharacters(ORIGINAL);\n\t    }\n\t\n\t    var sourceArray = alphabet.split('');\n\t    var targetArray = [];\n\t    var r = randomFromSeed.nextValue();\n\t    var characterIndex;\n\t\n\t    while (sourceArray.length > 0) {\n\t        r = randomFromSeed.nextValue();\n\t        characterIndex = Math.floor(r * sourceArray.length);\n\t        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n\t    }\n\t    return targetArray.join('');\n\t}\n\t\n\tfunction getShuffled() {\n\t    if (shuffled) {\n\t        return shuffled;\n\t    }\n\t    shuffled = shuffle();\n\t    return shuffled;\n\t}\n\t\n\t/**\n\t * lookup shuffled letter\n\t * @param index\n\t * @returns {string}\n\t */\n\tfunction lookup(index) {\n\t    var alphabetShuffled = getShuffled();\n\t    return alphabetShuffled[index];\n\t}\n\t\n\tmodule.exports = {\n\t    characters: characters,\n\t    seed: setSeed,\n\t    lookup: lookup,\n\t    shuffled: getShuffled\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.14.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', ARY_FLAG],\n\t    ['bind', BIND_FLAG],\n\t    ['bindKey', BIND_KEY_FLAG],\n\t    ['curry', CURRY_FLAG],\n\t    ['curryRight', CURRY_RIGHT_FLAG],\n\t    ['flip', FLIP_FLAG],\n\t    ['partial', PARTIAL_FLAG],\n\t    ['partialRight', PARTIAL_RIGHT_FLAG],\n\t    ['rearg', REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return baseFindIndex(array, baseIsNaN, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes `func` with its first argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n\t        objectCreate = context.Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\t\n\t    /** Built-in method references that are mockable. */\n\t    var clearTimeout = function(id) { return context.clearTimeout.call(root, id); },\n\t        setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(context.Object, 'create');\n\t\n\t    /* Used to set `toString` methods. */\n\t    var defineProperty = (function() {\n\t      var func = getNative(context.Object, 'defineProperty'),\n\t          name = getNative.name;\n\t\n\t      return (name && name.length > 2) ? func : undefined;\n\t    }());\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache) {\n\t        var pairs = cache.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          return this;\n\t        }\n\t        cache = this.__data__ = new MapCache(pairs);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      var index = length;\n\t      while (index--) {\n\t        var key = props[index],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined &&\n\t            !(key in Object(object))) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return object != null &&\n\t        (hasOwnProperty.call(object, key) ||\n\t          (typeof object == 'object' && key in object && getPrototype(object) === null));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    var baseKeys = overArg(nativeKeys, Object);\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return basePickBy(object, props, function(value, key) {\n\t        return key in object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick from.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, props, predicate) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return baseRest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return baseRest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\t\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    var getPrototype = overArg(nativeGetPrototype, Object);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length,\n\t          lastIndex = length - 1;\n\t\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return defineProperty(wrapper, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      string = toString(string);\n\t\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return baseFindIndex(array, baseIsNaN, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = baseRest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = baseRest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    function now() {\n\t      return Date.now();\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = baseRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = baseRest(function(func, indexes) {\n\t      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`\n\t     * and is equivalent to `_.matches` when `source` is partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = baseRest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = baseRest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = baseRest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = baseRest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function supports comparing the same values as\n\t     * `_.isEqual` is equivalent to `_.isMatch` with `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(49)(module)))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (props, ref, key) {\n\t  return (0, _catch_game_screen_component2.default)(props, ref, key, {\n\t    id: 'catch-game-level-one',\n\t    level: 1,\n\t    rows: 3,\n\t    timeout: 120000,\n\t    prepTimeout: 1000,\n\t    openOnStart: 'instructions',\n\t    bin: [{\n\t      className: 'mushroom',\n\t      message: ''\n\t    }, {\n\t      className: 'banana',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'paper',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'dog',\n\t      message: ''\n\t    }, {\n\t      className: 'battery',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'duck',\n\t      message: ''\n\t    }, {\n\t      className: 'squirrel',\n\t      message: ''\n\t    }, {\n\t      className: 'tire',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'blue-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'yellow-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'red-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'purple-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'glass',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'plastic',\n\t      message: 'trash'\n\t    }],\n\t    vos: [React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'instructions',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/Instructions.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/PickUpLitter.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'level-up',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_effects/LevelUp.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/Congratulations.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'try-again',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_effects/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/YouDidntWin.mp3'\n\t      })\n\t    )],\n\t    sfx: [React.createElement(skoash.Audio, {\n\t      type: 'sfx',\n\t      ref: 'miss',\n\t      src: 'media/_assets/_sounds/_effects/LosePoints.mp3',\n\t      complete: true\n\t    })],\n\t    revealList: [React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'instructions',\n\t        className: 'instructions',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'instructions' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'level-up',\n\t        className: 'level-up',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'congratulations' }),\n\t        React.createElement('div', { className: 'level-up' })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'try-again',\n\t        className: 'try-again',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'try-again' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    )]\n\t  });\n\t};\n\t\n\tvar _catch_game_screen_component = __webpack_require__(6);\n\t\n\tvar _catch_game_screen_component2 = _interopRequireDefault(_catch_game_screen_component);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (props, ref, key) {\n\t  return (0, _catch_game_screen_component2.default)(props, ref, key, {\n\t    id: 'catch-game-level-three',\n\t    level: 3,\n\t    rows: 5,\n\t    timeout: 120000,\n\t    prepTimeout: 400,\n\t    bin: [{\n\t      className: 'mushroom',\n\t      message: ''\n\t    }, {\n\t      className: 'banana',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'paper',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'dog',\n\t      message: ''\n\t    }, {\n\t      className: 'battery',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'duck',\n\t      message: ''\n\t    }, {\n\t      className: 'squirrel',\n\t      message: ''\n\t    }, {\n\t      className: 'tire',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'blue-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'yellow-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'red-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'purple-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'glass',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'plastic',\n\t      message: 'trash'\n\t    }],\n\t    vos: [React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'level-up',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_effects/WinTheGame1.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/YouveWon.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/YouvePickedUp.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'sfx',\n\t        playTarget: 'fall',\n\t        src: 'media/_assets/_sounds/_effects/Litterbugfall.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'try-again',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_effects/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/YouDidntWin.mp3'\n\t      })\n\t    )],\n\t    sfx: [React.createElement(skoash.Audio, {\n\t      type: 'sfx',\n\t      ref: 'miss',\n\t      src: 'media/_assets/_sounds/_effects/LosePoints.mp3',\n\t      complete: true\n\t    })],\n\t    revealList: [React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'level-up',\n\t        className: (0, _classnames2.default)('level-up', 'youve-won', {\n\t          fall: _.get(props, 'data.fall.playing')\n\t        }),\n\t        type: 'li'\n\t      },\n\t      React.createElement(skoash.Image, {\n\t        className: 'hidden',\n\t        src: 'media/_assets/_images/litterbug_.png'\n\t      }),\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'congratulations' }),\n\t        React.createElement('div', { className: 'level-up' })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'try-again',\n\t        className: 'try-again',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'try-again' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    )]\n\t  });\n\t};\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _catch_game_screen_component = __webpack_require__(6);\n\t\n\tvar _catch_game_screen_component2 = _interopRequireDefault(_catch_game_screen_component);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (props, ref, key) {\n\t  return (0, _catch_game_screen_component2.default)(props, ref, key, {\n\t    id: 'catch-game-level-two',\n\t    level: 2,\n\t    rows: 4,\n\t    timeout: 120000,\n\t    prepTimeout: 500,\n\t    bin: [{\n\t      className: 'mushroom',\n\t      message: ''\n\t    }, {\n\t      className: 'banana',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'paper',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'dog',\n\t      message: ''\n\t    }, {\n\t      className: 'battery',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'duck',\n\t      message: ''\n\t    }, {\n\t      className: 'squirrel',\n\t      message: ''\n\t    }, {\n\t      className: 'tire',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'blue-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'yellow-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'red-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'purple-flower',\n\t      message: ''\n\t    }, {\n\t      className: 'glass',\n\t      message: 'trash'\n\t    }, {\n\t      className: 'plastic',\n\t      message: 'trash'\n\t    }],\n\t    vos: [React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'level-up',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_effects/LevelUp.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        src: 'media/_assets/_sounds/_vos/Congratulations.mp3'\n\t      })\n\t    ), React.createElement(\n\t      skoash.MediaSequence,\n\t      {\n\t        ref: 'try-again',\n\t        silentOnStart: true\n\t      },\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_effects/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/TryAgain.mp3'\n\t      }),\n\t      React.createElement(skoash.Audio, {\n\t        type: 'voiceOver',\n\t        complete: true,\n\t        src: 'media/_assets/_sounds/_vos/YouDidntWin.mp3'\n\t      })\n\t    )],\n\t    sfx: [React.createElement(skoash.Audio, {\n\t      type: 'sfx',\n\t      ref: 'miss',\n\t      src: 'media/_assets/_sounds/_effects/LosePoints.mp3',\n\t      complete: true\n\t    })],\n\t    revealList: [React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'level-up',\n\t        className: 'level-up',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'congratulations' }),\n\t        React.createElement('div', { className: 'level-up' })\n\t      )\n\t    ), React.createElement(\n\t      skoash.Component,\n\t      {\n\t        ref: 'try-again',\n\t        className: 'try-again',\n\t        type: 'li'\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'try-again' }),\n\t        React.createElement('div', { className: 'words' }),\n\t        React.createElement('button', {\n\t          onClick: function onClick() {\n\t            skoash.trigger('updateState', {\n\t              path: 'reveal',\n\t              data: {\n\t                close: true\n\t              }\n\t            });\n\t          }\n\t        })\n\t      )\n\t    )]\n\t  });\n\t};\n\t\n\tvar _catch_game_screen_component = __webpack_require__(6);\n\t\n\tvar _catch_game_screen_component2 = _interopRequireDefault(_catch_game_screen_component);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  var getTime = function getTime() {\n\t    var timeLeft, minutesLeft, secondsLeft;\n\t    timeLeft = this.props.timeout / 1000 - this.state.time;\n\t    minutesLeft = Math.floor(timeLeft / 60);\n\t    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n\t    secondsLeft = timeLeft % 60;\n\t    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n\t    return minutesLeft + ':' + secondsLeft;\n\t  };\n\t\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: 'clean-up-game-lvl-1'\n\t    }),\n\t    React.createElement(\n\t      skoash.MediaSequence,\n\t      { ref: 'instructions' },\n\t      React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Instructions.mp3' }),\n\t      React.createElement(skoash.Audio, { ref: 'vo-2', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/TossLitter.mp3' }),\n\t      React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Get100.mp3' })\n\t    ),\n\t    React.createElement(\n\t      _3.default,\n\t      {\n\t        play: _.get(props, 'data.reveal.play', null),\n\t        onPlay: function onPlay() {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: null\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: null\n\t            }\n\t          });\n\t        }\n\t      },\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'complete', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Level1.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-2', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Wow.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/YouHaveGreat.mp3' })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'try-again', silentOnStart: true, complete: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-4', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/LevelLost.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-5', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/OhNo.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-6', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkStill.mp3', complete: true })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'throw', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-7', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/FastSwish.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-8', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/WinPoints.mp3' })\n\t      )\n\t    ),\n\t    React.createElement(_5.default, {\n\t      ref: 'reveal',\n\t      openOnStart: 'instructions',\n\t      openReveal: _.get(props, 'data.reveal.open', null),\n\t      onOpen: function onOpen() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            stop: true,\n\t            start: false\n\t          }\n\t        });\n\t      },\n\t      onClose: function onClose() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            stop: false,\n\t            start: true\n\t          }\n\t        });\n\t      },\n\t      list: [React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'instructions' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame instructions-lvl-1' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Toss the litter in the cans to',\n\t            React.createElement('br', null),\n\t            'clean up by clicking, aiming,',\n\t            React.createElement('br', null),\n\t            'and letting go!'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Get'\n\t          ),\n\t          React.createElement('div', { className: 'hundred' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'points before the time'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'runs out to win!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'complete' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame complete-lvl-1' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'You have some great cleaning skills!',\n\t            React.createElement('br', null),\n\t            'Keep up the good work!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'try-again' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is still covered with trash',\n\t            React.createElement('br', null),\n\t            'but you still have a chance to clean',\n\t            React.createElement('br', null),\n\t            'and beat the Litterbug!'\n\t          )\n\t        )\n\t      )]\n\t    }),\n\t    React.createElement(_7.default, {\n\t      ref: 'carousel',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      showNum: 5,\n\t      targetIndex: 2,\n\t      selected: _.get(props, 'data.cannon.fire'),\n\t      onSelect: function onSelect(target) {\n\t        var score = _.get(props, 'data.score.points', 0);\n\t        var classes = this.state.classes;\n\t        classes[target.props['data-key']] = 'SELECTED';\n\t\n\t        this.setState({\n\t          classes: classes\n\t        }, function () {\n\t          setTimeout(function () {\n\t            classes[target.props['data-key']] = '';\n\t          }, 1000);\n\t        });\n\t\n\t        if (score < CONFIG.POINTS) score += target.props.value;\n\t\n\t        this.updateGameState({\n\t          path: 'score',\n\t          data: {\n\t            points: score\n\t          }\n\t        });\n\t\n\t        if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'game',\n\t            data: {\n\t              complete: true\n\t            }\n\t          });\n\t        }\n\t      },\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'five', name: 'five', value: 5, complete: true }), React.createElement(skoash.Component, { className: 'ten', name: 'ten', value: 10, complete: true }), React.createElement(skoash.Component, { className: 'twenty', name: 'twenty', value: 20, complete: true }), React.createElement(skoash.Component, { className: 'thirty', name: 'thirty', value: 30, complete: true })]\n\t      })\n\t    }),\n\t    React.createElement(_9.default, {\n\t      ref: 'cannon',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      reverseReload: true,\n\t      launchButton: true,\n\t      reloadTime: 2000,\n\t      showNum: 4,\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'plastic-bottle', complete: true }), React.createElement(skoash.Component, { className: 'soda-can', complete: true }), React.createElement(skoash.Component, { className: 'banana-peal', complete: true }), React.createElement(skoash.Component, { className: 'glass-bottle', complete: true }), React.createElement(skoash.Component, { className: 'crumbled-paper', complete: true }), React.createElement(skoash.Component, { className: 'tuna-can', complete: true }), React.createElement(skoash.Component, { className: 'tire', complete: true }), React.createElement(skoash.Component, { className: 'battery', complete: true })]\n\t      }),\n\t      onFire: function onFire() {\n\t        this.updateGameState({\n\t          path: 'reveal',\n\t          data: {\n\t            play: 'throw'\n\t          }\n\t        });\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: false\n\t          }\n\t        });\n\t      },\n\t      onReload: function onReload() {\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: true\n\t          }\n\t        });\n\t      }\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'grass' },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { className: 'stats' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'level' },\n\t          CONFIG.LVL\n\t        ),\n\t        React.createElement(_13.default, {\n\t          ref: 'timer',\n\t          countDown: true,\n\t          timeout: CONFIG.TIMER,\n\t          getTime: getTime,\n\t          stop: _.get(props, 'data.game.complete', false),\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          checkComplete: _.get(props, 'data.game.start', false),\n\t          restart: _.get(props, 'data.game.start', false),\n\t          onComplete: function onComplete() {\n\t            if (_.get(props, 'data.reveal.open')) return;\n\t            if (_.get(props, 'data.score.points', 0) < CONFIG.POINTS) {\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  open: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  play: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'score',\n\t                data: {\n\t                  points: 0\n\t                }\n\t              });\n\t            }\n\t          }\n\t        }),\n\t        React.createElement(_15.default, {\n\t          ref: 'score',\n\t          max: CONFIG.POINTS,\n\t          correct: _.get(props, 'data.score.points', 0),\n\t          checkComplete: false,\n\t          complete: _.get(props, 'data.score.points', 0) === CONFIG.POINTS\n\t        })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(10);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(8);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(7);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(5);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(4);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  LVL: 1,\n\t  POINTS: 100,\n\t  TIMER: 30000\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  var getTime = function getTime() {\n\t    var timeLeft, minutesLeft, secondsLeft;\n\t    timeLeft = this.props.timeout / 1000 - this.state.time;\n\t    minutesLeft = Math.floor(timeLeft / 60);\n\t    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n\t    secondsLeft = timeLeft % 60;\n\t    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n\t    return minutesLeft + ':' + secondsLeft;\n\t  };\n\t\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: 'clean-up-game-lvl-2'\n\t    }),\n\t    React.createElement(\n\t      skoash.MediaSequence,\n\t      { ref: 'instructions' },\n\t      React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Instructions.mp3' }),\n\t      React.createElement(skoash.Audio, { ref: 'vo-2', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/TossLitter.mp3' }),\n\t      React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Get150.mp3' })\n\t    ),\n\t    React.createElement(\n\t      _3.default,\n\t      {\n\t        play: _.get(props, 'data.reveal.play', null),\n\t        onPlay: function onPlay() {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: null\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: null\n\t            }\n\t          });\n\t        }\n\t      },\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'complete', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-4', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Level2.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-5', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/AmazingJob.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-6', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ThankYouCaring.mp3' })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'try-again', silentOnStart: true, complete: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-7', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/LevelLost.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-8', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/OhNo.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-9', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkStill.mp3', complete: true })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'throw', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-10', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/FastSwish.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-11', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/WinPoints.mp3' })\n\t      )\n\t    ),\n\t    React.createElement(_5.default, {\n\t      ref: 'reveal',\n\t      openOnStart: 'instructions',\n\t      openReveal: _.get(props, 'data.reveal.open', null),\n\t      onOpen: function onOpen() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            stop: true,\n\t            start: false\n\t          }\n\t        });\n\t      },\n\t      onClose: function onClose() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            stop: false,\n\t            start: true\n\t          }\n\t        });\n\t      },\n\t      list: [React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'instructions' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame instructions-lvl-2' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Toss the litter in the cans to',\n\t            React.createElement('br', null),\n\t            'clean up by clicking, aiming,',\n\t            React.createElement('br', null),\n\t            'and letting go!'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Get'\n\t          ),\n\t          React.createElement('div', { className: 'hundred' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'points before the time'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'runs out to win!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'complete' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame complete-lvl-2' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Thank you for caring so much',\n\t            React.createElement('br', null),\n\t            'about the environment!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'try-again' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is still covered with trash',\n\t            React.createElement('br', null),\n\t            'but you still have a chance to clean',\n\t            React.createElement('br', null),\n\t            'and beat the Litterbug!'\n\t          )\n\t        )\n\t      )]\n\t    }),\n\t    React.createElement(_7.default, {\n\t      ref: 'carousel',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      showNum: 5,\n\t      targetIndex: 2,\n\t      selected: _.get(props, 'data.cannon.fire'),\n\t      onSelect: function onSelect(target) {\n\t        var score = _.get(props, 'data.score.points', 0);\n\t        var classes = this.state.classes;\n\t        classes[target.props['data-key']] = 'SELECTED';\n\t\n\t        this.setState({\n\t          classes: classes\n\t        }, function () {\n\t          setTimeout(function () {\n\t            classes[target.props['data-key']] = '';\n\t          }, 1000);\n\t        });\n\t\n\t        if (score < CONFIG.POINTS) score += target.props.value;\n\t\n\t        this.updateGameState({\n\t          path: 'score',\n\t          data: {\n\t            points: score\n\t          }\n\t        });\n\t\n\t        if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'game',\n\t            data: {\n\t              complete: true\n\t            }\n\t          });\n\t        }\n\t      },\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'five', name: 'five', value: 5, complete: true }), React.createElement(skoash.Component, { className: 'ten', name: 'ten', value: 10, complete: true }), React.createElement(skoash.Component, { className: 'twenty', name: 'twenty', value: 20, complete: true }), React.createElement(skoash.Component, { className: 'thirty', name: 'thirty', value: 30, complete: true })]\n\t      })\n\t    }),\n\t    React.createElement(_9.default, {\n\t      ref: 'cannon',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      reverseReload: true,\n\t      launchButton: true,\n\t      reloadTime: 2000,\n\t      showNum: 4,\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'plastic-bottle', complete: true }), React.createElement(skoash.Component, { className: 'soda-can', complete: true }), React.createElement(skoash.Component, { className: 'banana-peal', complete: true }), React.createElement(skoash.Component, { className: 'glass-bottle', complete: true }), React.createElement(skoash.Component, { className: 'crumbled-paper', complete: true }), React.createElement(skoash.Component, { className: 'tuna-can', complete: true }), React.createElement(skoash.Component, { className: 'tire', complete: true }), React.createElement(skoash.Component, { className: 'battery', complete: true })]\n\t      }),\n\t      onFire: function onFire() {\n\t        this.updateGameState({\n\t          path: 'reveal',\n\t          data: {\n\t            play: 'throw'\n\t          }\n\t        });\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: false\n\t          }\n\t        });\n\t      },\n\t      onReload: function onReload() {\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: true\n\t          }\n\t        });\n\t      }\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'grass' },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { className: 'stats' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'level' },\n\t          CONFIG.LVL\n\t        ),\n\t        React.createElement(_13.default, {\n\t          ref: 'timer',\n\t          countDown: true,\n\t          timeout: CONFIG.TIMER,\n\t          getTime: getTime,\n\t          stop: _.get(props, 'data.game.complete', false),\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          checkComplete: _.get(props, 'data.game.start', false),\n\t          restart: _.get(props, 'data.game.start', false),\n\t          onComplete: function onComplete() {\n\t            if (_.get(props, 'data.reveal.open')) return;\n\t            if (_.get(props, 'data.score.points', 0) < CONFIG.POINTS) {\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  open: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  play: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'score',\n\t                data: {\n\t                  points: 0\n\t                }\n\t              });\n\t            }\n\t          }\n\t        }),\n\t        React.createElement(_15.default, {\n\t          ref: 'score',\n\t          max: CONFIG.POINTS,\n\t          correct: _.get(props, 'data.score.points', 0),\n\t          checkComplete: false,\n\t          complete: _.get(props, 'data.score.points', 0) === CONFIG.POINTS\n\t        })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(10);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(8);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(7);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(5);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(4);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  LVL: 2,\n\t  POINTS: 150,\n\t  TIMER: 45000\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  var getTime = function getTime() {\n\t    var timeLeft, minutesLeft, secondsLeft;\n\t    timeLeft = this.props.timeout / 1000 - this.state.time;\n\t    minutesLeft = Math.floor(timeLeft / 60);\n\t    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n\t    secondsLeft = timeLeft % 60;\n\t    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n\t    return minutesLeft + ':' + secondsLeft;\n\t  };\n\t\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: 'clean-up-game-lvl-3'\n\t    }),\n\t    React.createElement(\n\t      skoash.MediaSequence,\n\t      { ref: 'instructions' },\n\t      React.createElement(skoash.Audio, { ref: 'vo-1', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Instructions.mp3' }),\n\t      React.createElement(skoash.Audio, { ref: 'vo-2', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/TossLitter.mp3' }),\n\t      React.createElement(skoash.Audio, { ref: 'vo-3', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Get200.mp3' })\n\t    ),\n\t    React.createElement(\n\t      _3.default,\n\t      {\n\t        play: _.get(props, 'data.reveal.play', null),\n\t        onPlay: function onPlay() {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: null\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: null\n\t            }\n\t          });\n\t        }\n\t      },\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'complete', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-4', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/Level3.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-5', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkClean.mp3' })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'try-again', silentOnStart: true, complete: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-6', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/LevelLost.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-7', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/OhNo.mp3', complete: true }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-8', type: 'voiceOver', src: 'media/_assets/_sounds/_vos/ParkStill.mp3', complete: true })\n\t      ),\n\t      React.createElement(\n\t        skoash.MediaSequence,\n\t        { ref: 'throw', silentOnStart: true },\n\t        React.createElement(skoash.Audio, { ref: 'vo-9', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/FastSwish.mp3' }),\n\t        React.createElement(skoash.Audio, { ref: 'vo-10', type: 'voiceOver', src: 'media/_assets/_sounds/_effects/WinPoints.mp3' })\n\t      )\n\t    ),\n\t    React.createElement(_5.default, {\n\t      ref: 'reveal',\n\t      openOnStart: 'instructions',\n\t      openReveal: _.get(props, 'data.reveal.open', null),\n\t      onOpen: function onOpen() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            stop: true,\n\t            start: false\n\t          }\n\t        });\n\t      },\n\t      onClose: function onClose() {\n\t        this.updateGameState({\n\t          path: 'game',\n\t          data: {\n\t            stop: false,\n\t            start: true\n\t          }\n\t        });\n\t      },\n\t      list: [React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'instructions' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame instructions-lvl-3' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Toss the litter in the cans to',\n\t            React.createElement('br', null),\n\t            'clean up by clicking, aiming,',\n\t            React.createElement('br', null),\n\t            'and letting go!'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'Get'\n\t          ),\n\t          React.createElement('div', { className: 'hundred' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'points before the time'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'runs out to win!'\n\t          )\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'complete' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame complete-lvl-3' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is now clean',\n\t            React.createElement('br', null),\n\t            'You are an'\n\t          ),\n\t          React.createElement('div', { className: 'banner-2' })\n\t        )\n\t      ), React.createElement(\n\t        skoash.Component,\n\t        { 'data-ref': 'try-again' },\n\t        React.createElement(\n\t          skoash.Component,\n\t          { className: 'frame' },\n\t          React.createElement('div', { className: 'banner' }),\n\t          React.createElement('div', { className: 'banner-2' }),\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            'The park is still covered with trash',\n\t            React.createElement('br', null),\n\t            'but you still have a chance to clean',\n\t            React.createElement('br', null),\n\t            'and beat the Litterbug!'\n\t          )\n\t        )\n\t      )]\n\t    }),\n\t    React.createElement(_7.default, {\n\t      ref: 'carousel',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      showNum: 5,\n\t      targetIndex: 2,\n\t      selected: _.get(props, 'data.cannon.fire'),\n\t      onSelect: function onSelect(target) {\n\t        var score = _.get(props, 'data.score.points', 0);\n\t        var classes = this.state.classes;\n\t        classes[target.props['data-key']] = 'SELECTED';\n\t\n\t        this.setState({\n\t          classes: classes\n\t        }, function () {\n\t          setTimeout(function () {\n\t            classes[target.props['data-key']] = '';\n\t          }, 1000);\n\t        });\n\t\n\t        if (score < CONFIG.POINTS) score += target.props.value;\n\t\n\t        this.updateGameState({\n\t          path: 'score',\n\t          data: {\n\t            points: score\n\t          }\n\t        });\n\t\n\t        if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              open: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'reveal',\n\t            data: {\n\t              play: 'complete'\n\t            }\n\t          });\n\t\n\t          this.updateGameState({\n\t            path: 'game',\n\t            data: {\n\t              complete: true\n\t            }\n\t          });\n\t        }\n\t      },\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'five', name: 'five', value: 5, complete: true }), React.createElement(skoash.Component, { className: 'ten', name: 'ten', value: 10, complete: true }), React.createElement(skoash.Component, { className: 'twenty', name: 'twenty', value: 20, complete: true }), React.createElement(skoash.Component, { className: 'thirty', name: 'thirty', value: 30, complete: true })]\n\t      })\n\t    }),\n\t    React.createElement(_9.default, {\n\t      ref: 'cannon',\n\t      completeOnStart: true,\n\t      checkComplete: false,\n\t      reverseReload: true,\n\t      launchButton: true,\n\t      reloadTime: 2000,\n\t      showNum: 4,\n\t      bin: React.createElement(_11.default, {\n\t        ref: 'randomizer',\n\t        completeOnStart: true,\n\t        checkComplete: false,\n\t        bin: [React.createElement(skoash.Component, { className: 'plastic-bottle', complete: true }), React.createElement(skoash.Component, { className: 'soda-can', complete: true }), React.createElement(skoash.Component, { className: 'banana-peal', complete: true }), React.createElement(skoash.Component, { className: 'glass-bottle', complete: true }), React.createElement(skoash.Component, { className: 'crumbled-paper', complete: true }), React.createElement(skoash.Component, { className: 'tuna-can', complete: true }), React.createElement(skoash.Component, { className: 'tire', complete: true }), React.createElement(skoash.Component, { className: 'battery', complete: true })]\n\t      }),\n\t      onFire: function onFire() {\n\t        this.updateGameState({\n\t          path: 'reveal',\n\t          data: {\n\t            play: 'throw'\n\t          }\n\t        });\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: false\n\t          }\n\t        });\n\t      },\n\t      onReload: function onReload() {\n\t        this.updateGameState({\n\t          path: 'cannon',\n\t          data: {\n\t            fire: true\n\t          }\n\t        });\n\t      }\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: 'grass' },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { className: 'stats' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'level' },\n\t          CONFIG.LVL\n\t        ),\n\t        React.createElement(_13.default, {\n\t          ref: 'timer',\n\t          countDown: true,\n\t          timeout: CONFIG.TIMER,\n\t          getTime: getTime,\n\t          stop: _.get(props, 'data.game.complete', false),\n\t          complete: _.get(props, 'data.game.complete', false),\n\t          checkComplete: _.get(props, 'data.game.start', false),\n\t          restart: _.get(props, 'data.game.start', false),\n\t          onComplete: function onComplete() {\n\t            if (_.get(props, 'data.reveal.open')) return;\n\t            if (_.get(props, 'data.score.points', 0) < CONFIG.POINTS) {\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  open: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'reveal',\n\t                data: {\n\t                  play: 'try-again'\n\t                }\n\t              });\n\t\n\t              this.updateGameState({\n\t                path: 'score',\n\t                data: {\n\t                  points: 0\n\t                }\n\t              });\n\t            }\n\t          }\n\t        }),\n\t        React.createElement(_15.default, {\n\t          ref: 'score',\n\t          max: CONFIG.POINTS,\n\t          correct: _.get(props, 'data.score.points', 0),\n\t          checkComplete: false,\n\t          complete: _.get(props, 'data.score.points', 0) === CONFIG.POINTS\n\t        })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar _2 = __webpack_require__(3);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(10);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(8);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tvar _8 = __webpack_require__(7);\n\t\n\tvar _9 = _interopRequireDefault(_8);\n\t\n\tvar _10 = __webpack_require__(2);\n\t\n\tvar _11 = _interopRequireDefault(_10);\n\t\n\tvar _12 = __webpack_require__(5);\n\t\n\tvar _13 = _interopRequireDefault(_12);\n\t\n\tvar _14 = __webpack_require__(4);\n\t\n\tvar _15 = _interopRequireDefault(_14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  LVL: 3,\n\t  POINTS: 200,\n\t  TIMER: 60000\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"commit\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/IPromise.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/S_BU_1.mp3\" }),\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"pledge\" },\n\t      \"I promise to \",\n\t      React.createElement(\"span\", { className: \"never\" }),\n\t      \" litter\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacerA\" }),\n\t      \"and to pick up the litter\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacerB\" }),\n\t      \"I see whenever I safely can.\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacer1\" }),\n\t      \"I will dispose of it\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacer2\" }),\n\t      \"in a trash can\",\n\t      React.createElement(\"br\", null),\n\t      React.createElement(\"span\", { className: \"spacer3\" }),\n\t      \"or a recycle bin.\"\n\t    ),\n\t    React.createElement(\"div\", { className: \"banner animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"flip\",\n\t      emitOnComplete: {\n\t        name: 'flip'\n\t      }\n\t    }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"media/_assets/_sprites/sprites.mr.eco-01.png\" }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"media/_assets/_sprites/sprites.sing.thankyou.flip-01.png\" }),\n\t    React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/Flip.mp3\" }),\n\t    React.createElement(\"div\", { className: \"words\" }),\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"flip-container animated\" },\n\t      React.createElement(\"div\", { className: \"flip\" })\n\t    ),\n\t    React.createElement(\"div\", { className: \"mr-eco animated\" }),\n\t    React.createElement(skoash.Image, { className: \"earned\", src: \"media/_assets/_animations/LitterbugEarnedFlips.gif\" })\n\t  );\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"good-for-you\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ThankYou.mp3\" }),\n\t    React.createElement(\"div\", { className: \"mr-eco animated\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"banner2 animated\" }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { className: \"sparkles\" },\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null),\n\t      React.createElement(\"div\", null)\n\t    )\n\t  );\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"ground\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ShouldYouThrow.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/No.mp3\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"avatar animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"room\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ThrowTrashRoom.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/No.mp3\" }),\n\t    React.createElement(\"div\", { className: \"avatar animated\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"school\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/ThrowTrashSchool.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/No.mp3\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"avatar animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"sing-about-it\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/LetsSing.mp3\" }),\n\t    React.createElement(\"div\", { className: \"mr-eco animated\" }),\n\t    React.createElement(\"div\", { className: \"banner animated\" }),\n\t    React.createElement(\"div\", { className: \"dancers animated\" })\n\t  );\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"take-pledge\"\n\t    }),\n\t    React.createElement(skoash.Audio, { ref: \"vo\", type: \"voiceOver\", src: \"media/_assets/_sounds/_vos/AntiLitterPledge.mp3\" }),\n\t    React.createElement(skoash.Audio, { ref: \"button\", complete: true, type: \"sfx\", src: \"media/_assets/_sounds/_effects/S_BU_1.mp3\" }),\n\t    React.createElement(skoash.Image, { ref: \"bkg\", className: \"background\", src: \"media/_Frames/FR_1.png\" }),\n\t    React.createElement(\"div\", { className: \"mr-eco\" }),\n\t    React.createElement(\"div\", { className: \"banner\" })\n\t  );\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(skoash.Screen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: \"title\",\n\t    hidePrev: true,\n\t    completeDelay: 5000\n\t  }));\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"video\"\n\t    }),\n\t    React.createElement(\n\t      skoash.Component,\n\t      { ref: \"center\", className: \"center\" },\n\t      React.createElement(\n\t        skoash.Component,\n\t        { ref: \"frame\", className: \"frame\" },\n\t        React.createElement(skoash.Video, { ref: \"video\", src: \"https://res.cloudinary.com/changemyworldnow/video/upload/v1455037034/Litterbug-Final_jjmrg7.mp4\" })\n\t      )\n\t    )\n\t  );\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar config = {\n\t  id: 'litter-bug',\n\t  version: 2,\n\t  skoash: '1.0.4',\n\t  dimensions: {\n\t    width: 960,\n\t    ratio: 16 / 9\n\t  }\n\t};\n\t\n\texports.default = config;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _config = __webpack_require__(29);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _ = __webpack_require__(36);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tvar _3 = __webpack_require__(35);\n\t\n\tvar _4 = _interopRequireDefault(_3);\n\t\n\tvar _title_screen = __webpack_require__(27);\n\t\n\tvar _title_screen2 = _interopRequireDefault(_title_screen);\n\t\n\tvar _catch_game_level_one_screen = __webpack_require__(13);\n\t\n\tvar _catch_game_level_one_screen2 = _interopRequireDefault(_catch_game_level_one_screen);\n\t\n\tvar _catch_game_level_two_screen = __webpack_require__(15);\n\t\n\tvar _catch_game_level_two_screen2 = _interopRequireDefault(_catch_game_level_two_screen);\n\t\n\tvar _catch_game_level_three_screen = __webpack_require__(14);\n\t\n\tvar _catch_game_level_three_screen2 = _interopRequireDefault(_catch_game_level_three_screen);\n\t\n\tvar _clean_up_game_lvl1_screen = __webpack_require__(16);\n\t\n\tvar _clean_up_game_lvl1_screen2 = _interopRequireDefault(_clean_up_game_lvl1_screen);\n\t\n\tvar _clean_up_game_lvl2_screen = __webpack_require__(17);\n\t\n\tvar _clean_up_game_lvl2_screen2 = _interopRequireDefault(_clean_up_game_lvl2_screen);\n\t\n\tvar _clean_up_game_lvl3_screen = __webpack_require__(18);\n\t\n\tvar _clean_up_game_lvl3_screen2 = _interopRequireDefault(_clean_up_game_lvl3_screen);\n\t\n\tvar _room_screen = __webpack_require__(23);\n\t\n\tvar _room_screen2 = _interopRequireDefault(_room_screen);\n\t\n\tvar _school_screen = __webpack_require__(24);\n\t\n\tvar _school_screen2 = _interopRequireDefault(_school_screen);\n\t\n\tvar _ground_screen = __webpack_require__(22);\n\t\n\tvar _ground_screen2 = _interopRequireDefault(_ground_screen);\n\t\n\tvar _sing_about_it_screen = __webpack_require__(25);\n\t\n\tvar _sing_about_it_screen2 = _interopRequireDefault(_sing_about_it_screen);\n\t\n\tvar _video_screen = __webpack_require__(28);\n\t\n\tvar _video_screen2 = _interopRequireDefault(_video_screen);\n\t\n\tvar _good_for_you_screen = __webpack_require__(21);\n\t\n\tvar _good_for_you_screen2 = _interopRequireDefault(_good_for_you_screen);\n\t\n\tvar _take_pledge_screen = __webpack_require__(26);\n\t\n\tvar _take_pledge_screen2 = _interopRequireDefault(_take_pledge_screen);\n\t\n\tvar _commit_screen = __webpack_require__(19);\n\t\n\tvar _commit_screen2 = _interopRequireDefault(_commit_screen);\n\t\n\tvar _flip_screen = __webpack_require__(20);\n\t\n\tvar _flip_screen2 = _interopRequireDefault(_flip_screen);\n\t\n\tvar _5 = __webpack_require__(37);\n\t\n\tvar _6 = _interopRequireDefault(_5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar LitterBug = React.createElement(skoash.Game, {\n\t  config: _config2.default,\n\t  screens: {\n\t    0: _4.default,\n\t    1: _title_screen2.default,\n\t    2: _catch_game_level_one_screen2.default,\n\t    3: _catch_game_level_two_screen2.default,\n\t    4: _catch_game_level_three_screen2.default,\n\t    5: _room_screen2.default,\n\t    6: _school_screen2.default,\n\t    7: _ground_screen2.default,\n\t    8: _sing_about_it_screen2.default,\n\t    9: _video_screen2.default,\n\t    10: _good_for_you_screen2.default,\n\t    11: _clean_up_game_lvl1_screen2.default,\n\t    12: _clean_up_game_lvl2_screen2.default,\n\t    13: _clean_up_game_lvl3_screen2.default,\n\t    14: _take_pledge_screen2.default,\n\t    15: _commit_screen2.default,\n\t    16: _flip_screen2.default\n\t  },\n\t  menus: {\n\t    quit: _6.default\n\t  },\n\t  loader: React.createElement(_2.default, null),\n\t  getBackgroundIndex: function getBackgroundIndex(index, id) {\n\t    switch (id) {\n\t      case 'clean-up-game-lvl-1':\n\t      case 'clean-up-game-lvl-2':\n\t      case 'clean-up-game-lvl-3':\n\t        return 1;\n\t      default:\n\t        return 0;\n\t    }\n\t  },\n\t  assets: [React.createElement(skoash.Audio, { ref: 'bkg-1', type: 'background', src: 'media/_BKG/S_BKG_1.mp3', loop: true }), React.createElement(skoash.Audio, { ref: 'bkg-2', type: 'background', src: 'media/_assets/_sounds/_effects/GameThemeMusic%202.mp3', loop: true }), React.createElement(skoash.Audio, { ref: 'button', type: 'sfx', src: 'media/_Buttons/S_BU_1.mp3' }), React.createElement(skoash.Image, { ref: 'img-bkg-1', className: 'hidden', src: 'media/_BKG/BKG_1.png' }), React.createElement(skoash.Image, { ref: 'img-bkg-2', className: 'hidden', src: 'media/_BKG/BKG_2.png' }), React.createElement(skoash.Image, { ref: 'img-bkg-3', className: 'hidden', src: 'media/_BKG/BKG_3.png' }), React.createElement(skoash.Image, { ref: 'img-bkg-4', className: 'hidden', src: 'media/_assets/_images/BKG.4.jpg' }), React.createElement(skoash.Image, { ref: 'img-bkg-5', className: 'hidden', src: 'media/_BKG/BKG_5.png' }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_images/BKG.3.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_images/BKG.5.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.1-01.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.2-01.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.3-01-min.jpg'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.game2.4-01.png'\n\t  }), React.createElement(skoash.Image, {\n\t    className: 'hidden',\n\t    src: 'media/_assets/_sprites/sprites.mr.eco-01.png'\n\t  }), React.createElement('div', { className: 'background default' }), React.createElement('div', { className: 'background title' }), React.createElement('div', { className: 'background lets-clean-up' }), React.createElement('div', { className: 'background clean-up-game' }), React.createElement('div', { className: 'background select' }), React.createElement('div', { className: 'background sun' }), React.createElement('div', { className: 'background commit' })],\n\t  passData: function passData(opts) {\n\t    this.setState(opts);\n\t  },\n\t  getClassNames: function getClassNames() {\n\t    return (0, _classnames2.default)({ 'SUN': this.state.sun });\n\t  }\n\t});\n\t\n\tskoash.start(LitterBug);\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _2 = __webpack_require__(9);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Catch = function (_skoash$Component) {\n\t  _inherits(Catch, _skoash$Component);\n\t\n\t  function Catch() {\n\t    _classCallCheck(this, Catch);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Catch.__proto__ || Object.getPrototypeOf(Catch)).call(this));\n\t\n\t    _this.state = {\n\t      canCatch: true,\n\t      stamp: 0\n\t    };\n\t\n\t    _this.onMouseMove = _this.onMouseMove.bind(_this);\n\t    _this.onResize = _this.onResize.bind(_this);\n\t    _this.checkCollisions = _this.checkCollisions.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Catch, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bucketNode = ReactDOM.findDOMNode(this.refs.bucket);\n\t      this.catchableNodes = _.map(this.props.catchables, function (val, key) {\n\t        return ReactDOM.findDOMNode(this.refs[key + '-catchable']);\n\t      }.bind(this));\n\t    }\n\t  }, {\n\t    key: 'attachMouseEvents',\n\t    value: function attachMouseEvents() {\n\t      var catchRef = this.refs['catch-component'];\n\t      if (catchRef) {\n\t        catchRef.addEventListener('mousemove', this.onMouseMove);\n\t        catchRef.addEventListener('touchstart', this.onMouseMove);\n\t        catchRef.addEventListener('touchmove', this.onMouseMove);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMouseMove',\n\t    value: function onMouseMove(e) {\n\t      this.setState({\n\t        mouseX: e.pageX\n\t      });\n\t    }\n\t  }, {\n\t    key: 'onResize',\n\t    value: function onResize() {\n\t      var _this2 = this;\n\t\n\t      skoash.trigger('getState').then(function (state) {\n\t        var zoom = state.scale;\n\t        var edges = _this2.getEdges(_this2.bucketNode);\n\t        var bucketWidth = edges.right - edges.left;\n\t        var leftBound = _this2.bucketNode.offsetParent ? _this2.bucketNode.offsetParent.offsetWidth - bucketWidth : 0;\n\t\n\t        _this2.setState({\n\t          bucketTop: edges.top,\n\t          bucketBottom: edges.bottom,\n\t          bucketWidth: bucketWidth,\n\t          leftBound: leftBound,\n\t          zoom: zoom\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Catch.prototype.__proto__ || Object.getPrototypeOf(Catch.prototype), 'start', this).call(this);\n\t      this.bootstrap();\n\t      this.checkCollisions();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Catch.prototype.__proto__ || Object.getPrototypeOf(Catch.prototype), 'bootstrap', this).call(this);\n\t      this.onResize();\n\t      this.attachMouseEvents();\n\t      window.addEventListener('resize', this.onResize);\n\t      _.forEach(this.catchableNodes, function (node, key) {\n\t        var catchableRef = this.refs[key + '-catchable'];\n\t        node.addEventListener('animationiteration', catchableRef.reset, false);\n\t      }.bind(this));\n\t    }\n\t  }, {\n\t    key: 'restart',\n\t    value: function restart() {\n\t      var _this3 = this;\n\t\n\t      this.setState({\n\t        stamp: 0\n\t      }, function () {\n\t        _this3.checkCollisions();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      this.setState({\n\t        started: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      if (this.state.started) {\n\t        this.setState({\n\t          paused: true\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      var _this4 = this;\n\t\n\t      if (this.state.paused) {\n\t        this.setState({\n\t          paused: false\n\t        }, function () {\n\t          _this4.checkCollisions();\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'selectCatchable',\n\t    value: function selectCatchable(catchableNode, key) {\n\t      if (!this.state.started || this.state.paused || !this.state.canCatch || !catchableNode.canCatch()) return;\n\t      catchableNode.markCaught();\n\t      if (catchableNode.props.isCorrect) {\n\t        this.correct(catchableNode, key);\n\t      } else {\n\t        this.incorrect(catchableNode, key);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'correct',\n\t    value: function correct(catchable, key) {\n\t      if (this.audio.correct) {\n\t        this.audio.correct.play();\n\t      }\n\t      if (typeof this.props.onCorrect === 'function') {\n\t        this.props.onCorrect.call(this, catchable, key);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'incorrect',\n\t    value: function incorrect(catchable, key) {\n\t      if (this.audio.incorrect) {\n\t        this.audio.incorrect.play();\n\t      }\n\t      if (typeof this.props.onIncorrect === 'function') {\n\t        this.props.onIncorrect.call(this, catchable, key);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'checkCollisions',\n\t    value: function checkCollisions() {\n\t      var time = Date.now();\n\t      if (!this.state.started || this.state.paused) return;\n\t      if (time >= this.state.stamp) {\n\t        this.setState({\n\t          stamp: time + 1000\n\t        });\n\t        var bucketRect = this.bucketNode.getBoundingClientRect();\n\t        _.forEach(this.catchableNodes, function (val, key) {\n\t          if (this.isColliding(bucketRect, val.getBoundingClientRect())) {\n\t            this.selectCatchable(this.refs[key + '-catchable'], key);\n\t          }\n\t        }.bind(this));\n\t        window.requestAnimationFrame(this.checkCollisions);\n\t      } else {\n\t        window.requestAnimationFrame(this.checkCollisions);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isColliding',\n\t    value: function isColliding(bucketRect, catchRect) {\n\t      var xCenter = catchRect.left + (catchRect.right - catchRect.left) / 2;\n\t      var yOffset = (catchRect.bottom - catchRect.top) / 6;\n\t      return bucketRect.top < catchRect.bottom - yOffset && bucketRect.top > catchRect.top + yOffset && xCenter > bucketRect.left && xCenter < bucketRect.right;\n\t    }\n\t  }, {\n\t    key: 'getEdges',\n\t    value: function getEdges(el) {\n\t      var top, left, width, height;\n\t\n\t      left = 0;\n\t      top = 0;\n\t      width = el.offsetWidth;\n\t      height = el.offsetHeight;\n\t\n\t      while (el) {\n\t        if (el.className && el.className.indexOf('screen') !== -1) {\n\t          break;\n\t        }\n\t\n\t        left += el.offsetLeft || 0;\n\t        top += el.offsetTop || 0;\n\t        el = el.offsetParent;\n\t      }\n\t\n\t      return {\n\t        top: top,\n\t        bottom: top + height,\n\t        left: left,\n\t        right: left + width\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var left = this.state.mouseX / this.state.zoom - this.state.bucketWidth / 2;\n\t      if (this.props.bucketInBounds) {\n\t        left = left < 1 ? 1 : left;\n\t        left = left >= this.state.leftBound ? this.state.leftBound - 1 : left;\n\t      }\n\t\n\t      return {\n\t        left: left + 'px'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'renderBucket',\n\t    value: function renderBucket() {\n\t      return React.createElement(this.props.bucket.type, _extends({}, this.props.bucket.props, {\n\t        ref: 'bucket',\n\t        style: this.getStyle()\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'renderCatchables',\n\t    value: function renderCatchables() {\n\t      return this.props.catchables.map(function (item, key) {\n\t        return React.createElement(_3.default, _extends({}, item.props, {\n\t          key: key,\n\t          ref: key + '-catchable'\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClasses',\n\t    value: function getClasses() {\n\t      var classes = '';\n\t\n\t      if (this.state.complete || this.props.isComplete) classes += ' COMPLETE';\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { ref: 'catch-component', className: 'catch ' + this.getClasses() },\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'items' },\n\t          this.renderCatchables()\n\t        ),\n\t        this.renderBucket()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Catch;\n\t}(skoash.Component);\n\t\n\tCatch.defaultProps = _.merge(skoash.Component.defaultProps, {\n\t  catchables: [],\n\t  bucketInBounds: true\n\t});\n\t\n\texports.default = Catch;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _2 = __webpack_require__(31);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Catcher = function (_Catch) {\n\t  _inherits(Catcher, _Catch);\n\t\n\t  function Catcher(props) {\n\t    _classCallCheck(this, Catcher);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Catcher.__proto__ || Object.getPrototypeOf(Catcher)).call(this, props));\n\t\n\t    _this.state = _.defaults({\n\t      styles: []\n\t    }, _this.state);\n\t\n\t    _this.moveEvent = _this.moveEvent.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Catcher, [{\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      skoash.Component.prototype.bootstrap.call(this);\n\t      window.addEventListener('resize', this.onResize);\n\t      this.onResize();\n\t\n\t      if (this.props.moveBuckets) {\n\t        window.addEventListener('mousemove', this.moveEvent);\n\t        window.addEventListener('touchmove', this.moveEvent);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      this.props.onMove.call(this, e);\n\t    }\n\t  }, {\n\t    key: 'onReady',\n\t    value: function onReady() {\n\t      this.bucketNodes = _.reduce(this.refs, function (a, v, k) {\n\t        if (k.indexOf('buckets-')) return a;\n\t        a[k] = ReactDOM.findDOMNode(v);\n\t        return a;\n\t      }, {});\n\t    }\n\t  }, {\n\t    key: 'onResize',\n\t    value: function onResize() {\n\t      var _this2 = this;\n\t\n\t      skoash.trigger('getState').then(function (state) {\n\t        var zoom = state.scale;\n\t        _this2.setState({\n\t          zoom: zoom\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'checkCollisions',\n\t    value: function checkCollisions() {\n\t      var _this3 = this;\n\t\n\t      if (!this.state.started || this.state.paused) return;\n\t      _.each(this.bucketNodes, function (bucketNode, bucketRefKey) {\n\t        var bucketRect = bucketNode.getBoundingClientRect();\n\t        _.each(_this3.props.catchableRefs, function (catchableRef) {\n\t          if (_this3.isColliding(bucketRect, catchableRef.DOMNode.getBoundingClientRect())) {\n\t            _this3.selectCatchable(_this3.refs[bucketRefKey], catchableRef);\n\t          }\n\t        });\n\t      });\n\t\n\t      window.requestAnimationFrame(this.checkCollisions);\n\t    }\n\t  }, {\n\t    key: 'isColliding',\n\t    value: function isColliding(bucketRect, catchRect) {\n\t      var bucketCorners = [],\n\t          catchableCorners = [];\n\t\n\t      for (var i = 0; i < 4; i++) {\n\t        bucketCorners.push({\n\t          x: bucketRect.left + bucketRect.width * (i === 1 || i === 2 ? 1 : 0),\n\t          y: bucketRect.top + bucketRect.height * (i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      for (var _i = 0; _i < 4; _i++) {\n\t        catchableCorners.push({\n\t          x: catchRect.left + catchRect.width * (_i === 1 || _i === 2 ? 1 : 0),\n\t          y: catchRect.top + catchRect.height * (_i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      return skoash.util.doIntersect(bucketCorners, catchableCorners);\n\t    }\n\t  }, {\n\t    key: 'selectCatchable',\n\t    value: function selectCatchable(bucketRef, catchableRef) {\n\t      if (!this.state.started || this.state.paused || !this.state.canCatch || !this.props.canCatch || !catchableRef.canCatch()) return;\n\t      catchableRef.markCaught();\n\t      if (catchableRef.props.message === bucketRef.props.message) {\n\t        this.correct(bucketRef, catchableRef);\n\t      } else {\n\t        this.incorrect(bucketRef, catchableRef);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'correct',\n\t    value: function correct(bucketRef, catchableRef) {\n\t      this.playMedia('correct');\n\t      this.props.onCorrect.call(this, bucketRef, catchableRef);\n\t    }\n\t  }, {\n\t    key: 'incorrect',\n\t    value: function incorrect(bucketRef, catchableRef) {\n\t      this.playMedia('incorrect');\n\t      this.props.onIncorrect.call(this, bucketRef, catchableRef);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('catcher', _get(Catcher.prototype.__proto__ || Object.getPrototypeOf(Catcher.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'renderBucket',\n\t    value: function renderBucket() {\n\t      var _this4 = this;\n\t\n\t      return _.map([].concat(this.props.bucket), function (bucket, key) {\n\t        return React.createElement(bucket.type, _extends({}, bucket.props, {\n\t          ref: 'buckets-' + key,\n\t          style: _this4.state.styles[key],\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { ref: 'catcher', className: this.getClassNames() },\n\t        this.renderContentList('assets'),\n\t        this.renderBucket()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Catcher;\n\t}(_3.default);\n\t\n\tCatcher.defaultProps = _.defaults({\n\t  moveBuckets: false,\n\t  onMove: _.noop,\n\t  canCatch: true\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Catcher;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Draggable = function (_skoash$Component) {\n\t  _inherits(Draggable, _skoash$Component);\n\t\n\t  function Draggable() {\n\t    _classCallCheck(this, Draggable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this));\n\t\n\t    _this.state = {\n\t      startX: 0,\n\t      startY: 0,\n\t      endX: 0,\n\t      endY: 0,\n\t      zoom: 1\n\t    };\n\t\n\t    _this.mouseDown = _this.mouseDown.bind(_this);\n\t    _this.mouseUp = _this.mouseUp.bind(_this);\n\t\n\t    _this.moveEvent = _this.moveEvent.bind(_this);\n\t\n\t    _this.touchStart = _this.touchStart.bind(_this);\n\t    _this.touchEnd = _this.touchEnd.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Draggable, [{\n\t    key: 'shouldDrag',\n\t    value: function shouldDrag() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'incomplete',\n\t    value: function incomplete() {\n\t      this.markIncorrect();\n\t      this.returnToStart();\n\t\n\t      _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'incomplete', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'markCorrect',\n\t    value: function markCorrect() {\n\t      this.setState({\n\t        correct: true\n\t      });\n\t    }\n\t  }, {\n\t    key: 'markIncorrect',\n\t    value: function markIncorrect() {\n\t      this.setState({\n\t        correct: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'startEvent',\n\t    value: function startEvent(e, cb) {\n\t      var pageX, pageY, rect, startX, startY, endX, endY, grabX, grabY;\n\t\n\t      if (e.target !== this.refs.el) return;\n\t      if (!this.shouldDrag()) return;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        pageX = e.targetTouches[0].pageX;\n\t        pageY = e.targetTouches[0].pageY;\n\t        rect = e.target.getBoundingClientRect();\n\t        e = e.targetTouches[0];\n\t        e.offsetX = pageX - rect.left;\n\t        e.offsetY = pageY - rect.top;\n\t      }\n\t\n\t      grabX = e.offsetX;\n\t      grabY = e.offsetY;\n\t\n\t      startX = endX = e.pageX - grabX;\n\t      startY = endY = e.pageY - grabY;\n\t\n\t      if (!this.state.firstX) {\n\t        this.setState({\n\t          firstX: startX,\n\t          firstY: startY\n\t        });\n\t      }\n\t\n\t      if (!this.props.return) {\n\t        startX = _.isFinite(this.state.grabX) ? this.state.startX + this.state.grabX - grabX : startX;\n\t        startY = _.isFinite(this.state.grabY) ? this.state.startY + this.state.grabY - grabY : startY;\n\t      }\n\t\n\t      this.setState({\n\t        dragging: true,\n\t        return: false,\n\t        startX: startX,\n\t        startY: startY,\n\t        grabX: grabX,\n\t        grabY: grabY,\n\t        endX: endX,\n\t        endY: endY\n\t      });\n\t\n\t      if (typeof this.props.dragRespond === 'function') {\n\t        this.props.dragRespond(this.props.message);\n\t      }\n\t\n\t      if (typeof cb === 'function') {\n\t        cb.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'attachMouseEvents',\n\t    value: function attachMouseEvents() {\n\t      window.addEventListener('mousemove', this.moveEvent);\n\t      window.addEventListener('mouseup', this.mouseUp);\n\t    }\n\t  }, {\n\t    key: 'attachTouchEvents',\n\t    value: function attachTouchEvents() {\n\t      window.addEventListener('touchmove', this.moveEvent);\n\t      window.addEventListener('touchend', this.touchEnd);\n\t    }\n\t  }, {\n\t    key: 'mouseDown',\n\t    value: function mouseDown(e) {\n\t      this.startEvent(e, this.attachMouseEvents);\n\t    }\n\t  }, {\n\t    key: 'touchStart',\n\t    value: function touchStart(e) {\n\t      this.startEvent(e, this.attachTouchEvents);\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t        e.pageY = e.targetTouches[0].pageY;\n\t      }\n\t\n\t      this.setState({\n\t        endX: e.pageX - this.state.grabX,\n\t        endY: e.pageY - this.state.grabY\n\t      });\n\t    }\n\t  }, {\n\t    key: 'returnToStart',\n\t    value: function returnToStart() {\n\t      if (this.state.firstX) {\n\t        this.setState({\n\t          dragging: false,\n\t          return: true,\n\t          endX: this.state.firstX,\n\t          endY: this.state.firstY\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'endEvent',\n\t    value: function endEvent(cb) {\n\t      this.dropRespond();\n\t\n\t      if (this.props.return) {\n\t        this.returnToStart();\n\t      } else {\n\t        this.setState({\n\t          dragging: false,\n\t          return: this.state.return\n\t        });\n\t      }\n\t\n\t      if (typeof cb === 'function') {\n\t        cb.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'detachMouseEvents',\n\t    value: function detachMouseEvents() {\n\t      window.removeEventListener('mousemove', this.moveEvent);\n\t      window.removeEventListener('mouseup', this.mouseUp);\n\t    }\n\t  }, {\n\t    key: 'detachTouchEvents',\n\t    value: function detachTouchEvents() {\n\t      window.removeEventListener('touchmove', this.moveEvent);\n\t      window.removeEventListener('touchend', this.touchEnd);\n\t    }\n\t  }, {\n\t    key: 'mouseUp',\n\t    value: function mouseUp() {\n\t      this.endEvent(this.detachMouseEvents);\n\t    }\n\t  }, {\n\t    key: 'touchEnd',\n\t    value: function touchEnd() {\n\t      this.endEvent(this.detachTouchEvents);\n\t    }\n\t  }, {\n\t    key: 'dropRespond',\n\t    value: function dropRespond() {\n\t      var corners;\n\t\n\t      corners = this.setCorners();\n\t\n\t      if (typeof this.props.dropRespond === 'function') {\n\t        this.props.dropRespond(this.props.message, corners);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setCorners',\n\t    value: function setCorners() {\n\t      var top,\n\t          left,\n\t          width,\n\t          height,\n\t          el,\n\t          corners = [];\n\t\n\t      left = 0;\n\t      top = 0;\n\t      el = this.refs.el;\n\t      width = el.offsetWidth;\n\t      height = el.offsetHeight;\n\t\n\t      while (el) {\n\t        if (el.className.indexOf('screen') !== -1) {\n\t          break;\n\t        }\n\t\n\t        left += el.offsetLeft || 0;\n\t        top += el.offsetTop || 0;\n\t        el = el.offsetParent;\n\t      }\n\t\n\t      left += (this.state.endX - this.state.startX) / this.state.zoom;\n\t      top += (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t      for (var i = 0; i < 4; i++) {\n\t        corners.push({\n\t          x: left + width * (i === 1 || i === 2 ? 1 : 0),\n\t          y: top + height * (i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      this.setState({\n\t        corners: corners\n\t      });\n\t\n\t      return corners;\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bootstrap();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'bootstrap', this).call(this);\n\t\n\t      this.setZoom();\n\t\n\t      this.refs.el.addEventListener('mousedown', this.mouseDown);\n\t      this.refs.el.addEventListener('touchstart', this.touchStart);\n\t\n\t      window.addEventListener('resize', this.setZoom.bind(this));\n\t    }\n\t  }, {\n\t    key: 'setZoom',\n\t    value: function setZoom() {\n\t      var _this2 = this;\n\t\n\t      skoash.trigger('getState').then(function (state) {\n\t        _this2.setState({\n\t          zoom: state.scale\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var x, y;\n\t\n\t      x = (this.state.endX - this.state.startX) / this.state.zoom;\n\t      y = (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t      return {\n\t        transform: 'translateX(' + x + 'px) translateY(' + y + 'px)',\n\t        WebkitTransform: 'translateX(' + x + 'px) translateY(' + y + 'px)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      var _classNames;\n\t\n\t      return (0, _classnames2.default)((_classNames = {\n\t        draggable: true\n\t      }, _defineProperty(_classNames, this.props.className, this.props.className), _defineProperty(_classNames, this.props.message, this.props.message), _defineProperty(_classNames, 'DRAGGING', this.state.dragging), _defineProperty(_classNames, 'RETURN', this.state.return), _defineProperty(_classNames, 'CORRECT', this.state.correct), _classNames), _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          ref: 'el',\n\t          className: this.getClassNames(),\n\t          style: this.getStyle()\n\t        },\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Draggable;\n\t}(skoash.Component);\n\t\n\texports.default = Draggable;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _2 = __webpack_require__(33);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(2);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _6 = __webpack_require__(9);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Dropper = function (_Draggable) {\n\t  _inherits(Dropper, _Draggable);\n\t\n\t  function Dropper() {\n\t    _classCallCheck(this, Dropper);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Dropper.__proto__ || Object.getPrototypeOf(Dropper)).call(this));\n\t\n\t    _this.state = _.defaults({\n\t      items: {},\n\t      itemCount: 0,\n\t      itemEndXs: {},\n\t      direction: ''\n\t    }, _this.state);\n\t\n\t    _this.next = _this.next.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Dropper, [{\n\t    key: 'next',\n\t    value: function next(on) {\n\t      var _this2 = this;\n\t\n\t      var items, index;\n\t\n\t      if (!this.state.started || !this.props.on && !on || this.props.gameState.paused) return;\n\t\n\t      index = this.state.itemCount;\n\t      items = this.state.items;\n\t      items[index] = this.refs.bin.get(1)[0];\n\t\n\t      this.setState({\n\t        items: items,\n\t        itemCount: index + 1\n\t      }, function () {\n\t        var timeoutFunction = function timeoutFunction(i) {\n\t          var itemRef, itemDOM, itemEndXs, onTransitionEnd;\n\t          itemRef = _this2.refs['items-' + index];\n\t          if (itemRef) {\n\t            itemRef.addClassName(_this2.props.prepClasses[i]);\n\t            _this2.props.onAddClassName.call(_this2, _this2.props.prepClasses[i]);\n\t            if (i === _this2.props.prepClasses.length - 1) {\n\t              itemEndXs = _this2.state.itemEndXs;\n\t              itemEndXs[index] = _this2.state.endX;\n\t              onTransitionEnd = function onTransitionEnd() {\n\t                items = _this2.state.items;\n\t                _this2.props.onTransitionEnd.call(_this2, itemRef);\n\t                delete items[index];\n\t                _this2.setState({\n\t                  items: items,\n\t                  itemEndXs: itemEndXs\n\t                });\n\t              };\n\t              itemDOM = ReactDOM.findDOMNode(itemRef);\n\t              itemDOM.addEventListener('transitionend', onTransitionEnd);\n\t              itemDOM.addEventListener('animationend', onTransitionEnd);\n\t            }\n\t          }\n\t\n\t          if (i === _this2.props.prepClasses.length) _this2.next();\n\t        };\n\t\n\t        var _loop = function _loop(i) {\n\t          setTimeout(function () {\n\t            timeoutFunction(i);\n\t          }, i * _this2.props.prepTimeout);\n\t        };\n\t\n\t        for (var i = 0; i <= _this2.props.prepClasses.length; i++) {\n\t          _loop(i);\n\t        }\n\t\n\t        _this2.updateGameState({\n\t          path: _this2.props.refsTarget,\n\t          data: {\n\t            refs: _.filter(_this2.refs, function (v, k) {\n\t              return !k.indexOf('items-');\n\t            })\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      var endX;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t      }\n\t\n\t      endX = Math.min(Math.max(e.pageX - this.state.grabX, this.props.leftBound), this.props.rightBound);\n\t\n\t      this.setState({\n\t        endX: endX,\n\t        direction: endX > this.state.endX ? 'right' : 'left'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Dropper.prototype.__proto__ || Object.getPrototypeOf(Dropper.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.on === true && props.on !== this.props.on) {\n\t        this.next(true);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getItemStyle',\n\t    value: function getItemStyle(key, style) {\n\t      var endX, x;\n\t\n\t      endX = this.state.itemEndXs[key] || this.state.endX;\n\t      x = (endX - this.state.startX) / this.state.zoom;\n\t\n\t      return _.defaults({\n\t        transform: 'translateX(' + x + 'px)',\n\t        WebkitTransform: 'translateX(' + x + 'px)'\n\t      }, style);\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var x = (this.state.endX - this.state.startX) / this.state.zoom;\n\t\n\t      return {\n\t        transform: 'translateX(' + x + 'px)',\n\t        WebkitTransform: 'translateX(' + x + 'px)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('dropper', this.state.direction, _get(Dropper.prototype.__proto__ || Object.getPrototypeOf(Dropper.prototype), 'getClassNames', this).call(this));\n\t    }\n\t\n\t    /*\n\t     * shortid is intentionally not used for key here because we want to make sure\n\t     * that the element is transitioned and not replaced.\n\t     */\n\t\n\t  }, {\n\t    key: 'renderItems',\n\t    value: function renderItems() {\n\t      var _this3 = this;\n\t\n\t      return _.map(this.state.items, function (item, key) {\n\t        var ref = 'items-' + key;\n\t        if (!item) return null;\n\t        return React.createElement(item.type, _extends({}, item.props, {\n\t          style: _this3.getItemStyle(key, item.props.style),\n\t          'data-ref': ref,\n\t          'data-message': item.props.message,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t        ref: 'bin'\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          className: this.getClassNames()\n\t        },\n\t        this.renderBin(),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            ref: 'el',\n\t            className: 'el',\n\t            style: this.getStyle()\n\t          },\n\t          this.renderContentList()\n\t        ),\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'items' },\n\t          this.renderItems()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Dropper;\n\t}(_3.default);\n\t\n\tDropper.defaultProps = _.defaults({\n\t  prepClasses: ['ready', 'set', 'go'],\n\t  prepTimeout: 1000,\n\t  bin: React.createElement(_5.default, {\n\t    bin: [React.createElement(_7.default, null)]\n\t  }),\n\t  onStart: function onStart() {\n\t    this.next();\n\t  },\n\t  onResume: function onResume() {\n\t    this.next();\n\t  },\n\t  leftBound: 0,\n\t  rightBound: 800,\n\t  refsTarget: 'dropper',\n\t  on: true,\n\t  onTransitionEnd: _.noop\n\t}, _3.default.defaultProps);\n\t\n\texports.default = Dropper;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"ios-splash\",\n\t      checkComplete: false,\n\t      completeDelay: 6000,\n\t      nextDelay: 3000,\n\t      completeOnStart: true,\n\t      hidePrev: true\n\t    }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball.png\" }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball_anim.gif\" })\n\t  );\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Loader = function (_skoash$Component) {\n\t  _inherits(Loader, _skoash$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        \"div\",\n\t        { id: \"loader\", className: \"center\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"group\" },\n\t          React.createElement(\n\t            \"h2\",\n\t            null,\n\t            \"Loading!\"\n\t          ),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"spinner animated\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"spinner animated\" },\n\t              React.createElement(\"div\", { className: \"spinner animated\" })\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(skoash.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar QuitScreen = function (_skoash$Screen) {\n\t  _inherits(QuitScreen, _skoash$Screen);\n\t\n\t  function QuitScreen() {\n\t    _classCallCheck(this, QuitScreen);\n\t\n\t    return _possibleConstructorReturn(this, (QuitScreen.__proto__ || Object.getPrototypeOf(QuitScreen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuitScreen, [{\n\t    key: 'okay',\n\t    value: function okay() {\n\t      skoash.trigger('quit');\n\t    }\n\t  }, {\n\t    key: 'cancel',\n\t    value: function cancel() {\n\t      this.close();\n\t      skoash.trigger('menuClose', {\n\t        id: this.props.id\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      if (this.props.assets) {\n\t        return this.props.assets.map(function (asset, key) {\n\t          return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t            ref: asset.ref || asset.props['data-ref'] || 'asset-' + key,\n\t            key: key,\n\t            'data-ref': key\n\t          }));\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { id: this.props.id, className: 'screen ' + this.getClassNames() },\n\t        this.renderAssets(),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'center' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'frame' },\n\t            React.createElement(\n\t              'h2',\n\t              null,\n\t              'Are you sure you',\n\t              React.createElement('br', null),\n\t              'want to quit?'\n\t            ),\n\t            React.createElement(\n\t              'h3',\n\t              null,\n\t              'Your game progress will be saved'\n\t            ),\n\t            React.createElement('button', { className: 'quit-yes', onClick: this.okay.bind(this) }),\n\t            React.createElement('button', { className: 'quit-no', onClick: this.cancel.bind(this) })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuitScreen;\n\t}(skoash.Screen);\n\t\n\texports.default = React.createElement(QuitScreen, {\n\t  id: 'quit'\n\t});\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _lodash = __webpack_require__(12);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Reveal = function (_skoash$Component) {\n\t  _inherits(Reveal, _skoash$Component);\n\t\n\t  function Reveal() {\n\t    _classCallCheck(this, Reveal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Reveal.__proto__ || Object.getPrototypeOf(Reveal)).call(this));\n\t\n\t    _this.state = {\n\t      openReveal: '',\n\t      currentlyOpen: []\n\t    };\n\t\n\t    _this.index = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Reveal, [{\n\t    key: 'incomplete',\n\t    value: function incomplete() {\n\t      this.setState({\n\t        openReveal: '',\n\t        currentlyOpen: []\n\t      });\n\t\n\t      _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'incomplete', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(message) {\n\t      var self = this;\n\t      var currentlyOpen = this.state.currentlyOpen;\n\t\n\t      if (!this.props.allowMultipleOpen) {\n\t        currentlyOpen = [message];\n\t      } else if (currentlyOpen.indexOf(message) === -1) {\n\t        currentlyOpen = currentlyOpen.concat(message);\n\t      }\n\t\n\t      self.setState({\n\t        open: true,\n\t        currentlyOpen: currentlyOpen,\n\t        openReveal: '' + message\n\t      });\n\t\n\t      self.playAudio(message);\n\t\n\t      if (self.props.completeOnOpen) {\n\t        self.complete();\n\t      } else {\n\t        self.requireForComplete.map(function (key) {\n\t          if (key === message && self.refs[key]) {\n\t            self.refs[key].complete();\n\t          }\n\t        });\n\t      }\n\t\n\t      if (self.props.autoClose) {\n\t        setTimeout(function () {\n\t          self.close();\n\t        }, 2000);\n\t      }\n\t\n\t      if (self.props.openTarget) {\n\t        self.updateGameState({\n\t          path: self.props.openTarget,\n\t          data: {\n\t            open: '' + message\n\t          }\n\t        });\n\t      }\n\t\n\t      self.props.onOpen.call(self, message);\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      var prevMessage = this.state.openReveal;\n\t      var currentlyOpen = this.state.currentlyOpen;\n\t      currentlyOpen.splice(currentlyOpen.indexOf(prevMessage), 1);\n\t\n\t      this.setState({\n\t        open: false,\n\t        openReveal: '',\n\t        currentlyOpen: currentlyOpen\n\t      });\n\t\n\t      if (!opts.silent && this.audio['close-sound']) {\n\t        this.audio['close-sound'].play();\n\t      }\n\t\n\t      this.props.onClose.call(this, prevMessage);\n\t\n\t      if (typeof this.props.closeRespond === 'function') {\n\t        this.props.closeRespond(prevMessage);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'start', this).call(this);\n\t      if (this.props.openOnStart != null) {\n\t        this.open(this.props.openOnStart);\n\t      } else if (this.props.start && typeof this.props.start === 'function') {\n\t        this.props.start.call(this);\n\t      } else {\n\t        this.close({ silent: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'playAudio',\n\t    value: function playAudio(message) {\n\t      var _this2 = this;\n\t\n\t      var messages;\n\t\n\t      if ('' + parseInt(message, 10) === message) {\n\t        message = 'asset-' + message;\n\t      }\n\t\n\t      if (!message) return;\n\t\n\t      if (this.audio['open-sound']) {\n\t        this.audio['open-sound'].play();\n\t      }\n\t\n\t      if (typeof message === 'string') {\n\t        messages = message.split(' ');\n\t        messages.map(function (audio) {\n\t          audio = 'asset-' + audio;\n\t          if (_this2.audio[audio]) {\n\t            _this2.audio[audio].play();\n\t          } else if (_this2.media[audio] && typeof _this2.media[audio].play === 'function') {\n\t            _this2.media[audio].play();\n\t          }\n\t        });\n\t      } else {\n\t        if (this.audio.voiceOver[message]) {\n\t          this.audio.voiceOver[message].play();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      if (this.props.assets) {\n\t        return this.props.assets.map(function (asset, key) {\n\t          var ref = 'asset-';\n\t          ref += asset.ref || asset.props['data-ref'] || key;\n\t          return React.createElement(asset.type, _extends({}, asset.props, {\n\t            'data-ref': key,\n\t            ref: ref,\n\t            key: key\n\t          }));\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this3 = this;\n\t\n\t      var list = this.props.list;\n\t\n\t      return list.map(function (li, key) {\n\t        var dataRef = li.props['data-ref'] || key;\n\t        var ref = li.ref || dataRef;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          type: 'li',\n\t          className: _this3.getClass(li, key),\n\t          'data-ref': dataRef,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(props) {\n\t      _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t      if (props.openReveal != null && props.openReveal !== this.props.openReveal) {\n\t        this.open(props.openReveal);\n\t      }\n\t\n\t      if (props.closeReveal === true && props.closeReveal !== this.props.closeReveal) {\n\t        this.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(li, key) {\n\t      var classes = '';\n\t\n\t      if (li.props.className) classes = li.props.className;\n\t\n\t      if (this.state.currentlyOpen.indexOf(key) !== -1 || this.state.currentlyOpen.indexOf(li.props['data-ref']) !== -1 || this.state.currentlyOpen.indexOf(li.ref) !== -1) {\n\t        classes = (0, _classnames2.default)(classes, 'OPEN');\n\t      }\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      var classes,\n\t          open = 'open-none ';\n\t\n\t      if (this.state.open) {\n\t        open = '';\n\t        this.state.currentlyOpen.forEach(function (ref) {\n\t          open += 'open-' + ref + ' ';\n\t        });\n\t        open += 'OPEN';\n\t      }\n\t\n\t      classes = (0, _classnames2.default)('reveal', open, _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'getClassNames', this).call(this));\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        this.renderAssets(),\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'ul',\n\t            null,\n\t            this.renderList()\n\t          ),\n\t          React.createElement('button', { className: 'close-reveal', onClick: this.close.bind(this) })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Reveal;\n\t}(skoash.Component);\n\t\n\tReveal.defaultProps = _lodash2.default.defaults({\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  onOpen: _lodash2.default.noop,\n\t  onClose: _lodash2.default.noop,\n\t  allowMultipleOpen: false\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Reveal;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Selectable = function (_skoash$Component) {\n\t  _inherits(Selectable, _skoash$Component);\n\t\n\t  function Selectable() {\n\t    _classCallCheck(this, Selectable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Selectable.__proto__ || Object.getPrototypeOf(Selectable)).call(this));\n\t\n\t    _this.state = {\n\t      classes: {},\n\t      selectFunction: _this.select\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Selectable, [{\n\t    key: 'start',\n\t    value: function start() {\n\t      _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'start', this).call(this);\n\t\n\t      var selectClass,\n\t          selectFunction,\n\t          classes = {};\n\t\n\t      selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n\t      selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\t\n\t      if (this.props.selectOnStart) {\n\t        classes[this.props.selectOnStart] = selectClass;\n\t      }\n\t\n\t      this.setState({\n\t        started: true,\n\t        classes: classes,\n\t        selectFunction: selectFunction,\n\t        selectClass: selectClass\n\t      });\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'bootstrap', this).call(this);\n\t\n\t      var self = this;\n\t\n\t      var correctAnswers = this.requireForComplete.filter(function (ref) {\n\t        return self.refs[ref].props.correct;\n\t      });\n\t\n\t      if (correctAnswers.length > 0) {\n\t        this.requireForComplete = correctAnswers;\n\t      }\n\t\n\t      if (this.refs.bin) {\n\t        this.setState({\n\t          list: this.refs.bin.getAll()\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'selectHelper',\n\t    value: function selectHelper(e, classes) {\n\t      var ref,\n\t          dataRef,\n\t          target,\n\t          id,\n\t          isCorrect,\n\t          self = this;\n\t\n\t      target = e.target.closest('LI');\n\t\n\t      if (!target) return;\n\t\n\t      dataRef = target.getAttribute('data-ref');\n\t      ref = self.refs[dataRef];\n\t\n\t      isCorrect = ref && ref.props && ref.props.correct || !self.props.answers || !self.props.answers.length || self.props.answers.indexOf(dataRef) !== -1;\n\t\n\t      if (self.props.allowDeselect && classes[dataRef]) {\n\t        delete classes[dataRef];\n\t      } else if (isCorrect) {\n\t        classes[dataRef] = self.state.selectClass;\n\t      }\n\t\n\t      self.setState({\n\t        classes: classes\n\t      });\n\t\n\t      self.props.selectRespond.call(self, dataRef);\n\t      self.props.onSelect.call(self, dataRef);\n\t\n\t      if (self.props.chooseOne) {\n\t        self.requireForComplete = [dataRef];\n\t      }\n\t\n\t      if (self.props.dataTarget) {\n\t        self.updateGameState({\n\t          path: self.props.dataTarget,\n\t          data: {\n\t            target: ref\n\t          }\n\t        });\n\t      }\n\t\n\t      if (self.props.completeListOnClick) {\n\t        self.requireForComplete.map(function (key) {\n\t          if (key === id && self.refs[id]) {\n\t            self.refs[id].complete();\n\t          }\n\t        });\n\t      }\n\t\n\t      self.requireForComplete.map(function (key) {\n\t        if (key === dataRef && self.refs[key]) {\n\t          self.refs[key].complete();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'select',\n\t    value: function select(e) {\n\t      var classes = [];\n\t      this.selectHelper(e, classes);\n\t    }\n\t  }, {\n\t    key: 'highlight',\n\t    value: function highlight(e) {\n\t      var classes = this.state.classes;\n\t      this.selectHelper(e, classes);\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key, li) {\n\t      return (0, _classnames2.default)(li.props.className, this.state.classes[key], this.state.classes[li.props['data-ref']], this.state.classes[li.props['data-key']]);\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2.default)('selectable', _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'getClassNames', this).call(this));\n\t    }\n\t  }, {\n\t    key: 'checkComplete',\n\t    value: function checkComplete() {\n\t      var self = this,\n\t          complete;\n\t\n\t      if (this.props.checkComplete === false) return;\n\t\n\t      complete = self.requireForComplete.every(function (key) {\n\t        if (self.refs[key] instanceof Node) {\n\t          return true;\n\t        }\n\t        if (!self.refs[key].state || self.refs[key].state && !self.refs[key].state.complete) {\n\t          if (typeof self.refs[key].checkComplete === 'function') {\n\t            self.refs[key].checkComplete();\n\t          }\n\t          return false;\n\t        }\n\t        return true;\n\t      });\n\t\n\t      if (complete && !self.state.complete) {\n\t        self.complete();\n\t      } else if (self.state.started && !complete && self.state.complete) {\n\t        self.incomplete();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderBin',\n\t    value: function renderBin() {\n\t      if (!this.props.bin) return null;\n\t\n\t      return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t        ref: 'bin'\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this2 = this;\n\t\n\t      var list = this.props.list || this.state.list;\n\t      return list.map(function (li, key) {\n\t        var dataRef = li.props['data-ref'] || key;\n\t        var ref = li.ref || li.props.id || dataRef;\n\t        var message = li.props.message || '' + key;\n\t        return React.createElement(li.type, _extends({}, li.props, {\n\t          type: 'li',\n\t          className: _this2.getClass(key, li),\n\t          message: message,\n\t          'data-message': message,\n\t          'data-ref': dataRef,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        this.renderBin(),\n\t        React.createElement(\n\t          'ul',\n\t          { className: this.getClassNames(), onClick: this.state.selectFunction.bind(this) },\n\t          this.renderList()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Selectable;\n\t}(skoash.Component);\n\t\n\tSelectable.defaultProps = _.defaults({\n\t  list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t  selectClass: 'SELECTED',\n\t  completeListOnClick: true,\n\t  selectRespond: _.identity,\n\t  onSelect: _.identity\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Selectable;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\twindow.ENVIRONMENT = {\n\t  MEDIA: 'https://media.changemyworldnow.com/'\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tmodule.exports = __webpack_require__(44);\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar alphabet = __webpack_require__(11);\n\t\n\t/**\n\t * Decode the id to get the version and worker\n\t * Mainly for debugging and testing.\n\t * @param id - the shortid-generated id.\n\t */\n\tfunction decode(id) {\n\t    var characters = alphabet.shuffled();\n\t    return {\n\t        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n\t        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n\t    };\n\t}\n\t\n\tmodule.exports = decode;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar randomByte = __webpack_require__(46);\n\t\n\tfunction encode(lookup, number) {\n\t    var loopCounter = 0;\n\t    var done;\n\t\n\t    var str = '';\n\t\n\t    while (!done) {\n\t        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n\t        done = number < (Math.pow(16, loopCounter + 1 ) );\n\t        loopCounter++;\n\t    }\n\t    return str;\n\t}\n\t\n\tmodule.exports = encode;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar alphabet = __webpack_require__(11);\n\tvar encode = __webpack_require__(43);\n\tvar decode = __webpack_require__(42);\n\tvar isValid = __webpack_require__(45);\n\t\n\t// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n\t// This number should be updated every year or so to keep the generated id short.\n\t// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\tvar REDUCE_TIME = 1459707606518;\n\t\n\t// don't change unless we change the algos or REDUCE_TIME\n\t// must be an integer and less than 16\n\tvar version = 6;\n\t\n\t// if you are using cluster or multiple servers use this to make each instance\n\t// has a unique value for worker\n\t// Note: I don't know if this is automatically set when using third\n\t// party cluster solutions such as pm2.\n\tvar clusterWorkerId = __webpack_require__(48) || 0;\n\t\n\t// Counter is used when shortid is called multiple times in one second.\n\tvar counter;\n\t\n\t// Remember the last time shortid was called in case counter is needed.\n\tvar previousSeconds;\n\t\n\t/**\n\t * Generate unique id\n\t * Returns string id\n\t */\n\tfunction generate() {\n\t\n\t    var str = '';\n\t\n\t    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\t\n\t    if (seconds === previousSeconds) {\n\t        counter++;\n\t    } else {\n\t        counter = 0;\n\t        previousSeconds = seconds;\n\t    }\n\t\n\t    str = str + encode(alphabet.lookup, version);\n\t    str = str + encode(alphabet.lookup, clusterWorkerId);\n\t    if (counter > 0) {\n\t        str = str + encode(alphabet.lookup, counter);\n\t    }\n\t    str = str + encode(alphabet.lookup, seconds);\n\t\n\t    return str;\n\t}\n\t\n\t\n\t/**\n\t * Set the seed.\n\t * Highly recommended if you don't want people to try to figure out your id schema.\n\t * exposed as shortid.seed(int)\n\t * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n\t */\n\tfunction seed(seedValue) {\n\t    alphabet.seed(seedValue);\n\t    return module.exports;\n\t}\n\t\n\t/**\n\t * Set the cluster worker or machine id\n\t * exposed as shortid.worker(int)\n\t * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n\t * returns shortid module so it can be chained.\n\t */\n\tfunction worker(workerId) {\n\t    clusterWorkerId = workerId;\n\t    return module.exports;\n\t}\n\t\n\t/**\n\t *\n\t * sets new characters to use in the alphabet\n\t * returns the shuffled alphabet\n\t */\n\tfunction characters(newCharacters) {\n\t    if (newCharacters !== undefined) {\n\t        alphabet.characters(newCharacters);\n\t    }\n\t\n\t    return alphabet.shuffled();\n\t}\n\t\n\t\n\t// Export all other functions as properties of the generate function\n\tmodule.exports = generate;\n\tmodule.exports.generate = generate;\n\tmodule.exports.seed = seed;\n\tmodule.exports.worker = worker;\n\tmodule.exports.characters = characters;\n\tmodule.exports.decode = decode;\n\tmodule.exports.isValid = isValid;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar alphabet = __webpack_require__(11);\n\t\n\tfunction isShortId(id) {\n\t    if (!id || typeof id !== 'string' || id.length < 6 ) {\n\t        return false;\n\t    }\n\t\n\t    var characters = alphabet.characters();\n\t    var len = id.length;\n\t    for(var i = 0; i < len;i++) {\n\t        if (characters.indexOf(id[i]) === -1) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\t\n\tmodule.exports = isShortId;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\t\n\tfunction randomByte() {\n\t    if (!crypto || !crypto.getRandomValues) {\n\t        return Math.floor(Math.random() * 256) & 0x30;\n\t    }\n\t    var dest = new Uint8Array(1);\n\t    crypto.getRandomValues(dest);\n\t    return dest[0] & 0x30;\n\t}\n\t\n\tmodule.exports = randomByte;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// Found this seed-based random generator somewhere\n\t// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\t\n\tvar seed = 1;\n\t\n\t/**\n\t * return a random number based on a seed\n\t * @param seed\n\t * @returns {number}\n\t */\n\tfunction getNextValue() {\n\t    seed = (seed * 9301 + 49297) % 233280;\n\t    return seed/(233280.0);\n\t}\n\t\n\tfunction setSeed(_seed_) {\n\t    seed = _seed_;\n\t}\n\t\n\tmodule.exports = {\n\t    nextValue: getNextValue,\n\t    seed: setSeed\n\t};\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = 0;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** litter-bug/ai.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0192020ba821d0c7d3d9\n **/","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/classnames/index.js\n ** module id = 1\n ** module chunks = 0\n **/","import classNames from 'classnames';\n\nclass Randomizer extends skoash.Component {\n  getAll() {\n    return _.shuffle(this.props.bin);\n  }\n\n  get(amount = 1) {\n    var items, bin = [];\n\n    if (this.props.remain && this.state.bin) {\n      bin = this.state.bin;\n    }\n\n    while (bin.length < amount) {\n      bin = bin.concat(_.shuffle(this.props.bin));\n    }\n\n    items = bin.splice(0, amount);\n\n    if (this.props.remain) {\n      this.setState({bin});\n    }\n\n    return items;\n  }\n\n  getClassNames() {\n    return classNames('randomizer', super.getClassNames());\n  }\n\n  renderBin() {\n    var bin = this.props.bin || [];\n\n    return bin.map((li, key) => {\n      var ref = li.ref || li.props['data-ref'] || key;\n      return (\n        <li.type\n          {...li.props}\n          data-ref={ref}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <ul className={this.getClassNames()}>\n        {this.renderBin()}\n      </ul>\n    );\n  }\n}\n\nRandomizer.defaultProps = _.defaults({\n  bin: [],\n  remain: false,\n  shouldComponentUpdate: () => false,\n}, skoash.Component.defaultProps);\n\nexport default Randomizer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/randomizer/0.1.js\n **/","class MediaCollection extends skoash.Component {\n  play(ref) {\n    if (this.refs[ref]) this.refs[ref].play();\n\n    this.props.onPlay.call(this, ref);\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.play && props.play !== this.props.play) {\n      this.play(props.play);\n    }\n  }\n}\n\nMediaCollection.defaultProps = _.defaults({\n  onPlay: _.identity,\n}, skoash.Component.defaultProps);\n\nexport default MediaCollection;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/media_collection/0.1.js\n **/","import classNames from 'classnames';\n\nclass Score extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      score: 0\n    };\n\n    this.checkComplete = this.checkComplete.bind(this);\n  }\n\n  checkComplete() {\n    if (!this.props.checkComplete || !this.state.ready || !this.requireForComplete) return;\n    if (!this.props.max) return;\n    if ((this.state.score >= this.props.max || this.props.correct >= this.props.max) && !this.state.complete) this.complete();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    this.setState({\n      score: this.props.startingScore\n    });\n  }\n\n  complete() {\n    super.complete();\n\n    setTimeout(() => {\n      if (this.props.resetOnComplete) {\n        this.setScore({\n          correct: 0,\n          incorrect: 0,\n        });\n      }\n    }, this.props.completeDelay);\n  }\n\n  checkScore(props) {\n    if (!props.max) return;\n    if (this.state.score >= props.max && (!this.state.complete || props.multipleCompletes)) {\n      this.complete();\n    } else if (this.state.complete && !props.complete) {\n      this.incomplete();\n    }\n  }\n\n  up(increment) {\n    increment = _.isFinite(increment) ? increment : _.isFinite(this.props.increment) ? this.props.increment : 1;\n    if (!_.isFinite(increment)) throw 'increment must be finite';\n\n    this.updateScore(increment);\n  }\n\n  down(increment) {\n    increment = _.isFinite(increment) ? increment : _.isFinite(this.props.downIncrement) ? this.props.downIncrement : _.isFinite(this.props.increment) ? this.props.increment : 1;\n    if (!_.isFinite(increment)) throw 'increment must be finite';\n\n    this.updateScore(-1 * increment);\n  }\n\n  updateScore(increment) {\n    this.setState({\n      score: this.state.score + increment\n    }, () => {\n      this.updateGameState({\n        path: this.props.dataTarget,\n        data: {\n          score: this.state.score\n        }\n      });\n\n      this.checkScore(this.props);\n      this.props.onUpdateScore.call(this, this.state.score);\n    });\n  }\n\n  setScore(props) {\n    var upIncrement, downIncrement, score;\n\n    if (_.isFinite(props)) {\n      score = props;\n    } else {\n      upIncrement = _.isFinite(props.increment) ? props.increment : 1;\n      downIncrement = _.isFinite(props.downIncrement) ? props.downIncrement :\n        _.isFinite(props.increment) ? props.increment : 1;\n      score = upIncrement * props.correct - downIncrement * props.incorrect;\n    }\n\n    this.setState({\n      score\n    }, () => {\n      this.checkScore(props);\n      this.props.onUpdateScore.call(this, score);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.correct !== this.props.correct ||\n      props.incorrect !== this.props.incorrect) {\n      this.setScore(props);\n    }\n  }\n\n  getClassNames() {\n    return classNames(\n      'score',\n      `score-${this.state.score}`,\n      super.getClassNames()\n    );\n  }\n\n  render() {\n    return (\n      <div {...this.props} className={this.getClassNames()} data-max={this.props.max} data-score={this.state.score} score={this.state.score}>\n        {this.props.leadingContent}\n        <span>\n          {this.state.score}\n        </span>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nScore.defaultProps = _.defaults({\n  checkComplete: false,\n  startingScore: 0,\n  correct: 0,\n  incorrect: 0,\n  onUpdateScore: _.identity,\n}, skoash.Component.defaultProps);\n\nexport default Score;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/score/0.1.js\n **/","import classNames from 'classnames';\n\nclass Timer extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      time: 0,\n      stamp: 0\n    };\n\n    this.checkComplete = this.checkComplete.bind(this);\n  }\n\n  checkComplete() {\n    var time = Date.now();\n\n    if (!this.props.checkComplete) return;\n\n    if (!this.state.started || this.state.paused) return;\n\n    if (time >= this.state.stamp) {\n      this.setState({\n        stamp: time + 1000,\n        time: this.state.time + 1\n      }, () => {\n        if (this.state.time * 1000 >= this.props.timeout) {\n          this.complete();\n          this.stop();\n        } else {\n          window.requestAnimationFrame(this.checkComplete);\n        }\n      });\n    } else {\n      window.requestAnimationFrame(this.checkComplete);\n    }\n  }\n\n  incompleteRefs() {\n    this.restart();\n  }\n\n  restart() {\n    if (!this.state.ready) return;\n    if (this.state.complete) this.incomplete();\n\n    this.setState({\n      time: 0,\n      stamp: 0,\n    }, () => {\n      if (this.state.started) {\n        this.checkComplete();\n      } else {\n        this.start();\n      }\n    });\n  }\n\n  stop() {\n    if (!this.state.started) return;\n    this.setState({\n      started: false\n    });\n  }\n\n  pause() {\n    if (!this.state.started) return;\n    this.setState({\n      paused: true\n    });\n  }\n\n  resume() {\n    if (!this.state.paused) return;\n    this.setState({\n      paused: false\n    }, () => {\n      if (this.state.started) {\n        this.checkComplete();\n      } else {\n        this.start();\n      }\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.restart && props.restart !== this.props.restart) {\n      this.restart();\n    }\n  }\n\n  getClassNames() {\n    return classNames('timer', super.getClassNames());\n  }\n\n  render() {\n    var time = this.props.getTime.call(this);\n    return (\n      <div {...this.props} className={this.getClassNames()} time={time}>\n        {this.props.leadingContent}\n        <span>\n          {time}\n        </span>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nTimer.defaultProps = _.defaults({\n  getTime: function () {\n    return this.props.countDown ? this.props.timeout / 1000 - this.state.time : this.state.time;\n  },\n  leadingContent: '',\n  timeout: 60000,\n  countDown: false,\n}, skoash.Component.defaultProps);\n\nexport default Timer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/timer/0.1.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\n\nimport Score from 'shared/components/score/0.1';\nimport Timer from 'shared/components/timer/0.1';\n\nimport Dropper from 'shared/components/dropper/0.1';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Catcher from 'shared/components/catcher/0.1';\nimport Catchable from 'shared/components/catchable/0.1';\n\nimport Reveal from 'shared/components/reveal/0.1';\n\nexport default function (props, ref, key, opts = {}) {\n  var onOpenReveal,\n    onCloseReveal,\n    onScoreComplete,\n    getTime,\n    onTimerComplete,\n    onAddClassName,\n    onTransitionEnd,\n    onPlaySFX,\n    onCorrectCatch,\n    onIncorrectCatch,\n    onMove,\n    bin;\n\n  onOpenReveal = function () {\n    this.updateGameState({\n      path: 'game',\n      data: {\n        stop: true,\n        start: false,\n      },\n    });\n  };\n\n  onCloseReveal = function (prevMessage) {\n    this.updateGameState({\n      path: 'game',\n      data: {\n        stop: false,\n        start: true,\n      },\n    });\n    this.updateGameState({\n      path: 'reveal',\n      data: {\n        close: false,\n      }\n    });\n    this.updateGameState({\n      path: 'openReveal',\n      data: null,\n    });\n    this.updateGameState({\n      path: 'score',\n      data: {\n        correct: 0,\n        incorrect: 0,\n      }\n    });\n\n    if (prevMessage === 'level-up') {\n      skoash.Screen.prototype.goto(parseInt(key, 10) + 1);\n    }\n  };\n\n  onScoreComplete = function () {\n    this.updateGameState({\n      path: 'openReveal',\n      data: 'level-up',\n    });\n    this.updateGameState({\n      path: 'game',\n      data: {\n        complete: true,\n      },\n    });\n  };\n\n  getTime = function () {\n    var timeLeft, minutesLeft, secondsLeft;\n    timeLeft = this.props.timeout / 1000 - this.state.time;\n    minutesLeft = Math.floor(timeLeft / 60);\n    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n    secondsLeft = timeLeft % 60;\n    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n    return `${minutesLeft}:${secondsLeft}`;\n  };\n\n  onTimerComplete = function () {\n    if (_.get(props, 'data.openReveal') === 'level-up') return;\n    this.updateGameState({\n      path: 'openReveal',\n      data: 'try-again',\n    });\n  };\n\n  onAddClassName = function (className) {\n    if (className === 'go') return;\n    this.updateGameState({\n      path: 'sfx',\n      data: {\n        playing: 'print'\n      }\n    });\n  };\n\n  onTransitionEnd = function (item) {\n    if (_.get(props, 'data.openReveal') || props.gameState.paused ||\n      item.props.message !== 'trash' || !item.state.canCatch) return;\n    this.updateGameState({\n      path: 'score',\n      data: {\n        litter: _.get(props, 'data.score.litter', 0) + 1,\n      },\n    });\n    this.updateGameState({\n      path: 'sfx',\n      data: {\n        playing: 'miss',\n      }\n    });\n  };\n\n  onPlaySFX = function () {\n    this.updateGameState({\n      path: 'sfx',\n      data: {\n        playing: null,\n      }\n    });\n  };\n\n  onCorrectCatch = function (bucketRef) {\n    bucketRef.addClassName('correct');\n    setTimeout(() => {\n      bucketRef.removeClassName('correct');\n    }, 1000);\n    this.updateGameState({\n      path: 'score',\n      data: {\n        correct: _.get(props, 'data.score.correct', 0) + 1,\n      },\n    });\n  };\n\n  onIncorrectCatch = function (bucketRef) {\n    bucketRef.addClassName('incorrect');\n    setTimeout(() => {\n      bucketRef.removeClassName('incorrect');\n    }, 1000);\n    this.updateGameState({\n      path: 'score',\n      data: {\n        incorrect: _.get(props, 'data.score.incorrect', 0) + 1,\n      },\n    });\n  };\n\n  onMove = function (e) {\n    var rect, styles;\n\n    if (e.target !== this.refs.catcher) return;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      rect = e.target.getBoundingClientRect();\n      e = e.targetTouches[0];\n      e.offsetY = e.pageY - rect.top;\n    }\n\n    styles = this.state.styles;\n\n    styles[0] = {\n      top: Math.min(e.offsetY, 360),\n    };\n\n    this.setState({\n      styles,\n    });\n  };\n\n  bin = [];\n  for (let i = 0; i < opts.bin.length; i++) {\n    for (let j = 0; j < opts.rows; j++) {\n      bin.push(\n        <Catchable\n          className={opts.bin[i].className}\n          message={opts.bin[i].message}\n          style={{\n            top: 400 * (j + .4) / opts.rows,\n          }}\n        />\n      );\n    }\n  }\n\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id={opts.id}\n    >\n      <MediaCollection\n        play={_.get(props, 'data.reveal.open')}\n        children={opts.vos}\n      />\n      <MediaCollection\n        play={_.get(props, 'data.sfx.playing')}\n        children={opts.sfx}\n        onPlay={onPlaySFX}\n      />\n      <skoash.Component className=\"bottom\">\n        <div className=\"level\">\n          {opts.level}\n        </div>\n        <Score\n          className=\"mr-eco-score\"\n          max={100}\n          increment={10}\n          correct={_.get(props, 'data.score.correct', 0)}\n          incorrect={_.get(props, 'data.score.incorrect', 0)}\n          onComplete={onScoreComplete}\n        >\n          <div />\n        </Score>\n        <Score\n          className=\"litter-bug-score\"\n          max={100}\n          increment={10}\n          correct={_.get(props, 'data.score.litter', 0)}\n          complete={_.get(props, 'data.game.complete', false)}\n          onComplete={onTimerComplete}\n        >\n          <div />\n        </Score>\n        <Timer\n          countDown\n          timeout={opts.timeout}\n          getTime={getTime}\n          stop={_.get(props, 'data.game.complete', false)}\n          complete={_.get(props, 'data.game.complete', false)}\n          checkComplete={_.get(props, 'data.game.start', false)}\n          restart={_.get(props, 'data.game.start', false)}\n          onComplete={onTimerComplete}\n        />\n      </skoash.Component>\n      <skoash.Component className=\"main\">\n        <Dropper\n          leftBound={70}\n          rightBound={820}\n          on={_.get(props, 'data.game.start', false)}\n          start={_.get(props, 'data.game.start', false)}\n          stop={_.get(props, 'data.game.complete', false)}\n          prepClasses={['ready', 'go']}\n          prepTimeout={opts.prepTimeout}\n          onAddClassName={onAddClassName}\n          onTransitionEnd={onTransitionEnd}\n          bin={\n            <Randomizer\n              completeOnStart\n              checkComplete={false}\n              bin={bin}\n              remain\n            />\n          }\n        >\n        </Dropper>\n        <Catcher\n          completeOnStart\n          checkComplete={false}\n          start={_.get(props, 'data.game.start', false)}\n          canCatch={_.get(props, 'data.game.start', false)}\n          moveBuckets\n          onMove={onMove}\n          bucket={[\n            <skoash.Component className=\"mr-eco\" message=\"trash\" />,\n          ]}\n          catchableRefs={_.get(props, 'data.dropper.refs', [])}\n          onCorrect={onCorrectCatch}\n          onIncorrect={onIncorrectCatch}\n          assets={[\n            <skoash.Audio\n              type=\"voiceOver\"\n              ref=\"correct\"\n              src={'media/_assets/_sounds/_effects/WinPoints.mp3'}\n            />,\n            <skoash.Audio\n              type=\"voiceOver\"\n              ref=\"incorrect\"\n              src={'media/_assets/_sounds/_effects/LosePoints.mp3'}\n            />,\n          ]}\n        />\n      </skoash.Component>\n      <Reveal\n        openOnStart={opts.openOnStart}\n        openTarget=\"reveal\"\n        openReveal={_.get(props, 'data.openReveal', false)}\n        closeReveal={_.get(props, 'data.reveal.close', false)}\n        onClose={onCloseReveal}\n        onOpen={onOpenReveal}\n        list={opts.revealList}\n      />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_screen_component.js\n **/","import classNames from 'classnames';\n\nclass Cannon extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      classes: {}\n    };\n\n    this.fire = this.fire.bind(this);\n    this.reload = this.reload.bind(this);\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    var list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\n    this.setState({\n      list\n    });\n  }\n\n  start() {\n    super.start();\n    this.next();\n  }\n\n  next() {\n    var classes, list;\n    classes = this.state.classes;\n    list = this.state.list;\n    if (this.props.reverseReload) {\n      list = this.refs.bin.get(1).concat(list);\n      list.pop();\n    } else {\n      list = list.concat(this.refs.bin.get(1));\n      list.shift();\n    }\n    classes[this.state.list.length - 1] = 'LOADED';\n    this.enabled = true;\n\n    this.setState({\n      classes,\n      list\n    });\n  }\n\n  fire() {\n    this.setState({\n      fire: true,\n      reload: false\n    }, () => {\n      setTimeout(() => {\n        this.reload();\n        this.next();\n      }, this.props.reloadTime);\n    });\n\n    this.props.onFire.call(this);\n  }\n\n  reload() {\n    this.setState({\n      fire: false,\n      reload: true\n    });\n\n    this.props.onReload.call(this);\n  }\n\n  getClassNames() {\n    return classNames('cannon', {\n      FIRE: this.state.fire,\n      RELOAD: this.state.reload\n    }, super.getClassNames());\n  }\n\n  getClass(key, li) {\n    return classNames(\n      'ammo',\n      li.props.className,\n      this.state.classes[key]\n    );\n  }\n\n  renderBin() {\n    if (!this.props.bin) return null;\n\n    return (\n      <this.props.bin.type\n        {...this.props.bin.props}\n        ref=\"bin\"\n      />\n    );\n  }\n\n  renderAmmo() {\n    var list = this.state.list || this.props.list;\n    return list.map((li, key) => {\n      var ref;\n      ref = li.ref || li.props['data-ref'] || key;\n      return (\n        <li.type\n          {...li.props}\n          ref={ref}\n          data-ref={ref}\n          key={key}\n          className={this.getClass(key, li)}\n        />\n      );\n    });\n  }\n\n  renderLaunchButton() {\n    if (!this.props.launchButton) return;\n\n    return (\n      <div className=\"launch-button\" onClick={this.fire} />\n    );\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        {this.renderBin()}\n        <div className=\"ammo-container\" />\n        {this.renderAmmo()}\n        {this.renderLaunchButton()}\n      </div>\n    );\n  }\n}\n\nCannon.defaultProps = _.defaults({\n  showNum: 3,\n  reverseReload: false,\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  onReload: _.noop,\n  onFire: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default Cannon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/cannon/0.2.js\n **/","import classNames from 'classnames';\nimport shortid from 'shortid';\n\nimport Selectable from 'shared/components/selectable/0.1';\n\nclass Carousel extends Selectable {\n  constructor() {\n    super();\n\n    this.next = this.next.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    super.componentWillReceiveProps(nextProps);\n\n    if (nextProps.selected && nextProps.selected !== this.props.selected) {\n      this.select();\n    }\n  }\n\n  start() {\n    super.start();\n    this.next();\n  }\n\n  next() {\n    var classes, list;\n    classes = this.state.classes;\n    list = this.state.list;\n    list = list.concat(this.refs.bin.get(1));\n    list.shift();\n    classes[0] = '';\n    this.enabled = true;\n\n    this.setState({\n      classes,\n      list,\n    }, () => {\n      setTimeout(() => {\n        classes[0] = 'LEAVE';\n        this.setState({\n          classes,\n        });\n      }, this.props.pause);\n    });\n  }\n\n  bootstrap() {\n    var list;\n    // skoash.Component is not the super here, but this is what we want\n    skoash.Component.prototype.bootstrap.call(this);\n\n    list = this.refs.bin ? this.refs.bin.get(this.props.showNum + 1) : this.props.list;\n\n    this.setState({\n      list\n    });\n  }\n\n  selectHelper() {\n    if (!this.enabled) return;\n\n    if (this.props.dataTarget) {\n      this.updateGameState({\n        path: this.props.dataTarget,\n        data: {\n          target: this.state.list[this.props.targetIndex]\n        }\n      });\n    }\n\n    this.enabled = false;\n\n    this.props.onSelect.call(this, this.state.list[this.props.targetIndex]);\n  }\n\n  getClassNames() {\n    return classNames('carousel', super.getClassNames());\n  }\n\n  /*\n   * shortid is intentionally not used for key here because we want to make sure\n   * that the element is transitioned and not replaced.\n   */\n  renderList() {\n    var list = this.state.list || this.props.list;\n    return list.map((li, key) => {\n      var ref, onTransitionEnd;\n      ref = li.ref || li.props['data-ref'] || key;\n      onTransitionEnd = key === 0 ? this.next : null;\n      return (\n        <li.type\n          {...li.props}\n          className={this.getClass(key, li)}\n          data-ref={ref}\n          data-message={li.props.message}\n          onTransitionEnd={onTransitionEnd}\n          ref={ref}\n          key={key}\n          data-key={shortid(key)}\n        />\n      );\n    });\n  }\n\n  render() {\n    var onClick = this.props.clickable ? this.state.selectFunction.bind(this) : null;\n    return (\n      <div>\n        {this.renderBin()}\n        <div className={this.getClassNames()} onClick={onClick}>\n          {this.renderList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nCarousel.defaultProps = _.defaults({\n  showNum: 3,\n  targetIndex: 1,\n  pause: 500,\n  clickable: false,\n  onSelect: _.noop,\n}, Selectable.defaultProps);\n\nexport default Carousel;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/carousel/0.1.js\n **/","import classNames from 'classnames';\n\nclass Catchable extends skoash.Component {\n  constructor() {\n    super();\n    this.state = {\n      canCatch: true\n    };\n    this.reset = this.reset.bind(this);\n  }\n\n  complete() {\n    setTimeout(() => {\n      this.setState({\n        complete: true,\n      }, () => {\n        skoash.trigger('complete');\n        this.props.onComplete.call(this, this);\n      });\n    }, this.props.completeDelay);\n  }\n\n  bootstrap() {\n    super.bootstrap();\n    this.DOMNode = ReactDOM.findDOMNode(this);\n  }\n\n  markCaught() {\n    if (!this.state.ready) return;\n    this.setState({canCatch: false});\n    this.props.onCaught.call(this);\n  }\n\n  canCatch() {\n    return !this.props.disabled && this.state.canCatch;\n  }\n\n  getClassNames() {\n    return classNames('catchable', {\n      CAUGHT: !this.state.canCatch\n    }, super.getClassNames());\n  }\n\n  reset() {\n    if (this.state.ready && !this.props.disabled && this.props.reCatchable) {\n      this.setState({canCatch: true});\n    }\n  }\n\n  render() {\n    return (\n      <li {...this.props} className={this.getClassNames()} />\n    );\n  }\n}\n\nCatchable.defaultProps = _.defaults({\n  disabled: false,\n  isCorrect: true,\n  reCatchable: true,\n  onCaught: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default Catchable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/catchable/0.1.js\n **/","import _ from 'lodash';\nimport ClassNames from 'classnames';\n\nexport default class RevealPrompt extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      openReveal: '',\n    };\n\n    this.index = 0;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    super.componentWillReceiveProps(nextProps);\n\n    if (nextProps.openReveal != null && nextProps.openReveal !== this.props.openReveal) {\n      this.open(nextProps.openReveal);\n    }\n\n    if (nextProps.closeReveal === true && nextProps.closeReveal !== this.props.closeReveal) {\n      this.close();\n    }\n  }\n\n  start() {\n    super.start();\n\n    if (this.props.openOnStart) {\n      this.open(this.props.openOnStart);\n    } else {\n      this.close();\n    }\n  }\n\n  open(message) {\n    var self = this;\n    self.setState({\n      open: true,\n      openReveal: '' + message,\n    });\n\n    self.props.onOpen.call(self, message);\n\n    if (self.props.completeOnOpen) {\n      self.complete();\n    } else {\n      self.requireForComplete.map(key => {\n        if (key === message && self.refs[key]) {\n          self.refs[key].complete();\n        }\n      });\n    }\n\n    if (self.props.autoClose) {\n      setTimeout(function () {\n        self.close();\n      }, 2000);\n    }\n  }\n\n  close() {\n    var prevMessage = this.state.openReveal;\n\n    this.props.onClose.call(this, prevMessage);\n\n    this.setState({\n      open: false,\n      openReveal: '',\n    });\n  }\n\n  renderList() {\n    return this.props.list.map((li, key) => {\n      var ref = li.ref == null ? key : li.ref;\n      return (\n        <li.type\n          {...li.props}\n          type=\"li\"\n          className={this.getClass(li, key)}\n          data-ref={ref}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  getClass(li, key) {\n    return ClassNames(\n      {\n        [li.props.className]: li.props.className,\n        OPEN: this.state.openReveal.indexOf(key) !== -1 || this.state.openReveal.indexOf(li.props['data-ref']) !== -1\n      }\n    );\n  }\n\n  getClassNames() {\n    return ClassNames(\n      super.getClassNames(),\n      'reveal',\n      {\n        ['open-' + this.state.openReveal]: this.state.openReveal,\n        'open-none': !this.state.openReveal\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        <div>\n          <ul>\n            {this.renderList()}\n          </ul>\n          <button className=\"close-reveal\" onClick={this.close.bind(this)}></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nRevealPrompt.defaultProps = _.defaults({\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  onOpen: _.identity,\n  onClose: _.identity,\n}, skoash.Component.defaultProps);\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/reveal_prompt/0.1.js\n **/","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/alphabet.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.14.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return baseFindIndex(array, baseIsNaN, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = context.Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Built-in method references that are mockable. */\n    var clearTimeout = function(id) { return context.clearTimeout.call(root, id); },\n        setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(context.Object, 'create');\n\n    /* Used to set `toString` methods. */\n    var defineProperty = (function() {\n      var func = getNative(context.Object, 'defineProperty'),\n          name = getNative.name;\n\n      return (name && name.length > 2) ? func : undefined;\n    }());\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          return this;\n        }\n        cache = this.__data__ = new MapCache(pairs);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      var index = length;\n      while (index--) {\n        var key = props[index],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined &&\n            !(key in Object(object))) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    var baseKeys = overArg(nativeKeys, Object);\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return baseRest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return baseRest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    var getPrototype = overArg(nativeGetPrototype, Object);\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length,\n          lastIndex = length - 1;\n\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return defineProperty(wrapper, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n      });\n    };\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return baseFindIndex(array, baseIsNaN, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = baseRest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = baseRest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = baseRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = baseRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`\n     * and is equivalent to `_.matches` when `source` is partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = baseRest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = baseRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = baseRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = baseRest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function supports comparing the same values as\n     * `_.isEqual` is equivalent to `_.isMatch` with `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lodash.js\n ** module id = 12\n ** module chunks = 0\n **/","import CatchGameScreenComponent from './catch_game_screen_component';\n\nexport default function (props, ref, key) {\n  return CatchGameScreenComponent(props, ref, key, {\n    id: 'catch-game-level-one',\n    level: 1,\n    rows: 3,\n    timeout: 120000,\n    prepTimeout: 1000,\n    openOnStart: 'instructions',\n    bin: [\n      {\n        className: 'mushroom',\n        message: ''\n      },\n      {\n        className: 'banana',\n        message: 'trash'\n      },\n      {\n        className: 'paper',\n        message: 'trash'\n      },\n      {\n        className: 'dog',\n        message: ''\n      },\n      {\n        className: 'battery',\n        message: 'trash'\n      },\n      {\n        className: 'duck',\n        message: ''\n      },\n      {\n        className: 'squirrel',\n        message: ''\n      },\n      {\n        className: 'tire',\n        message: 'trash'\n      },\n      {\n        className: 'blue-flower',\n        message: ''\n      },\n      {\n        className: 'yellow-flower',\n        message: ''\n      },\n      {\n        className: 'red-flower',\n        message: ''\n      },\n      {\n        className: 'purple-flower',\n        message: ''\n      },\n      {\n        className: 'glass',\n        message: 'trash'\n      },\n      {\n        className: 'plastic',\n        message: 'trash'\n      },\n    ],\n    vos: [\n      <skoash.MediaSequence\n        ref=\"instructions\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/Instructions.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/PickUpLitter.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"level-up\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_effects/LevelUp.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/Congratulations.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"try-again\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_effects/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/YouDidntWin.mp3'}\n        />\n      </skoash.MediaSequence>,\n    ],\n    sfx: [\n      <skoash.Audio\n        type=\"sfx\"\n        ref=\"miss\"\n        src={'media/_assets/_sounds/_effects/LosePoints.mp3'}\n        complete\n      />,\n    ],\n    revealList: [\n      <skoash.Component\n        ref=\"instructions\"\n        className=\"instructions\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"instructions\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"level-up\"\n        className=\"level-up\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"congratulations\" />\n          <div className=\"level-up\" />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"try-again\"\n        className=\"try-again\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"try-again\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n    ]\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_level_one_screen.js\n **/","import classNames from 'classnames';\nimport CatchGameScreenComponent from './catch_game_screen_component';\n\nexport default function (props, ref, key) {\n  return CatchGameScreenComponent(props, ref, key, {\n    id: 'catch-game-level-three',\n    level: 3,\n    rows: 5,\n    timeout: 120000,\n    prepTimeout: 400,\n    bin: [\n      {\n        className: 'mushroom',\n        message: ''\n      },\n      {\n        className: 'banana',\n        message: 'trash'\n      },\n      {\n        className: 'paper',\n        message: 'trash'\n      },\n      {\n        className: 'dog',\n        message: ''\n      },\n      {\n        className: 'battery',\n        message: 'trash'\n      },\n      {\n        className: 'duck',\n        message: ''\n      },\n      {\n        className: 'squirrel',\n        message: ''\n      },\n      {\n        className: 'tire',\n        message: 'trash'\n      },\n      {\n        className: 'blue-flower',\n        message: ''\n      },\n      {\n        className: 'yellow-flower',\n        message: ''\n      },\n      {\n        className: 'red-flower',\n        message: ''\n      },\n      {\n        className: 'purple-flower',\n        message: ''\n      },\n      {\n        className: 'glass',\n        message: 'trash'\n      },\n      {\n        className: 'plastic',\n        message: 'trash'\n      },\n    ],\n    vos: [\n      <skoash.MediaSequence\n        ref=\"level-up\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_effects/WinTheGame1.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/YouveWon.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/YouvePickedUp.mp3'}\n        />\n        <skoash.Audio\n          type=\"sfx\"\n          playTarget=\"fall\"\n          src={'media/_assets/_sounds/_effects/Litterbugfall.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"try-again\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_effects/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/YouDidntWin.mp3'}\n        />\n      </skoash.MediaSequence>,\n    ],\n    sfx: [\n      <skoash.Audio\n        type=\"sfx\"\n        ref=\"miss\"\n        src={'media/_assets/_sounds/_effects/LosePoints.mp3'}\n        complete\n      />,\n    ],\n    revealList: [\n      <skoash.Component\n        ref=\"level-up\"\n        className={classNames('level-up', 'youve-won', {\n          fall: _.get(props, 'data.fall.playing')\n        })}\n        type=\"li\"\n      >\n        <skoash.Image\n          className=\"hidden\"\n          src={'media/_assets/_images/litterbug_.png'}\n        />\n        <div>\n          <div className=\"congratulations\" />\n          <div className=\"level-up\" />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"try-again\"\n        className=\"try-again\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"try-again\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n    ]\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_level_three_screen.js\n **/","import CatchGameScreenComponent from './catch_game_screen_component';\n\nexport default function (props, ref, key) {\n  return CatchGameScreenComponent(props, ref, key, {\n    id: 'catch-game-level-two',\n    level: 2,\n    rows: 4,\n    timeout: 120000,\n    prepTimeout: 500,\n    bin: [\n      {\n        className: 'mushroom',\n        message: ''\n      },\n      {\n        className: 'banana',\n        message: 'trash'\n      },\n      {\n        className: 'paper',\n        message: 'trash'\n      },\n      {\n        className: 'dog',\n        message: ''\n      },\n      {\n        className: 'battery',\n        message: 'trash'\n      },\n      {\n        className: 'duck',\n        message: ''\n      },\n      {\n        className: 'squirrel',\n        message: ''\n      },\n      {\n        className: 'tire',\n        message: 'trash'\n      },\n      {\n        className: 'blue-flower',\n        message: ''\n      },\n      {\n        className: 'yellow-flower',\n        message: ''\n      },\n      {\n        className: 'red-flower',\n        message: ''\n      },\n      {\n        className: 'purple-flower',\n        message: ''\n      },\n      {\n        className: 'glass',\n        message: 'trash'\n      },\n      {\n        className: 'plastic',\n        message: 'trash'\n      },\n    ],\n    vos: [\n      <skoash.MediaSequence\n        ref=\"level-up\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_effects/LevelUp.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          src={'media/_assets/_sounds/_vos/Congratulations.mp3'}\n        />\n      </skoash.MediaSequence>,\n      <skoash.MediaSequence\n        ref=\"try-again\"\n        silentOnStart\n      >\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_effects/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/TryAgain.mp3'}\n        />\n        <skoash.Audio\n          type=\"voiceOver\"\n          complete\n          src={'media/_assets/_sounds/_vos/YouDidntWin.mp3'}\n        />\n      </skoash.MediaSequence>,\n    ],\n    sfx: [\n      <skoash.Audio\n        type=\"sfx\"\n        ref=\"miss\"\n        src={'media/_assets/_sounds/_effects/LosePoints.mp3'}\n        complete\n      />,\n    ],\n    revealList: [\n      <skoash.Component\n        ref=\"level-up\"\n        className=\"level-up\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"congratulations\" />\n          <div className=\"level-up\" />\n        </div>\n      </skoash.Component>,\n      <skoash.Component\n        ref=\"try-again\"\n        className=\"try-again\"\n        type=\"li\"\n      >\n        <div>\n          <div className=\"try-again\" />\n          <div className=\"words\" />\n          <button\n            onClick={function () {\n              skoash.trigger('updateState', {\n                path: 'reveal',\n                data: {\n                  close: true,\n                }\n              });\n            }}\n          />\n        </div>\n      </skoash.Component>,\n    ]\n  });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/catch_game_level_two_screen.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\nimport RevealPrompt from 'shared/components/reveal_prompt/0.1';\nimport Carousel from 'shared/components/carousel/0.1';\nimport Cannon from 'shared/components/cannon/0.2';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Timer from 'shared/components/timer/0.1';\nimport Score from 'shared/components/score/0.1';\n\nconst CONFIG = {\n  LVL: 1,\n  POINTS: 100,\n  TIMER: 30000,\n};\n\nexport default function (props, ref, key) {\n  var getTime = function () {\n    var timeLeft, minutesLeft, secondsLeft;\n    timeLeft = this.props.timeout / 1000 - this.state.time;\n    minutesLeft = Math.floor(timeLeft / 60);\n    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n    secondsLeft = timeLeft % 60;\n    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n    return `${minutesLeft}:${secondsLeft}`;\n  };\n\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"clean-up-game-lvl-1\"\n    >\n      <skoash.MediaSequence ref=\"instructions\">\n        <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Instructions.mp3\" />\n        <skoash.Audio ref=\"vo-2\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/TossLitter.mp3\" />\n        <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Get100.mp3\" />\n      </skoash.MediaSequence>\n\n      <MediaCollection\n        play={_.get(props, 'data.reveal.play', null)}\n        onPlay={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: null\n            }\n          });\n\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              open: null\n            }\n          });\n        }}\n      >\n        <skoash.MediaSequence ref=\"complete\" silentOnStart>\n          <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Level1.mp3\" />\n          <skoash.Audio ref=\"vo-2\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Wow.mp3\" />\n          <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/YouHaveGreat.mp3\" />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"try-again\" silentOnStart complete>\n          <skoash.Audio ref=\"vo-4\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LevelLost.mp3\" complete />\n          <skoash.Audio ref=\"vo-5\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/OhNo.mp3\" complete />\n          <skoash.Audio ref=\"vo-6\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkStill.mp3\" complete />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"throw\" silentOnStart>\n          <skoash.Audio ref=\"vo-7\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/FastSwish.mp3\" />\n          <skoash.Audio ref=\"vo-8\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/WinPoints.mp3\" />\n        </skoash.MediaSequence>\n      </MediaCollection>\n\n      <RevealPrompt\n        ref=\"reveal\"\n        openOnStart=\"instructions\"\n        openReveal={_.get(props, 'data.reveal.open', null)}\n        onOpen={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              stop: true,\n              start: false,\n            },\n          });\n        }}\n        onClose={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              stop: false,\n              start: true,\n            },\n          });\n        }}\n        list={[\n          <skoash.Component data-ref=\"instructions\">\n            <skoash.Component className=\"frame instructions-lvl-1\">\n              <div className=\"banner\" />\n              <span>\n                Toss the litter in the cans to<br />clean up by clicking, aiming,<br />and letting go!\n              </span>\n              <span>\n                Get\n              </span>\n              <div className=\"hundred\" />\n              <span>\n                points before the time\n              </span>\n              <span>\n                runs out to win!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"complete\">\n            <skoash.Component className=\"frame complete-lvl-1\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                You have some great cleaning skills!<br />Keep up the good work!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"try-again\">\n            <skoash.Component className=\"frame\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                The park is still covered with trash<br />but you still have a chance to clean<br />and beat the Litterbug!\n              </span>\n            </skoash.Component>\n          </skoash.Component>\n        ]}\n      />\n\n      <Carousel\n        ref=\"carousel\"\n        completeOnStart={true}\n        checkComplete={false}\n        showNum={5}\n        targetIndex={2}\n        selected={_.get(props, 'data.cannon.fire')}\n        onSelect={function (target) {\n          var score = _.get(props, 'data.score.points', 0);\n          var classes = this.state.classes;\n          classes[target.props['data-key']] = 'SELECTED';\n\n          this.setState({\n            classes\n          }, () => {\n            setTimeout(() => {\n              classes[target.props['data-key']] = '';\n            }, 1000);\n          });\n\n          if (score < CONFIG.POINTS) score += target.props.value;\n\n          this.updateGameState({\n            path: 'score',\n            data: {\n              points: score\n            }\n          });\n\n          if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                open: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                play: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"five\" name=\"five\" value={5} complete />,\n              <skoash.Component className=\"ten\" name=\"ten\" value={10} complete />,\n              <skoash.Component className=\"twenty\" name=\"twenty\" value={20} complete />,\n              <skoash.Component className=\"thirty\" name=\"thirty\" value={30} complete />,\n            ]}\n          />\n        }\n      />\n\n      <Cannon\n        ref=\"cannon\"\n        completeOnStart={true}\n        checkComplete={false}\n        reverseReload={true}\n        launchButton={true}\n        reloadTime={2000}\n        showNum={4}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"plastic-bottle\" complete />,\n              <skoash.Component className=\"soda-can\" complete />,\n              <skoash.Component className=\"banana-peal\" complete />,\n              <skoash.Component className=\"glass-bottle\" complete />,\n              <skoash.Component className=\"crumbled-paper\" complete />,\n              <skoash.Component className=\"tuna-can\" complete />,\n              <skoash.Component className=\"tire\" complete />,\n              <skoash.Component className=\"battery\" complete/>,\n            ]}\n          />\n        }\n        onFire={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: 'throw'\n            }\n          });\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: false\n            }\n          });\n        }}\n        onReload={function () {\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: true\n            }\n          });\n        }}\n      />\n\n      <skoash.Component className=\"grass\">\n        <skoash.Component className=\"stats\">\n          <span className=\"level\">\n            {CONFIG.LVL}\n          </span>\n\n          <Timer\n            ref=\"timer\"\n            countDown={true}\n            timeout={CONFIG.TIMER}\n            getTime={getTime}\n            stop={_.get(props, 'data.game.complete', false)}\n            complete={_.get(props, 'data.game.complete', false)}\n            checkComplete={_.get(props, 'data.game.start', false)}\n            restart={_.get(props, 'data.game.start', false)}\n            onComplete={function () {\n              if (_.get(props, 'data.reveal.open')) return;\n              if (_.get(props, 'data.score.points', 0) < CONFIG.POINTS) {\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    open: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    play: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'score',\n                  data: {\n                    points: 0\n                  }\n                });\n              }\n            }}\n          />\n\n          <Score\n            ref=\"score\"\n            max={CONFIG.POINTS}\n            correct={_.get(props, 'data.score.points', 0)}\n            checkComplete={false}\n            complete={_.get(props, 'data.score.points', 0) === CONFIG.POINTS}\n          />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/clean_up_game_lvl1_screen.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\nimport RevealPrompt from 'shared/components/reveal_prompt/0.1';\nimport Carousel from 'shared/components/carousel/0.1';\nimport Cannon from 'shared/components/cannon/0.2';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Timer from 'shared/components/timer/0.1';\nimport Score from 'shared/components/score/0.1';\n\nconst CONFIG = {\n  LVL: 2,\n  POINTS: 150,\n  TIMER: 45000,\n};\n\nexport default function (props, ref, key) {\n  var getTime = function () {\n    var timeLeft, minutesLeft, secondsLeft;\n    timeLeft = this.props.timeout / 1000 - this.state.time;\n    minutesLeft = Math.floor(timeLeft / 60);\n    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n    secondsLeft = timeLeft % 60;\n    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n    return `${minutesLeft}:${secondsLeft}`;\n  };\n\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"clean-up-game-lvl-2\"\n    >\n      <skoash.MediaSequence ref=\"instructions\">\n        <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Instructions.mp3\" />\n        <skoash.Audio ref=\"vo-2\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/TossLitter.mp3\" />\n        <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Get150.mp3\" />\n      </skoash.MediaSequence>\n\n      <MediaCollection\n        play={_.get(props, 'data.reveal.play', null)}\n        onPlay={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: null\n            }\n          });\n\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              open: null\n            }\n          });\n        }}\n      >\n        <skoash.MediaSequence ref=\"complete\" silentOnStart>\n          <skoash.Audio ref=\"vo-4\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Level2.mp3\" />\n          <skoash.Audio ref=\"vo-5\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/AmazingJob.mp3\" />\n          <skoash.Audio ref=\"vo-6\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThankYouCaring.mp3\" />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"try-again\" silentOnStart complete>\n          <skoash.Audio ref=\"vo-7\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LevelLost.mp3\" complete />\n          <skoash.Audio ref=\"vo-8\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/OhNo.mp3\" complete />\n          <skoash.Audio ref=\"vo-9\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkStill.mp3\" complete />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"throw\" silentOnStart>\n          <skoash.Audio ref=\"vo-10\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/FastSwish.mp3\" />\n          <skoash.Audio ref=\"vo-11\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/WinPoints.mp3\" />\n        </skoash.MediaSequence>\n      </MediaCollection>\n\n      <RevealPrompt\n        ref=\"reveal\"\n        openOnStart=\"instructions\"\n        openReveal={_.get(props, 'data.reveal.open', null)}\n        onOpen={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              stop: true,\n              start: false,\n            },\n          });\n        }}\n        onClose={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              stop: false,\n              start: true,\n            },\n          });\n        }}\n        list={[\n          <skoash.Component data-ref=\"instructions\">\n            <skoash.Component className=\"frame instructions-lvl-2\">\n              <div className=\"banner\" />\n              <span>\n                Toss the litter in the cans to<br />clean up by clicking, aiming,<br />and letting go!\n              </span>\n              <span>\n                Get\n              </span>\n              <div className=\"hundred\" />\n              <span>\n                points before the time\n              </span>\n              <span>\n                runs out to win!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"complete\">\n            <skoash.Component className=\"frame complete-lvl-2\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                Thank you for caring so much<br />about the environment!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"try-again\">\n            <skoash.Component className=\"frame\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                The park is still covered with trash<br />but you still have a chance to clean<br />and beat the Litterbug!\n              </span>\n            </skoash.Component>\n          </skoash.Component>\n        ]}\n      />\n\n      <Carousel\n        ref=\"carousel\"\n        completeOnStart={true}\n        checkComplete={false}\n        showNum={5}\n        targetIndex={2}\n        selected={_.get(props, 'data.cannon.fire')}\n        onSelect={function (target) {\n          var score = _.get(props, 'data.score.points', 0);\n          var classes = this.state.classes;\n          classes[target.props['data-key']] = 'SELECTED';\n\n          this.setState({\n            classes\n          }, () => {\n            setTimeout(() => {\n              classes[target.props['data-key']] = '';\n            }, 1000);\n          });\n\n          if (score < CONFIG.POINTS) score += target.props.value;\n\n          this.updateGameState({\n            path: 'score',\n            data: {\n              points: score\n            }\n          });\n\n          if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                open: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                play: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"five\" name=\"five\" value={5} complete />,\n              <skoash.Component className=\"ten\" name=\"ten\" value={10} complete />,\n              <skoash.Component className=\"twenty\" name=\"twenty\" value={20} complete />,\n              <skoash.Component className=\"thirty\" name=\"thirty\" value={30} complete />,\n            ]}\n          />\n        }\n      />\n\n      <Cannon\n        ref=\"cannon\"\n        completeOnStart={true}\n        checkComplete={false}\n        reverseReload={true}\n        launchButton={true}\n        reloadTime={2000}\n        showNum={4}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"plastic-bottle\" complete />,\n              <skoash.Component className=\"soda-can\" complete />,\n              <skoash.Component className=\"banana-peal\" complete />,\n              <skoash.Component className=\"glass-bottle\" complete />,\n              <skoash.Component className=\"crumbled-paper\" complete />,\n              <skoash.Component className=\"tuna-can\" complete />,\n              <skoash.Component className=\"tire\" complete />,\n              <skoash.Component className=\"battery\" complete/>,\n            ]}\n          />\n        }\n        onFire={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: 'throw'\n            }\n          });\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: false\n            }\n          });\n        }}\n        onReload={function () {\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: true\n            }\n          });\n        }}\n      />\n\n      <skoash.Component className=\"grass\">\n        <skoash.Component className=\"stats\">\n          <span className=\"level\">\n            {CONFIG.LVL}\n          </span>\n\n          <Timer\n            ref=\"timer\"\n            countDown={true}\n            timeout={CONFIG.TIMER}\n            getTime={getTime}\n            stop={_.get(props, 'data.game.complete', false)}\n            complete={_.get(props, 'data.game.complete', false)}\n            checkComplete={_.get(props, 'data.game.start', false)}\n            restart={_.get(props, 'data.game.start', false)}\n            onComplete={function () {\n              if (_.get(props, 'data.reveal.open')) return;\n              if (_.get(props, 'data.score.points', 0) < CONFIG.POINTS) {\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    open: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    play: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'score',\n                  data: {\n                    points: 0\n                  }\n                });\n              }\n            }}\n          />\n\n          <Score\n            ref=\"score\"\n            max={CONFIG.POINTS}\n            correct={_.get(props, 'data.score.points', 0)}\n            checkComplete={false}\n            complete={_.get(props, 'data.score.points', 0) === CONFIG.POINTS}\n          />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/clean_up_game_lvl2_screen.js\n **/","import MediaCollection from 'shared/components/media_collection/0.1';\nimport RevealPrompt from 'shared/components/reveal_prompt/0.1';\nimport Carousel from 'shared/components/carousel/0.1';\nimport Cannon from 'shared/components/cannon/0.2';\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Timer from 'shared/components/timer/0.1';\nimport Score from 'shared/components/score/0.1';\n\nconst CONFIG = {\n  LVL: 3,\n  POINTS: 200,\n  TIMER: 60000,\n};\n\nexport default function (props, ref, key) {\n  var getTime = function () {\n    var timeLeft, minutesLeft, secondsLeft;\n    timeLeft = this.props.timeout / 1000 - this.state.time;\n    minutesLeft = Math.floor(timeLeft / 60);\n    minutesLeft = minutesLeft < 10 ? '0' + minutesLeft : minutesLeft;\n    secondsLeft = timeLeft % 60;\n    secondsLeft = secondsLeft < 10 ? '0' + secondsLeft : secondsLeft;\n    return `${minutesLeft}:${secondsLeft}`;\n  };\n\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"clean-up-game-lvl-3\"\n    >\n      <skoash.MediaSequence ref=\"instructions\">\n        <skoash.Audio ref=\"vo-1\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Instructions.mp3\" />\n        <skoash.Audio ref=\"vo-2\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/TossLitter.mp3\" />\n        <skoash.Audio ref=\"vo-3\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Get200.mp3\" />\n      </skoash.MediaSequence>\n\n      <MediaCollection\n        play={_.get(props, 'data.reveal.play', null)}\n        onPlay={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: null\n            }\n          });\n\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              open: null\n            }\n          });\n        }}\n      >\n        <skoash.MediaSequence ref=\"complete\" silentOnStart>\n          <skoash.Audio ref=\"vo-4\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Level3.mp3\" />\n          <skoash.Audio ref=\"vo-5\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkClean.mp3\" />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"try-again\" silentOnStart complete>\n          <skoash.Audio ref=\"vo-6\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LevelLost.mp3\" complete />\n          <skoash.Audio ref=\"vo-7\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/OhNo.mp3\" complete />\n          <skoash.Audio ref=\"vo-8\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ParkStill.mp3\" complete />\n        </skoash.MediaSequence>\n        <skoash.MediaSequence ref=\"throw\" silentOnStart>\n          <skoash.Audio ref=\"vo-9\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/FastSwish.mp3\" />\n          <skoash.Audio ref=\"vo-10\" type=\"voiceOver\" src=\"media/_assets/_sounds/_effects/WinPoints.mp3\" />\n        </skoash.MediaSequence>\n      </MediaCollection>\n\n      <RevealPrompt\n        ref=\"reveal\"\n        openOnStart=\"instructions\"\n        openReveal={_.get(props, 'data.reveal.open', null)}\n        onOpen={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              stop: true,\n              start: false,\n            },\n          });\n        }}\n        onClose={function () {\n          this.updateGameState({\n            path: 'game',\n            data: {\n              stop: false,\n              start: true,\n            },\n          });\n        }}\n        list={[\n          <skoash.Component data-ref=\"instructions\">\n            <skoash.Component className=\"frame instructions-lvl-3\">\n              <div className=\"banner\" />\n              <span>\n                Toss the litter in the cans to<br />clean up by clicking, aiming,<br />and letting go!\n              </span>\n              <span>\n                Get\n              </span>\n              <div className=\"hundred\" />\n              <span>\n                points before the time\n              </span>\n              <span>\n                runs out to win!\n              </span>\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"complete\">\n            <skoash.Component className=\"frame complete-lvl-3\">\n              <div className=\"banner\" />\n              <span>\n                The park is now clean<br />You are an\n              </span>\n              <div className=\"banner-2\" />\n            </skoash.Component>\n          </skoash.Component>,\n          <skoash.Component data-ref=\"try-again\">\n            <skoash.Component className=\"frame\">\n              <div className=\"banner\" />\n              <div className=\"banner-2\" />\n              <span>\n                The park is still covered with trash<br />but you still have a chance to clean<br />and beat the Litterbug!\n              </span>\n            </skoash.Component>\n          </skoash.Component>\n        ]}\n      />\n\n      <Carousel\n        ref=\"carousel\"\n        completeOnStart={true}\n        checkComplete={false}\n        showNum={5}\n        targetIndex={2}\n        selected={_.get(props, 'data.cannon.fire')}\n        onSelect={function (target) {\n          var score = _.get(props, 'data.score.points', 0);\n          var classes = this.state.classes;\n          classes[target.props['data-key']] = 'SELECTED';\n\n          this.setState({\n            classes\n          }, () => {\n            setTimeout(() => {\n              classes[target.props['data-key']] = '';\n            }, 1000);\n          });\n\n          if (score < CONFIG.POINTS) score += target.props.value;\n\n          this.updateGameState({\n            path: 'score',\n            data: {\n              points: score\n            }\n          });\n\n          if (score >= CONFIG.POINTS & !_.get(props, 'data.game.complete')) {\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                open: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'reveal',\n              data: {\n                play: 'complete'\n              }\n            });\n\n            this.updateGameState({\n              path: 'game',\n              data: {\n                complete: true\n              }\n            });\n          }\n        }}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"five\" name=\"five\" value={5} complete />,\n              <skoash.Component className=\"ten\" name=\"ten\" value={10} complete />,\n              <skoash.Component className=\"twenty\" name=\"twenty\" value={20} complete />,\n              <skoash.Component className=\"thirty\" name=\"thirty\" value={30} complete />,\n            ]}\n          />\n        }\n      />\n\n      <Cannon\n        ref=\"cannon\"\n        completeOnStart={true}\n        checkComplete={false}\n        reverseReload={true}\n        launchButton={true}\n        reloadTime={2000}\n        showNum={4}\n        bin={\n          <Randomizer\n            ref=\"randomizer\"\n            completeOnStart={true}\n            checkComplete={false}\n            bin={[\n              <skoash.Component className=\"plastic-bottle\" complete />,\n              <skoash.Component className=\"soda-can\" complete />,\n              <skoash.Component className=\"banana-peal\" complete />,\n              <skoash.Component className=\"glass-bottle\" complete />,\n              <skoash.Component className=\"crumbled-paper\" complete />,\n              <skoash.Component className=\"tuna-can\" complete />,\n              <skoash.Component className=\"tire\" complete />,\n              <skoash.Component className=\"battery\" complete/>,\n            ]}\n          />\n        }\n        onFire={function () {\n          this.updateGameState({\n            path: 'reveal',\n            data: {\n              play: 'throw'\n            }\n          });\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: false\n            }\n          });\n        }}\n        onReload={function () {\n          this.updateGameState({\n            path: 'cannon',\n            data: {\n              fire: true\n            }\n          });\n        }}\n      />\n\n      <skoash.Component className=\"grass\">\n        <skoash.Component className=\"stats\">\n          <span className=\"level\">\n            {CONFIG.LVL}\n          </span>\n\n          <Timer\n            ref=\"timer\"\n            countDown={true}\n            timeout={CONFIG.TIMER}\n            getTime={getTime}\n            stop={_.get(props, 'data.game.complete', false)}\n            complete={_.get(props, 'data.game.complete', false)}\n            checkComplete={_.get(props, 'data.game.start', false)}\n            restart={_.get(props, 'data.game.start', false)}\n            onComplete={function () {\n              if (_.get(props, 'data.reveal.open')) return;\n              if (_.get(props, 'data.score.points', 0) < CONFIG.POINTS) {\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    open: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'reveal',\n                  data: {\n                    play: 'try-again'\n                  }\n                });\n\n                this.updateGameState({\n                  path: 'score',\n                  data: {\n                    points: 0\n                  }\n                });\n              }\n            }}\n          />\n\n          <Score\n            ref=\"score\"\n            max={CONFIG.POINTS}\n            correct={_.get(props, 'data.score.points', 0)}\n            checkComplete={false}\n            complete={_.get(props, 'data.score.points', 0) === CONFIG.POINTS}\n          />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/clean_up_game_lvl3_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"commit\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/IPromise.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/S_BU_1.mp3\" />\n      <div className=\"pledge\">\n        I promise to <span className=\"never\"></span> litter\n        <br /><span className=\"spacerA\"></span>and to pick up the litter\n        <br /><span className=\"spacerB\"></span>I see whenever I safely can.\n        <br /><span className=\"spacer1\"></span>I will dispose of it\n        <br /><span className=\"spacer2\"></span>in a trash can\n        <br /><span className=\"spacer3\"></span>or a recycle bin.\n      </div>\n      <div className=\"banner animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/commit_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"flip\"\n      emitOnComplete={{\n        name: 'flip',\n      }}\n    >\n      <skoash.Image className=\"hidden\" src=\"media/_assets/_sprites/sprites.mr.eco-01.png\" />\n      <skoash.Image className=\"hidden\" src=\"media/_assets/_sprites/sprites.sing.thankyou.flip-01.png\" />\n      <skoash.Audio type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/Flip.mp3\" />\n      <div className=\"words\" />\n      <div className=\"flip-container animated\">\n        <div className=\"flip\" />\n      </div>\n      <div className=\"mr-eco animated\" />\n      <skoash.Image className=\"earned\" src=\"media/_assets/_animations/LitterbugEarnedFlips.gif\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/flip_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"good-for-you\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThankYou.mp3\" />\n      <div className=\"mr-eco animated\" />\n      <div className=\"banner animated\" />\n      <div className=\"banner2 animated\" />\n\n      <skoash.Component className=\"sparkles\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/good_for_you_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"ground\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ShouldYouThrow.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/No.mp3\" />\n      <div className=\"banner animated\" />\n      <div className=\"avatar animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/ground_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"room\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThrowTrashRoom.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/No.mp3\" />\n      <div className=\"avatar animated\" />\n      <div className=\"banner animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/room_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"school\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/ThrowTrashSchool.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/No.mp3\" />\n      <div className=\"banner animated\" />\n      <div className=\"avatar animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/school_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"sing-about-it\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/LetsSing.mp3\" />\n      <div className=\"mr-eco animated\" />\n      <div className=\"banner animated\" />\n      <div className=\"dancers animated\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/sing_about_it_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"take-pledge\"\n    >\n      <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/_assets/_sounds/_vos/AntiLitterPledge.mp3\" />\n      <skoash.Audio ref=\"button\" complete type=\"sfx\" src=\"media/_assets/_sounds/_effects/S_BU_1.mp3\" />\n      <skoash.Image ref=\"bkg\" className=\"background\" src=\"media/_Frames/FR_1.png\" />\n      <div className=\"mr-eco\"></div>\n      <div className=\"banner\"></div>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/take_pledge_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"title\"\n      hidePrev\n      completeDelay={5000}\n    >\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/title_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"video\"\n    >\n      <skoash.Component ref=\"center\" className=\"center\">\n        <skoash.Component ref=\"frame\" className=\"frame\">\n          <skoash.Video ref=\"video\" src=\"https://res.cloudinary.com/changemyworldnow/video/upload/v1455037034/Litterbug-Final_jjmrg7.mp4\" />\n        </skoash.Component>\n      </skoash.Component>\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/components/video_screen.js\n **/","var config = {\n  id: 'litter-bug',\n  version: 2,\n  skoash: '1.0.4',\n  dimensions: {\n    width: 960,\n    ratio: 16 / 9\n  },\n};\n\nexport default config;\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/config.game.js\n **/","import classNames from 'classnames';\n\nimport config from './config.game';\n\nimport Loader from 'shared/components/loader/0.1';\n\nimport iOSScreen from 'shared/components/ios_splash_screen/0.1';\nimport TitleScreen from './components/title_screen';\nimport CatchGameLevelOne from './components/catch_game_level_one_screen';\nimport CatchGameLevelTwo from './components/catch_game_level_two_screen';\nimport CatchGameLevelThree from './components/catch_game_level_three_screen';\nimport CleanUpGameLvl1Screen from './components/clean_up_game_lvl1_screen';\nimport CleanUpGameLvl2Screen from './components/clean_up_game_lvl2_screen';\nimport CleanUpGameLvl3Screen from './components/clean_up_game_lvl3_screen';\nimport RoomScreen from './components/room_screen';\nimport SchoolScreen from './components/school_screen';\nimport GroundScreen from './components/ground_screen';\nimport SingAboutItScreen from './components/sing_about_it_screen';\nimport VideoScreen from './components/video_screen';\nimport GoodForYouScreen from './components/good_for_you_screen';\nimport TakePledgeScreen from './components/take_pledge_screen';\nimport CommitScreen from './components/commit_screen';\nimport FlipScreen from './components/flip_screen';\n\nimport QuitScreen from 'shared/components/quit_screen/0.1';\n\nvar LitterBug = (\n  <skoash.Game\n    config={config}\n    screens={{\n      0: iOSScreen,\n      1: TitleScreen,\n      2: CatchGameLevelOne,\n      3: CatchGameLevelTwo,\n      4: CatchGameLevelThree,\n      5: RoomScreen,\n      6: SchoolScreen,\n      7: GroundScreen,\n      8: SingAboutItScreen,\n      9: VideoScreen,\n      10: GoodForYouScreen,\n      11: CleanUpGameLvl1Screen,\n      12: CleanUpGameLvl2Screen,\n      13: CleanUpGameLvl3Screen,\n      14: TakePledgeScreen,\n      15: CommitScreen,\n      16: FlipScreen,\n    }}\n    menus={{\n      quit: QuitScreen,\n    }}\n    loader={<Loader />}\n    getBackgroundIndex={function (index, id) {\n      switch (id) {\n      case 'clean-up-game-lvl-1':\n      case 'clean-up-game-lvl-2':\n      case 'clean-up-game-lvl-3':\n        return 1;\n      default:\n        return 0;\n      }\n    }}\n    assets={[\n      <skoash.Audio ref=\"bkg-1\" type=\"background\" src=\"media/_BKG/S_BKG_1.mp3\" loop/>,\n      <skoash.Audio ref=\"bkg-2\" type=\"background\" src=\"media/_assets/_sounds/_effects/GameThemeMusic%202.mp3\" loop/>,\n      <skoash.Audio ref=\"button\" type=\"sfx\" src=\"media/_Buttons/S_BU_1.mp3\" />,\n      <skoash.Image ref=\"img-bkg-1\" className=\"hidden\" src=\"media/_BKG/BKG_1.png\" />,\n      <skoash.Image ref=\"img-bkg-2\" className=\"hidden\" src=\"media/_BKG/BKG_2.png\" />,\n      <skoash.Image ref=\"img-bkg-3\" className=\"hidden\" src=\"media/_BKG/BKG_3.png\" />,\n      <skoash.Image ref=\"img-bkg-4\" className=\"hidden\" src=\"media/_assets/_images/BKG.4.jpg\" />,\n      <skoash.Image ref=\"img-bkg-5\" className=\"hidden\" src=\"media/_BKG/BKG_5.png\" />,\n      <skoash.Image\n        className=\"hidden\"\n        src=\"media/_assets/_images/BKG.3.png\"\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src=\"media/_assets/_images/BKG.5.png\"\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.1-01.png'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.2-01.png'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.3-01-min.jpg'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.game2.4-01.png'}\n      />,\n      <skoash.Image\n        className=\"hidden\"\n        src={'media/_assets/_sprites/sprites.mr.eco-01.png'}\n      />,\n      <div className=\"background default\" />,\n      <div className=\"background title\" />,\n      <div className=\"background lets-clean-up\" />,\n      <div className=\"background clean-up-game\" />,\n      <div className=\"background select\" />,\n      <div className=\"background sun\" />,\n      <div className=\"background commit\" />,\n    ]}\n    passData={function (opts) {\n      this.setState(opts);\n    }}\n    getClassNames={function () {\n      return classNames({'SUN': this.state.sun});\n    }}\n  />\n);\n\nskoash.start(LitterBug);\n\n\n\n/** WEBPACK FOOTER **\n ** ./litter-bug/index.js\n **/","import Catchable from 'shared/components/catchable/0.1';\n\n\nclass Catch extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      canCatch: true,\n      stamp: 0\n    };\n\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.checkCollisions = this.checkCollisions.bind(this);\n  }\n\n  componentDidMount() {\n    this.bucketNode = ReactDOM.findDOMNode(this.refs.bucket);\n    this.catchableNodes = _.map(this.props.catchables, function (val, key) {\n      return ReactDOM.findDOMNode(this.refs[`${key}-catchable`]);\n    }.bind(this));\n  }\n\n  attachMouseEvents() {\n    var catchRef = this.refs['catch-component'];\n    if (catchRef) {\n      catchRef.addEventListener('mousemove', this.onMouseMove);\n      catchRef.addEventListener('touchstart', this.onMouseMove);\n      catchRef.addEventListener('touchmove', this.onMouseMove);\n    }\n  }\n\n  onMouseMove(e) {\n    this.setState({\n      mouseX: e.pageX\n    });\n  }\n\n  onResize() {\n    skoash.trigger('getState').then(state => {\n      var zoom = state.scale;\n      var edges = this.getEdges(this.bucketNode);\n      var bucketWidth = edges.right - edges.left;\n      var leftBound = this.bucketNode.offsetParent ? this.bucketNode.offsetParent.offsetWidth - bucketWidth : 0;\n\n      this.setState({\n        bucketTop: edges.top,\n        bucketBottom: edges.bottom,\n        bucketWidth,\n        leftBound,\n        zoom\n      });\n    });\n  }\n\n  start() {\n    super.start();\n    this.bootstrap();\n    this.checkCollisions();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n    this.onResize();\n    this.attachMouseEvents();\n    window.addEventListener('resize', this.onResize);\n    _.forEach(this.catchableNodes, function (node, key) {\n      var catchableRef = this.refs[`${key}-catchable`];\n      node.addEventListener('animationiteration', catchableRef.reset, false);\n    }.bind(this));\n  }\n\n  restart() {\n    this.setState({\n      stamp: 0\n    }, () => {\n      this.checkCollisions();\n    });\n  }\n\n  stop() {\n    this.setState({\n      started: false\n    });\n  }\n\n  pause() {\n    if (this.state.started) {\n      this.setState({\n        paused: true\n      });\n    }\n  }\n\n  resume() {\n    if (this.state.paused) {\n      this.setState({\n        paused: false\n      }, () => {\n        this.checkCollisions();\n      });\n    }\n  }\n\n  selectCatchable(catchableNode, key) {\n    if (!this.state.started || this.state.paused || !this.state.canCatch || !catchableNode.canCatch()) return;\n    catchableNode.markCaught();\n    if (catchableNode.props.isCorrect) {\n      this.correct(catchableNode, key);\n    } else {\n      this.incorrect(catchableNode, key);\n    }\n  }\n\n  correct(catchable, key) {\n    if (this.audio.correct) {\n      this.audio.correct.play();\n    }\n    if (typeof this.props.onCorrect === 'function') {\n      this.props.onCorrect.call(this, catchable, key);\n    }\n  }\n\n  incorrect(catchable, key) {\n    if (this.audio.incorrect) {\n      this.audio.incorrect.play();\n    }\n    if (typeof this.props.onIncorrect === 'function') {\n      this.props.onIncorrect.call(this, catchable, key);\n    }\n  }\n\n  checkCollisions() {\n    var time = Date.now();\n    if (!this.state.started || this.state.paused) return;\n    if (time >= this.state.stamp) {\n      this.setState({\n        stamp: time + 1000\n      });\n      var bucketRect = this.bucketNode.getBoundingClientRect();\n      _.forEach(this.catchableNodes, function (val, key) {\n        if (this.isColliding(bucketRect, val.getBoundingClientRect())) {\n          this.selectCatchable(this.refs[`${key}-catchable`], key);\n        }\n      }.bind(this));\n      window.requestAnimationFrame(this.checkCollisions);\n    } else {\n      window.requestAnimationFrame(this.checkCollisions);\n    }\n  }\n\n  isColliding(bucketRect, catchRect) {\n    var xCenter = catchRect.left + (catchRect.right - catchRect.left) / 2;\n    var yOffset = (catchRect.bottom - catchRect.top) / 6;\n    return (bucketRect.top < catchRect.bottom - yOffset && bucketRect.top > catchRect.top + yOffset &&\n    xCenter > bucketRect.left && xCenter < bucketRect.right);\n  }\n\n  getEdges(el) {\n    var top, left, width, height;\n\n    left = 0;\n    top = 0;\n    width = el.offsetWidth;\n    height = el.offsetHeight;\n\n    while (el) {\n      if (el.className && el.className.indexOf('screen') !== -1) {\n        break;\n      }\n\n      left += el.offsetLeft || 0;\n      top += el.offsetTop || 0;\n      el = el.offsetParent;\n    }\n\n    return {\n      top,\n      bottom: top + height,\n      left,\n      right: left + width\n    };\n  }\n\n  getStyle() {\n    var left = (this.state.mouseX / this.state.zoom) - (this.state.bucketWidth / 2);\n    if (this.props.bucketInBounds) {\n      left = left < 1 ? 1 : left;\n      left = left >= this.state.leftBound ? this.state.leftBound - 1 : left;\n    }\n\n    return {\n      left: `${left}px`\n    };\n  }\n\n  renderBucket() {\n    return (\n      <this.props.bucket.type\n        {...this.props.bucket.props}\n        ref=\"bucket\"\n        style={this.getStyle()}\n      />\n    );\n  }\n\n  renderCatchables() {\n    return this.props.catchables.map((item, key) =>\n      <Catchable\n        {...item.props}\n        key={key}\n        ref={`${key}-catchable`}\n      />\n    );\n  }\n\n  getClasses() {\n    var classes = '';\n\n    if (this.state.complete || this.props.isComplete) classes += ' COMPLETE';\n\n    return classes;\n  }\n\n  render() {\n    return (\n      <div ref=\"catch-component\" className={'catch ' + this.getClasses()}>\n        <ul className=\"items\">\n          {this.renderCatchables()}\n        </ul>\n        {this.renderBucket()}\n      </div>\n    );\n  }\n\n}\n\nCatch.defaultProps = _.merge(skoash.Component.defaultProps, {\n  catchables: [],\n  bucketInBounds: true,\n});\n\nexport default Catch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/catch/0.1.js\n **/","import classNames from 'classnames';\n\nimport Catch from 'shared/components/catch/0.1';\n\nclass Catcher extends Catch {\n  constructor(props) {\n    super(props);\n\n    this.state = _.defaults({\n      styles: [],\n    }, this.state);\n\n    this.moveEvent = this.moveEvent.bind(this);\n  }\n\n  bootstrap() {\n    skoash.Component.prototype.bootstrap.call(this);\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n\n    if (this.props.moveBuckets) {\n      window.addEventListener('mousemove', this.moveEvent);\n      window.addEventListener('touchmove', this.moveEvent);\n    }\n  }\n\n  moveEvent(e) {\n    this.props.onMove.call(this, e);\n  }\n\n  onReady() {\n    this.bucketNodes = _.reduce(this.refs, (a, v, k) => {\n      if (k.indexOf('buckets-')) return a;\n      a[k] = ReactDOM.findDOMNode(v);\n      return a;\n    }, {});\n  }\n\n  onResize() {\n    skoash.trigger('getState').then(state => {\n      var zoom = state.scale;\n      this.setState({\n        zoom\n      });\n    });\n  }\n\n  checkCollisions() {\n    if (!this.state.started || this.state.paused) return;\n    _.each(this.bucketNodes, (bucketNode, bucketRefKey) => {\n      var bucketRect = bucketNode.getBoundingClientRect();\n      _.each(this.props.catchableRefs, catchableRef => {\n        if (this.isColliding(bucketRect, catchableRef.DOMNode.getBoundingClientRect())) {\n          this.selectCatchable(this.refs[bucketRefKey], catchableRef);\n        }\n      });\n    });\n\n    window.requestAnimationFrame(this.checkCollisions);\n  }\n\n  isColliding(bucketRect, catchRect) {\n    var bucketCorners = [], catchableCorners = [];\n\n    for (let i = 0; i < 4; i++) {\n      bucketCorners.push({\n        x: bucketRect.left + bucketRect.width * (i === 1 || i === 2 ? 1 : 0),\n        y: bucketRect.top + bucketRect.height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    for (let i = 0; i < 4; i++) {\n      catchableCorners.push({\n        x: catchRect.left + catchRect.width * (i === 1 || i === 2 ? 1 : 0),\n        y: catchRect.top + catchRect.height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    return skoash.util.doIntersect(bucketCorners, catchableCorners);\n  }\n\n  selectCatchable(bucketRef, catchableRef) {\n    if (!this.state.started || this.state.paused || !this.state.canCatch || !this.props.canCatch || !catchableRef.canCatch()) return;\n    catchableRef.markCaught();\n    if (catchableRef.props.message === bucketRef.props.message) {\n      this.correct(bucketRef, catchableRef);\n    } else {\n      this.incorrect(bucketRef, catchableRef);\n    }\n  }\n\n  correct(bucketRef, catchableRef) {\n    this.playMedia('correct');\n    this.props.onCorrect.call(this, bucketRef, catchableRef);\n  }\n\n  incorrect(bucketRef, catchableRef) {\n    this.playMedia('incorrect');\n    this.props.onIncorrect.call(this, bucketRef, catchableRef);\n  }\n\n  getClassNames() {\n    return classNames('catcher', super.getClassNames());\n  }\n\n  renderBucket() {\n    return _.map([].concat(this.props.bucket), (bucket, key) =>\n      <bucket.type\n        {...bucket.props}\n        ref={'buckets-' + key}\n        style={this.state.styles[key]}\n        key={key}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div ref=\"catcher\" className={this.getClassNames()}>\n        {this.renderContentList('assets')}\n        {this.renderBucket()}\n      </div>\n    );\n  }\n}\n\nCatcher.defaultProps = _.defaults({\n  moveBuckets: false,\n  onMove: _.noop,\n  canCatch: true,\n}, skoash.Component.defaultProps);\n\nexport default Catcher;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/catcher/0.1.js\n **/","import classNames from 'classnames';\n\nclass Draggable extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      zoom: 1,\n    };\n\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n\n    this.moveEvent = this.moveEvent.bind(this);\n\n    this.touchStart = this.touchStart.bind(this);\n    this.touchEnd = this.touchEnd.bind(this);\n  }\n\n  shouldDrag() {\n    return true;\n  }\n\n  incomplete() {\n    this.markIncorrect();\n    this.returnToStart();\n\n    super.incomplete();\n  }\n\n  markCorrect() {\n    this.setState({\n      correct: true,\n    });\n  }\n\n  markIncorrect() {\n    this.setState({\n      correct: false,\n    });\n  }\n\n  startEvent(e, cb) {\n    var pageX, pageY, rect, startX, startY, endX, endY, grabX, grabY;\n\n    if (e.target !== this.refs.el) return;\n    if (!this.shouldDrag()) return;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      pageX = e.targetTouches[0].pageX;\n      pageY = e.targetTouches[0].pageY;\n      rect = e.target.getBoundingClientRect();\n      e = e.targetTouches[0];\n      e.offsetX = pageX - rect.left;\n      e.offsetY = pageY - rect.top;\n    }\n\n    grabX = e.offsetX;\n    grabY = e.offsetY;\n\n    startX = endX = e.pageX - grabX;\n    startY = endY = e.pageY - grabY;\n\n    if (!this.state.firstX) {\n      this.setState({\n        firstX: startX,\n        firstY: startY,\n      });\n    }\n\n    if (!this.props.return) {\n      startX = _.isFinite(this.state.grabX) ?\n        this.state.startX + this.state.grabX - grabX :\n        startX;\n      startY = _.isFinite(this.state.grabY) ?\n        this.state.startY + this.state.grabY - grabY :\n        startY;\n    }\n\n    this.setState({\n      dragging: true,\n      return: false,\n      startX,\n      startY,\n      grabX,\n      grabY,\n      endX,\n      endY,\n    });\n\n    if (typeof this.props.dragRespond === 'function') {\n      this.props.dragRespond(this.props.message);\n    }\n\n    if (typeof cb === 'function') {\n      cb.call(this);\n    }\n  }\n\n  attachMouseEvents() {\n    window.addEventListener('mousemove', this.moveEvent);\n    window.addEventListener('mouseup', this.mouseUp);\n  }\n\n  attachTouchEvents() {\n    window.addEventListener('touchmove', this.moveEvent);\n    window.addEventListener('touchend', this.touchEnd);\n  }\n\n  mouseDown(e) {\n    this.startEvent(e, this.attachMouseEvents);\n  }\n\n  touchStart(e) {\n    this.startEvent(e, this.attachTouchEvents);\n  }\n\n  moveEvent(e) {\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n      e.pageY = e.targetTouches[0].pageY;\n    }\n\n    this.setState({\n      endX: e.pageX - this.state.grabX,\n      endY: e.pageY - this.state.grabY,\n    });\n  }\n\n  returnToStart() {\n    if (this.state.firstX) {\n      this.setState({\n        dragging: false,\n        return: true,\n        endX: this.state.firstX,\n        endY: this.state.firstY,\n      });\n    }\n  }\n\n  endEvent(cb) {\n    this.dropRespond();\n\n    if (this.props.return) {\n      this.returnToStart();\n    } else {\n      this.setState({\n        dragging: false,\n        return: this.state.return,\n      });\n    }\n\n    if (typeof cb === 'function') {\n      cb.call(this);\n    }\n  }\n\n  detachMouseEvents() {\n    window.removeEventListener('mousemove', this.moveEvent);\n    window.removeEventListener('mouseup', this.mouseUp);\n  }\n\n  detachTouchEvents() {\n    window.removeEventListener('touchmove', this.moveEvent);\n    window.removeEventListener('touchend', this.touchEnd);\n  }\n\n  mouseUp() {\n    this.endEvent(this.detachMouseEvents);\n  }\n\n  touchEnd() {\n    this.endEvent(this.detachTouchEvents);\n  }\n\n  dropRespond() {\n    var corners;\n\n    corners = this.setCorners();\n\n    if (typeof this.props.dropRespond === 'function') {\n      this.props.dropRespond(this.props.message, corners);\n    }\n  }\n\n  setCorners() {\n    var top, left, width, height, el, corners = [];\n\n    left = 0;\n    top = 0;\n    el = this.refs.el;\n    width = el.offsetWidth;\n    height = el.offsetHeight;\n\n    while (el) {\n      if (el.className.indexOf('screen') !== -1) {\n        break;\n      }\n\n      left += el.offsetLeft || 0;\n      top += el.offsetTop || 0;\n      el = el.offsetParent;\n    }\n\n    left += ((this.state.endX - this.state.startX) / this.state.zoom);\n    top += ((this.state.endY - this.state.startY) / this.state.zoom);\n\n    for (var i = 0; i < 4; i++) {\n      corners.push({\n        x: left + width * (i === 1 || i === 2 ? 1 : 0),\n        y: top + height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    this.setState({\n      corners,\n    });\n\n    return corners;\n  }\n\n  componentDidMount() {\n    this.bootstrap();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    this.setZoom();\n\n    this.refs.el.addEventListener('mousedown', this.mouseDown);\n    this.refs.el.addEventListener('touchstart', this.touchStart);\n\n    window.addEventListener('resize', this.setZoom.bind(this));\n  }\n\n  setZoom() {\n    skoash.trigger('getState').then(state => {\n      this.setState({\n        zoom: state.scale,\n      });\n    });\n  }\n\n  getStyle() {\n    var x, y;\n\n    x = ((this.state.endX - this.state.startX) / this.state.zoom);\n    y = ((this.state.endY - this.state.startY) / this.state.zoom);\n\n    return {\n      transform: `translateX(${x}px) translateY(${y}px)`,\n      WebkitTransform: `translateX(${x}px) translateY(${y}px)`,\n    };\n  }\n\n  getClassNames() {\n    return classNames({\n      draggable: true,\n      [this.props.className]: this.props.className,\n      [this.props.message]: this.props.message,\n      DRAGGING: this.state.dragging,\n      RETURN: this.state.return,\n      CORRECT: this.state.correct,\n    }, super.getClassNames());\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"el\"\n        className={this.getClassNames()}\n        style={this.getStyle()}\n      >{this.props.children}</div>\n    );\n  }\n}\n\nexport default Draggable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/draggable/0.1.js\n **/","import classNames from 'classnames';\n\nimport Draggable from 'shared/components/draggable/0.1';\n\nimport Randomizer from 'shared/components/randomizer/0.1';\nimport Catchable from 'shared/components/catchable/0.1';\n\nclass Dropper extends Draggable {\n  constructor() {\n    super();\n\n    this.state = _.defaults({\n      items: {},\n      itemCount: 0,\n      itemEndXs: {},\n      direction: '',\n    }, this.state);\n\n    this.next = this.next.bind(this);\n  }\n\n  next(on) {\n    var items, index;\n\n    if (!this.state.started || (!this.props.on && !on) || this.props.gameState.paused) return;\n\n    index = this.state.itemCount;\n    items = this.state.items;\n    items[index] = this.refs.bin.get(1)[0];\n\n    this.setState({\n      items,\n      itemCount: index + 1,\n    }, () => {\n      var timeoutFunction = i => {\n        var itemRef, itemDOM, itemEndXs, onTransitionEnd;\n        itemRef = this.refs['items-' + index];\n        if (itemRef) {\n          itemRef.addClassName(this.props.prepClasses[i]);\n          this.props.onAddClassName.call(this, this.props.prepClasses[i]);\n          if (i === this.props.prepClasses.length - 1) {\n            itemEndXs = this.state.itemEndXs;\n            itemEndXs[index] = this.state.endX;\n            onTransitionEnd = () => {\n              items = this.state.items;\n              this.props.onTransitionEnd.call(this, itemRef);\n              delete items[index];\n              this.setState({\n                items,\n                itemEndXs\n              });\n            };\n            itemDOM = ReactDOM.findDOMNode(itemRef);\n            itemDOM.addEventListener('transitionend', onTransitionEnd);\n            itemDOM.addEventListener('animationend', onTransitionEnd);\n          }\n        }\n\n        if (i === this.props.prepClasses.length) this.next();\n      };\n\n      for (let i = 0; i <= this.props.prepClasses.length; i++) {\n        setTimeout(() => {\n          timeoutFunction(i);\n        }, i * this.props.prepTimeout);\n      }\n\n      this.updateGameState({\n        path: this.props.refsTarget,\n        data: {\n          refs: _.filter(this.refs, (v, k) => !k.indexOf('items-')),\n        }\n      });\n    });\n  }\n\n  moveEvent(e) {\n    var endX;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n    }\n\n    endX = Math.min(Math.max(e.pageX - this.state.grabX, this.props.leftBound), this.props.rightBound);\n\n    this.setState({\n      endX,\n      direction: endX > this.state.endX ? 'right' : 'left'\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.on === true && props.on !== this.props.on) {\n      this.next(true);\n    }\n  }\n\n  getItemStyle(key, style) {\n    var endX, x;\n\n    endX = this.state.itemEndXs[key] || this.state.endX;\n    x = ((endX - this.state.startX) / this.state.zoom);\n\n    return _.defaults({\n      transform: `translateX(${x}px)`,\n      WebkitTransform: `translateX(${x}px)`,\n    }, style);\n  }\n\n  getStyle() {\n    var x = ((this.state.endX - this.state.startX) / this.state.zoom);\n\n    return {\n      transform: `translateX(${x}px)`,\n      WebkitTransform: `translateX(${x}px)`,\n    };\n  }\n\n  getClassNames() {\n    return classNames('dropper', this.state.direction, super.getClassNames());\n  }\n\n  /*\n   * shortid is intentionally not used for key here because we want to make sure\n   * that the element is transitioned and not replaced.\n   */\n  renderItems() {\n    return _.map(this.state.items, (item, key) => {\n      var ref = 'items-' + key;\n      if (!item) return null;\n      return (\n        <item.type\n          {...item.props}\n          style={this.getItemStyle(key, item.props.style)}\n          data-ref={ref}\n          data-message={item.props.message}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  renderBin() {\n    return (\n      <this.props.bin.type\n        {...this.props.bin.props}\n        ref=\"bin\"\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div\n        className={this.getClassNames()}\n      >\n        {this.renderBin()}\n        <div\n          ref=\"el\"\n          className=\"el\"\n          style={this.getStyle()}\n        >\n          {this.renderContentList()}\n        </div>\n        <ul className=\"items\">\n          {this.renderItems()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nDropper.defaultProps = _.defaults({\n  prepClasses: ['ready', 'set', 'go'],\n  prepTimeout: 1000,\n  bin: (\n    <Randomizer\n      bin={[\n        <Catchable />,\n      ]}\n    />\n  ),\n  onStart: function () {\n    this.next();\n  },\n  onResume: function () {\n    this.next();\n  },\n  leftBound: 0,\n  rightBound: 800,\n  refsTarget: 'dropper',\n  on: true,\n  onTransitionEnd: _.noop,\n}, Draggable.defaultProps);\n\nexport default Dropper;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/dropper/0.1.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"ios-splash\"\n      checkComplete={false}\n      completeDelay={6000}\n      nextDelay={3000}\n      completeOnStart\n      hidePrev\n    >\n      <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball.png\" />\n      <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball_anim.gif\" />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/ios_splash_screen/0.1.js\n **/","class Loader extends skoash.Component {\n  constructor() {\n    super();\n\n  }\n\n  render() {\n    return (\n      <div id=\"loader\" className=\"center\">\n        <div className=\"group\">\n          <h2>Loading!</h2>\n          <div className=\"spinner animated\">\n            <div className=\"spinner animated\">\n              <div className=\"spinner animated\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/loader/0.1.js\n **/","class QuitScreen extends skoash.Screen {\n  okay() {\n    skoash.trigger('quit');\n  }\n\n  cancel() {\n    this.close();\n    skoash.trigger('menuClose', {\n      id: this.props.id,\n    });\n  }\n\n  renderAssets() {\n    if (this.props.assets) {\n      return this.props.assets.map((asset, key) => {\n        return (\n          <skoash.Audio\n            {...asset.props}\n            ref={asset.ref || asset.props['data-ref'] || ('asset-' + key)}\n            key={key}\n            data-ref={key}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} className={'screen ' + this.getClassNames()}>\n        {this.renderAssets()}\n        <div className=\"center\">\n          <div className=\"frame\">\n            <h2>Are you sure you<br/>want to quit?</h2>\n            <h3>Your game progress will be saved</h3>\n            <button className=\"quit-yes\" onClick={this.okay.bind(this)}></button>\n            <button className=\"quit-no\" onClick={this.cancel.bind(this)}></button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default (\n  <QuitScreen\n    id=\"quit\"\n  />\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/quit_screen/0.1.js\n **/","import classNames from 'classnames';\nimport _ from 'lodash';\n\nclass Reveal extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      openReveal: '',\n      currentlyOpen: []\n    };\n\n    this.index = 0;\n  }\n\n  incomplete() {\n    this.setState({\n      openReveal: '',\n      currentlyOpen: []\n    });\n\n    super.incomplete();\n  }\n\n  open(message) {\n    var self = this;\n    var currentlyOpen = this.state.currentlyOpen;\n\n    if (!this.props.allowMultipleOpen) {\n      currentlyOpen = [message];\n    } else if (currentlyOpen.indexOf(message) === -1) {\n      currentlyOpen = currentlyOpen.concat(message);\n    }\n\n    self.setState({\n      open: true,\n      currentlyOpen,\n      openReveal: '' + message,\n    });\n\n    self.playAudio(message);\n\n    if (self.props.completeOnOpen) {\n      self.complete();\n    } else {\n      self.requireForComplete.map(key => {\n        if (key === message && self.refs[key]) {\n          self.refs[key].complete();\n        }\n      });\n    }\n\n    if (self.props.autoClose) {\n      setTimeout(function () {\n        self.close();\n      }, 2000);\n    }\n\n    if (self.props.openTarget) {\n      self.updateGameState({\n        path: self.props.openTarget,\n        data: {\n          open: '' + message\n        }\n      });\n    }\n\n    self.props.onOpen.call(self, message);\n  }\n\n  close(opts = {}) {\n    var prevMessage = this.state.openReveal;\n    var currentlyOpen = this.state.currentlyOpen;\n    currentlyOpen.splice(currentlyOpen.indexOf(prevMessage), 1);\n\n    this.setState({\n      open: false,\n      openReveal: '',\n      currentlyOpen,\n    });\n\n    if (!opts.silent && this.audio['close-sound']) {\n      this.audio['close-sound'].play();\n    }\n\n    this.props.onClose.call(this, prevMessage);\n\n    if (typeof this.props.closeRespond === 'function') {\n      this.props.closeRespond(prevMessage);\n    }\n  }\n\n  start() {\n    super.start();\n    if (this.props.openOnStart != null) {\n      this.open(this.props.openOnStart);\n    } else if (this.props.start && typeof this.props.start === 'function') {\n      this.props.start.call(this);\n    } else {\n      this.close({silent: true});\n    }\n  }\n\n  playAudio(message) {\n    var messages;\n\n    if ('' + parseInt(message, 10) === message) {\n      message = 'asset-' + message;\n    }\n\n    if (!message) return;\n\n    if (this.audio['open-sound']) {\n      this.audio['open-sound'].play();\n    }\n\n    if (typeof message === 'string') {\n      messages = message.split(' ');\n      messages.map(audio => {\n        audio = 'asset-' + audio;\n        if (this.audio[audio]) {\n          this.audio[audio].play();\n        } else if (this.media[audio] && typeof this.media[audio].play === 'function') {\n          this.media[audio].play();\n        }\n      });\n    } else {\n      if (this.audio.voiceOver[message]) {\n        this.audio.voiceOver[message].play();\n      }\n    }\n  }\n\n  renderAssets() {\n    if (this.props.assets) {\n      return this.props.assets.map((asset, key) => {\n        var ref = 'asset-';\n        ref += asset.ref || asset.props['data-ref'] || key;\n        return (\n          <asset.type\n            {...asset.props}\n            data-ref={key}\n            ref={ref}\n            key={key}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderList() {\n    var list = this.props.list;\n\n    return list.map((li, key) => {\n      var dataRef = li.props['data-ref'] || key;\n      var ref = li.ref || dataRef;\n      return (\n        <li.type\n          {...li.props}\n          type=\"li\"\n          className={this.getClass(li, key)}\n          data-ref={dataRef}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    super.componentWillReceiveProps(props);\n\n    if (props.openReveal != null && props.openReveal !== this.props.openReveal) {\n      this.open(props.openReveal);\n    }\n\n    if (props.closeReveal === true && props.closeReveal !== this.props.closeReveal) {\n      this.close();\n    }\n  }\n\n  getClass(li, key) {\n    var classes = '';\n\n    if (li.props.className) classes = li.props.className;\n\n    if (this.state.currentlyOpen.indexOf(key) !== -1 ||\n        this.state.currentlyOpen.indexOf(li.props['data-ref']) !== -1 ||\n        this.state.currentlyOpen.indexOf(li.ref) !== -1\n    ) {\n      classes = classNames(classes, 'OPEN');\n    }\n\n    return classes;\n  }\n\n  getClassNames() {\n    var classes, open = 'open-none ';\n\n    if (this.state.open) {\n      open = '';\n      this.state.currentlyOpen.forEach(ref => {\n        open += 'open-' + ref + ' ';\n      });\n      open += 'OPEN';\n    }\n\n    classes = classNames(\n      'reveal',\n      open,\n      super.getClassNames(),\n    );\n\n    return classes;\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        {this.renderAssets()}\n        <div>\n          <ul>\n            {this.renderList()}\n          </ul>\n          <button className=\"close-reveal\" onClick={this.close.bind(this)}></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nReveal.defaultProps = _.defaults({\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  onOpen: _.noop,\n  onClose: _.noop,\n  allowMultipleOpen: false,\n}, skoash.Component.defaultProps);\n\nexport default Reveal;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/reveal/0.1.js\n **/","import classNames from 'classnames';\n\nclass Selectable extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      classes: {},\n      selectFunction: this.select,\n    };\n  }\n\n  start() {\n    super.start();\n\n    var selectClass, selectFunction, classes = {};\n\n    selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n    selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\n    if (this.props.selectOnStart) {\n      classes[this.props.selectOnStart] = selectClass;\n    }\n\n    this.setState({\n      started: true,\n      classes,\n      selectFunction,\n      selectClass,\n    });\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    var self = this;\n\n    var correctAnswers = this.requireForComplete.filter((ref) => {\n      return self.refs[ref].props.correct;\n    });\n\n    if (correctAnswers.length > 0) {\n      this.requireForComplete = correctAnswers;\n    }\n\n    if (this.refs.bin) {\n      this.setState({\n        list: this.refs.bin.getAll()\n      });\n    }\n  }\n\n  selectHelper(e, classes) {\n    var ref, dataRef, target, id, isCorrect, self = this;\n\n    target = e.target.closest('LI');\n\n    if (!target) return;\n\n    dataRef = target.getAttribute('data-ref');\n    ref = self.refs[dataRef];\n\n    isCorrect = (ref && ref.props && ref.props.correct) || (!self.props.answers || !self.props.answers.length || self.props.answers.indexOf(dataRef) !== -1);\n\n    if (self.props.allowDeselect && classes[dataRef]) {\n      delete classes[dataRef];\n    } else if (isCorrect) {\n      classes[dataRef] = self.state.selectClass;\n    }\n\n    self.setState({\n      classes,\n    });\n\n    self.props.selectRespond.call(self, dataRef);\n    self.props.onSelect.call(self, dataRef);\n\n    if (self.props.chooseOne) {\n      self.requireForComplete = [dataRef];\n    }\n\n    if (self.props.dataTarget) {\n      self.updateGameState({\n        path: self.props.dataTarget,\n        data: {\n          target: ref\n        }\n      });\n    }\n\n    if (self.props.completeListOnClick) {\n      self.requireForComplete.map(key => {\n        if (key === id && self.refs[id]) {\n          self.refs[id].complete();\n        }\n      });\n    }\n\n    self.requireForComplete.map(key => {\n      if (key === dataRef && self.refs[key]) {\n        self.refs[key].complete();\n      }\n    });\n  }\n\n  select(e) {\n    var classes = [];\n    this.selectHelper(e, classes);\n  }\n\n  highlight(e) {\n    var classes = this.state.classes;\n    this.selectHelper(e, classes);\n  }\n\n  getClass(key, li) {\n    return classNames(\n      li.props.className,\n      this.state.classes[key],\n      this.state.classes[li.props['data-ref']],\n      this.state.classes[li.props['data-key']]\n    );\n  }\n\n  getClassNames() {\n    return classNames('selectable', super.getClassNames());\n  }\n\n  checkComplete() {\n    var self = this, complete;\n\n    if (this.props.checkComplete === false) return;\n\n    complete = self.requireForComplete.every(key => {\n      if (self.refs[key] instanceof Node) {\n        return true;\n      }\n      if (!self.refs[key].state || (self.refs[key].state && !self.refs[key].state.complete)) {\n        if (typeof self.refs[key].checkComplete === 'function') {\n          self.refs[key].checkComplete();\n        }\n        return false;\n      }\n      return true;\n    });\n\n    if (complete && !self.state.complete) {\n      self.complete();\n    } else if (self.state.started && !complete && self.state.complete) {\n      self.incomplete();\n    }\n  }\n\n  renderBin() {\n    if (!this.props.bin) return null;\n\n    return (\n      <this.props.bin.type\n        {...this.props.bin.props}\n        ref=\"bin\"\n      />\n    );\n  }\n\n  renderList() {\n    var list = this.props.list || this.state.list;\n    return list.map((li, key) => {\n      var dataRef = li.props['data-ref'] || key;\n      var ref = li.ref || li.props.id || dataRef;\n      var message = li.props.message || '' + key;\n      return (\n        <li.type\n          {...li.props}\n          type=\"li\"\n          className={this.getClass(key, li)}\n          message={message}\n          data-message={message}\n          data-ref={dataRef}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBin()}\n        <ul className={this.getClassNames()} onClick={this.state.selectFunction.bind(this)}>\n          {this.renderList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nSelectable.defaultProps = _.defaults({\n  list: [\n    <li></li>,\n    <li></li>,\n    <li></li>,\n    <li></li>\n  ],\n  selectClass: 'SELECTED',\n  completeListOnClick: true,\n  selectRespond: _.identity,\n  onSelect: _.identity,\n}, skoash.Component.defaultProps);\n\nexport default Selectable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/selectable/0.1.js\n **/","window.ENVIRONMENT = {\n  MEDIA: 'https://media.changemyworldnow.com/'\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/js/prod-variables.js\n **/","'use strict';\nmodule.exports = require('./lib/index');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/index.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/decode.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/encode.js\n ** module id = 43\n ** module chunks = 0\n **/","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar isValid = require('./is-valid');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/index.js\n ** module id = 44\n ** module chunks = 0\n **/","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/is-valid.js\n ** module id = 45\n ** module chunks = 0\n **/","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/random/random-byte-browser.js\n ** module id = 46\n ** module chunks = 0\n **/","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/random/random-from-seed.js\n ** module id = 47\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = 0;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/util/cluster-worker-id-browser.js\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 49\n ** module chunks = 0\n **/"],"sourceRoot":""}