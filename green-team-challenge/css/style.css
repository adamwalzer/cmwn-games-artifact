
/* http://meyerweb.com/eric/tools/css/reset/
       v2.0b1 | 201101
       NOTE: WORK IN PROGRESS
       USE WITH CAUTION AND TEST WITH ABANDON */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  outline: 0;
  border: 0;
  padding: 0;
  vertical-align: baseline;
  font: inherit;
  font-size: 100%; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote::before, blockquote::after,
q::before, q::after {
  content: '';
  content: none; }

/* remember to define visible focus styles!
    :focus {
        outline: ?????;
    } */
/* remember to highlight inserts somehow! */
ins {
  text-decoration: none; }

del {
  text-decoration: line-through; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

* {
  box-sizing: border-box; }

html,
body {
  margin: 0;
  cursor: default;
  padding: 0;
  height: 100%;
  overflow: hidden;
  user-drag: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

html {
  font-family: "Source Sans Pro", "Helvetica Neue", Helvetica, sans-serif;
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

body,
body > div,
.skoash-game {
  position: relative;
  margin: auto;
  background-size: cover;
  width: 100%;
  height: 100%;
  overflow: hidden;
  font-size: 20px; }
  body .background,
  body > div .background,
  .skoash-game .background {
    position: absolute;
    top: 0;
    left: 0;
    transition: opacity .5s;
    opacity: 0;
    background-position: center center;
    background-size: cover;
    width: 100%;
    height: 100%; }

.skoash-game {
  width: 960px;
  height: 540px; }

img.hidden {
  display: none; }

button {
  margin: 0;
  outline: none;
  border: 0;
  background-color: transparent;
  background-repeat: no-repeat;
  background-position: left top;
  cursor: pointer;
  padding: 0;
  color: transparent;
  font-family: inherit;
  font-size: inherit; }
  button.next-screen, button.prev-screen {
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); }

h2 {
  font-size: 50px; }

h3 {
  margin: 0;
  font-size: 36px; }

p {
  margin: 0;
  font-size: 36px; }

.screen {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: opacity .5s, z-index 0s .5s;
  opacity: 0;
  z-index: -1; }
  .screen .screen-content {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transition: opacity .5s;
    opacity: 0;
    text-align: center; }
    .VOICE-OVER:not(.DEMO) .screen .screen-content {
      pointer-events: none; }
  .screen.OPEN {
    transition: opacity .5s, z-index 0s;
    opacity: 1;
    z-index: 1; }
  .screen.READY .screen-content {
    display: block;
    opacity: 1; }
  .screen.LEAVE {
    opacity: 0; }
  .screen#title .prev-screen {
    display: none; }

.skoash-game.VOICE-OVER:not(.DEMO) .close-reveal,
.screen .next-screen {
  transition: opacity 0s;
  opacity: 0;
  cursor: default;
  pointer-events: none; }

.skoash-game.MENU-quit .screen:not(#quit) {
  opacity: 0;
  pointer-events: none; }

.skoash-game.DEMO .screen .next-screen,
.screen.COMPLETE .next-screen,
.screen.REPLAY .next-screen {
  -webkit-transform: rotate(0deg) scale3d(1, 1, 1);
          transform: rotate(0deg) scale3d(1, 1, 1);
  transition: opacity 1s, -webkit-transform 1s;
  transition: opacity 1s, transform 1s;
  transition: opacity 1s, transform 1s, -webkit-transform 1s;
  opacity: 1;
  cursor: pointer;
  pointer-events: auto; }

html {
  color: #000; }

.skoash-game > .menu {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2; }

button {
  background: #0f0; }
  button.next-screen, button.prev-screen, button.close-reveal {
    display: block;
    position: absolute;
    bottom: 10px;
    z-index: 2;
    margin: 0;
    width: 140px;
    height: 55px; }
  button.next-screen {
    right: 15px; }
  button.prev-screen {
    left: 15px; }
  button.quit-yes, button.quit-no {
    bottom: 10%;
    width: 220px;
    height: 110px; }
  button.quit-yes {
    left: 17%; }
  button.quit-no {
    right: 17%; }

.skoash-game.SCREEN-title .background.title {
  opacity: 1; }

.skoash-game.SCREEN-flip .background.flip {
  opacity: 1; }

.VOICE-OVER:not(.DEMO) .screen .screen-content {
  pointer-events: none; }

.selectable > * {
  cursor: pointer; }

.randomizer {
  display: none; }

.reveal {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  transition: opacity .5s, z-index 0s .5s;
  opacity: 0;
  z-index: -1; }
  .reveal.OPEN {
    transition: opacity .5s, z-index 0s;
    opacity: 1;
    z-index: 1; }
  .reveal li {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translateX(-50%) translateY(-50%);
        -ms-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
    transition: opacity .5s;
    opacity: 0; }
    .reveal li.OPEN {
      opacity: 1; }


[id*=pre-level] .stars,
[id*=post-level] .stars {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 40px;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  [id*=pre-level] .stars div,
  [id*=post-level] .stars div {
    height: 40px;
    width: 40px;
    margin: 0 10px;
    background-color: #0f0; }
    [id*=pre-level] .stars div.earned,
    [id*=post-level] .stars div.earned {
      background-color: #00f; }



[id*=recycling-champion] .top-left {
  position: absolute;
  top: 0;
  left: 0; }
  [id*=recycling-champion] .top-left > div {
    display: inline-block;
    border: 2px solid #000;
    padding: 20px 0;
    width: 100px; }

[id*=recycling-champion] .item-name {
  position: absolute;
  top: 0;
  right: 0;
  border: 2px solid #000;
  padding: 20px 0;
  width: 200px;
  height: 64px; }

[id*=recycling-champion] .life {
  display: inline-block;
  position: relative;
  z-index: 1;
  margin: 10px;
  width: 17px;
  height: 160px;
  vertical-align: middle;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
      -ms-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  right: 0;
  left: auto; }
  [id*=recycling-champion] .life::after {
    position: absolute;
    top: 5%;
    right: 3px;
    opacity: .6;
    z-index: 1;
    border-radius: 10px;
    background-color: #fff;
    width: 5px;
    height: 90%;
    content: ''; }
  [id*=recycling-champion] .life span {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: block;
    color: transparent;
    font-size: 0; }
    [id*=recycling-champion] .life span::before, [id*=recycling-champion] .life span::after {
      display: block;
      position: absolute;
      border-radius: 50px;
      width: 100%;
      content: ''; }
    [id*=recycling-champion] .life span::before {
      bottom: 0;
      left: 0;
      background-color: #fff;
      height: 100%; }
    [id*=recycling-champion] .life span::after {
      bottom: 0;
      left: 0;
      transition: height 0.5s cubic-bezier(0.53, -0.56, 0.63, 1.74);
      background: #000;
      background-repeat: no-repeat;
      background-size: cover;
      height: 0; }
  [id*=recycling-champion] .life.score-0 span::after {
    height: 0%; }
  [id*=recycling-champion] .life.score--1 span::after {
    height: 20%; }
  [id*=recycling-champion] .life.score--2 span::after {
    height: 40%; }
  [id*=recycling-champion] .life.score--3 span::after {
    height: 60%; }
  [id*=recycling-champion] .life.score--4 span::after {
    height: 80%; }
  [id*=recycling-champion] .life.score--5 span::after {
    height: 100%; }
  [id*=recycling-champion] .life span::before {
    background-color: #0f0; }

[id*=recycling-champion] .manual-dropper {
  position: absolute;
  top: 100px;
  left: 0;
  transition: -webkit-transform .5s;
  transition: transform .5s;
  transition: transform .5s, -webkit-transform .5s;
  background-color: #00f;
  width: 100%;
  height: 200px; }
  [id*=recycling-champion] .manual-dropper .items {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }
    [id*=recycling-champion] .manual-dropper .items > * {
      position: absolute;
      transition: top .2s .5s, left .5s 0s, -webkit-transform .5s;
      transition: top .2s .5s, left .5s 0s, transform .5s;
      transition: top .2s .5s, left .5s 0s, transform .5s, -webkit-transform .5s;
      background-color: #0f0;
      width: 50px;
      height: 50px; }
      [id*=recycling-champion] .manual-dropper .items > *:nth-of-type(1) {
        top: 100px;
        left: 75px; }
      [id*=recycling-champion] .manual-dropper .items > *:nth-of-type(2) {
        top: 30px;
        left: 200px; }
      [id*=recycling-champion] .manual-dropper .items > *:nth-of-type(3) {
        top: 30px;
        left: 1000px; }
      [id*=recycling-champion] .manual-dropper .items > *.DROPPED {
        -webkit-transform: translateY(250px);
            -ms-transform: translateY(250px);
                transform: translateY(250px); }
      [id*=recycling-champion] .manual-dropper .items > *::before {
        font-size: 10px;
        content: attr(data-message); }

[id*=recycling-champion] .bins {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 200px; }

[id*=recycling-champion] .catch,
[id*=recycling-champion] .selectable {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  [id*=recycling-champion] .catch div,
  [id*=recycling-champion] .catch li,
  [id*=recycling-champion] .selectable div,
  [id*=recycling-champion] .selectable li {
    margin: 0 10px;
    background-color: #00f;
    width: 200px;
    height: 100%; }
  [id*=recycling-champion] .catch li::before,
  [id*=recycling-champion] .selectable li::before {
    content: attr(data-message); }

[id*=recycling-champion] .reveal li {
  width: 100%;
  height: 100%; }
  [id*=recycling-champion] .reveal li[data-ref=resort] {
    background-color: rgba(195, 97, 55, 0.9); }
  [id*=recycling-champion] .reveal li[data-ref=retry] {
    background-color: rgba(195, 97, 55, 0.9); }
  [id*=recycling-champion] .reveal li[data-ref=complete] {
    background-color: rgba(0, 97, 0, 0.9); }

[id*=recycling-champion] .reveal.open-retry .close-reveal, [id*=recycling-champion] .reveal.open-complete .close-reveal {
  position: absolute;
  right: 150px;
  bottom: 150px; }



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
