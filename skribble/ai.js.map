{"version":3,"sources":["webpack:///skribble/ai.js","webpack:///webpack/bootstrap e8acde2a7f5b338237ca","webpack:///../~/classnames/index.js","webpack:///./shared/components/selectable/0.1.js","webpack:///../~/lodash/lodash.js","webpack:///../~/shortid/lib/alphabet.js","webpack:///./shared/components/canvas/0.1.js","webpack:///./shared/components/item_drawer/0.1.js","webpack:///./shared/components/draggable/0.1.js","webpack:///./shared/components/editable_asset/0.1.js","webpack:///./shared/components/inbox/0.1.js","webpack:///./shared/components/ios_splash_screen/0.1.js","webpack:///./shared/components/loader/0.1.js","webpack:///./shared/components/menu/0.1.js","webpack:///./shared/components/quit_screen/0.1.js","webpack:///./shared/components/reveal/0.1.js","webpack:///./shared/components/saved_messages/0.1.js","webpack:///./shared/components/selectable_reveal/0.1.js","webpack:///./shared/js/google-analytics.js","webpack:///./shared/js/test-platform-integration.js","webpack:///./skribble/components/canvas_screen.js","webpack:///./skribble/components/friend_screen.js","webpack:///./skribble/components/inbox_screen.js","webpack:///./skribble/components/item_drawer_screen.js","webpack:///./skribble/components/menu_screen.js","webpack:///./skribble/components/preview_screen.js","webpack:///./skribble/components/read_screen.js","webpack:///./skribble/components/save_menu.js","webpack:///./skribble/components/send_screen.js","webpack:///./skribble/components/sent_screen.js","webpack:///./skribble/components/title_screen.js","webpack:///./skribble/config.game.js","webpack:///./skribble/index.js","webpack:///../~/shortid/index.js","webpack:///../~/shortid/lib/decode.js","webpack:///../~/shortid/lib/encode.js","webpack:///../~/shortid/lib/index.js","webpack:///../~/shortid/lib/is-valid.js","webpack:///../~/shortid/lib/random/random-byte-browser.js","webpack:///../~/shortid/lib/random/random-from-seed.js","webpack:///../~/shortid/lib/util/cluster-worker-id-browser.js","webpack:///../~/webpack/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","hasOwn","join","hasOwnProperty","undefined","_interopRequireDefault","obj","__esModule","default","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_extends","assign","target","source","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_get","get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","parent","getPrototypeOf","_classnames","_classnames2","Selectable","_skoash$Component","this","state","selectClass","list","React","createElement","selectFunction","select","start","_this","highlight","selectOnStart","setState","started","bootstrap","keys","refs","map","selectHelper","e","message","closest","getAttribute","selectRespond","requireForComplete","filter","checkComplete","getClass","getClassNames","selectable","COMPLETE","complete","className","renderList","_this2","li","ref","skoash","ListItem","data-ref","render","onClick","bind","Component","global","addMapEntry","pair","set","addSetEntry","add","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","isHostObject","toString","iteratorToArray","iterator","data","next","done","mapToArray","size","forEach","overArg","transform","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","match","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseConformsTo","baseCreate","proto","objectCreate","baseDelay","wait","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","objectToString","baseGt","other","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","last","baseIsArrayBuffer","arrayBufferTag","baseIsDate","dateTag","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","mapTag","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIsRegExp","regexpTag","baseIsSet","setTag","baseIsTypedArray","isLength","typedArrayTags","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseRest","otherArgs","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","slice","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","root","Ctor","isBind","BIND_FLAG","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","reApos","thisBinding","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","setWrapToString","createRound","Math","precision","split","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","boolTag","numberTag","errorTag","name","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getAllKeysIn","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","transforms","getWrapDetails","reWrapDetails","reSplitDetails","hasPath","hasFunc","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","insertWrapDetails","details","reWrapComment","spreadableSymbol","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","updateWrapDetails","wrapFlags","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","rand","shuffle","some","now","Date","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","propertyIsEnumerable","getLength","isBoolean","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","objectCtorString","isSafeInteger","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","isProto","baseKeys","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","deburrLetter","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","isRegExp","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","imports","importsKeys","importsValues","isEscaping","isEvaluating","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","unescapeHtmlChar","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","Symbol","enumerate","isConcatSpreadable","ceil","floor","nativeGetPrototype","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","nativeKeys","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","reference","reLeadingDot","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","isArrayBuffer","nodeIsArrayBuffer","isDate","nodeIsDate","isMap","nodeIsMap","nodeIsRegExp","isSet","nodeIsSet","nodeIsTypedArray","lt","lte","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeGlobal","freeSelf","self","freeExports","freeModule","freeProcess","process","nodeUtil","binding","reset","shuffled","setCharacters","_alphabet_","alphabet","ORIGINAL","unique","item","ind","arr","characters","setSeed","seed","randomFromSeed","previousSeed","sourceArray","targetArray","r","nextValue","characterIndex","getShuffled","lookup","alphabetShuffled","_lodash","_lodash2","_editable_asset01Js","_editable_asset01Js2","Canvas","background","items","messages","offsetX","offsetY","active","valid","deleteItem","checkItem","deactivateItems","relayerItems","setValid","dom","ReactDOM","findDOMNode","width","offsetWidth","height","offsetHeight","getItems","left","top","scale","rotation","layer","corners","check","mime_type","setItems","addItem","asset","cb","asset_type","trigger","media_id","then","d","v","src","maxInstances","exclude","_this3","tagName","deactivate","_this4","layers","a","b","oldLayer","newLayer","relayer","isInBounds","can_overlap","util","doIntersect","x","y","getStyle","backgroundImage","renderItems","_this5","minDim","itemMinDim","renderMessages","_this6","messageMinDim","canvasWidth","canvasHeight","canvas","ACTIVE","preview","style","defaultProps","_shortid","_shortid2","_selectable01","_selectable012","ItemDrawer","_Selectable","shouldComponentUpdate","nextProps","nextState","quickCheck","itemsChanged","JSON","stringify","category","selectedItem","categoryName","scrollTop","selectButton","continueButton","cancelButton","cancelRespond","getCategory","categories","ANSWERED","getULClass","_classNames","item-drawer","_classNames2","white","renderButtons","renderItemContent","content","thumb","subitem","Image","description","aVal","window","bVal","generate","Draggable","startX","startY","endX","endY","zoom","mouseDown","mouseUp","moveEvent","touchStart","touchEnd","shouldDrag","markCorrect","correct","markIncorrect","startEvent","pageX","pageY","rect","grabX","grabY","el","targetTouches","getBoundingClientRect","dragging","return","dragRespond","attachMouseEvents","addEventListener","attachTouchEvents","endEvent","dropRespond","detachMouseEvents","removeEventListener","detachTouchEvents","setCorners","offsetLeft","offsetTop","offsetParent","componentDidMount","setZoom","draggable","DRAGGING","RETURN","CORRECT","children","_draggable01Js","_draggable01Js2","EditableAsset","_Draggable","minScale","maxScale","lastValid","adjustScale","offScale","rotate","adjustRotation","offRotate","activate","_delete","parentNode","deltaX","deltaY","atan2","PI","delta","base","pow","center","distance","angle","cos","sin","getSize","image","onload","maxDim","getLayer","attachEvents","componentDidUpdate","getButtonStyle","getAssetStyle","zIndex","getButtonsStyle","getClasses","INVALID","renderAsset","Inbox","status","read","UNREAD","friendKey","SENT","getStatusText","friends","user","timestamp","moment","utc","updated","local","friend","friend_id","_embedded","url","username","sent","format","emptyMessage","iOSSplashScreen","Screen","completeDelay","hidePrev","Loader","_selectable01Js","_selectable01Js2","Menu","ul","inactive","gotoObj","isFinal","lastLevel","level","menu","QuitScreen","_skoash$Screen","okay","close","Reveal","openReveal","open","playAudio","Audio","closeRespond","openOnStart","audio","play","voiceOver","renderAssets","assets","SavedMessages","SAVED","renderThumb","firstImg","rules","_reveal01Js","_reveal01Js2","SelectableReveal","answers","reveal","incorrect","renderSelectable","selectableList","selectableSelectClass","renderReveal","revealList","revealAssets","s","o","g","q","l","getElementsByTagName","async","insertBefore","document","ga","location","href","domain","_x4","_sharedComponentsCanvas01","_sharedComponentsCanvas012","_sharedComponentsMenu01","_sharedComponentsMenu012","_sharedComponentsSelectable01","_sharedComponentsSelectable012","CanvasScreen","load","rightMenuList","send","closeReveal","setHasAssets","hasAssets","addItems","mapRulesStringToNumbers","friend_to","setMenu","opts","draft","getContainerClasses","canvas-container","BACKGROUND","HAS-ASSETS","renderContent","hideNext","_sharedComponentsItem_drawer01Js","_sharedComponentsItem_drawer01Js2","DEFAULT_PROFILE_IMAGE","FriendScreen","recipient","goto","updateData","user_id","leave","drawer","suggestFriends","origin","save","renderOtter","renderFriends","back","buttons","_sharedComponentsSelectable_reveal01Js","_sharedComponentsSelectable_reveal01Js2","_sharedComponentsInbox01Js","_sharedComponentsInbox01Js2","_sharedComponentsSaved_messages01Js","_sharedComponentsSaved_messages01Js2","inboxEmptyMessage","unreadEmptyMessage","readEmptyMessage","sentEmptyMessage","draftsEmptyMessage","InboxScreen","getRevealList","readMessage","editMessage","inbox","outbox","saved","unread","received","ItemDrawerScreen","MenuScreen","_sharedComponentsSelectable01Js","_sharedComponentsSelectable01Js2","classNameText","skribbleBox","box","leftMenu","rightMenu","PreviewScreen","leftMenuList","sender","ReadScreen","reply","created_by","creater","skribble_id","getSenderClassNames","HIDE","renderSender","SaveMenu","yourMessageTo","isReady","changeFriend","character","gift","header","SendScreen","changeFriendClick","createAnother","text","hasBeenSent","SentScreen","nextDelay","nextIndex","config","version","dimensions","ratio","_configGame","_configGame2","_sharedComponentsLoader01","_sharedComponentsLoader012","_sharedComponentsIos_splash_screen01","_sharedComponentsIos_splash_screen012","_componentsTitle_screen","_componentsTitle_screen2","_componentsMenu_screen","_componentsMenu_screen2","_componentsFriend_screen","_componentsFriend_screen2","_componentsCanvas_screen","_componentsCanvas_screen2","_componentsItem_drawer_screen","_componentsItem_drawer_screen2","_componentsInbox_screen","_componentsInbox_screen2","_componentsPreview_screen","_componentsPreview_screen2","_componentsSend_screen","_componentsSend_screen2","_componentsSent_screen","_componentsSent_screen2","_componentsRead_screen","_componentsRead_screen2","_sharedComponentsQuit_screen01","_sharedComponentsQuit_screen012","_componentsSave_menu","_componentsSave_menu2","Skribble","_skoash$Game","screens","0","1","menus","quit","Game","ready","getMedia","getRules","skramble","skribble","skribbleData","emit","game","event","loadSkribble","pathArray","shift","currentOpts","passData","addRecipient","profile_image","clickRecipient","saveButton","openMenu","renderLoader","renderRecipient","renderMenu","decode","substr","worker","encode","loopCounter","str","randomByte","seconds","REDUCE_TIME","previousSeconds","counter","clusterWorkerId","seedValue","workerId","newCharacters","isValid","isShortId","len","crypto","getRandomValues","dest","msCrypto","getNextValue","_seed_","webpackPolyfill","deprecate"],"mappings":"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AAAoxB,kBACApxB,OAAAs3B,gBACAt3B,OAAA7K,cACA6K,OAAAolB,YACAplB,OAAAqlB,sBACArlB,OAAAslB,kBACAtlB,OAAAkzB,kBACAlzB,OAAAu5B,0BACAv5B,OAAAg4B,YACAh4B,OAAAi4B,YACAj4B,OAAAm2B,sBACAn2B,OAAAo2B,0BACAp2B,OAAAq2B,8BACAr2B,OAAAygB,UACAzgB,OAAA0gB,oBACA1gB,OAAA2gB,8BACA3gB,OAAA4gB,oBACA5gB,OAAA6gB,UACA7gB,OAAAnH,cACAmH,OAAAikB,gBACAjkB,OAAAkkB,wBACAlkB,OAAAmkB,0BACAnkB,OAAAghB,gBACAhhB,OAAAihB,wBACAjhB,OAAAkhB,0BACAlhB,OAAA8mB,UACA9mB,OAAAy6B,UACAz6B,OAAA06B,oBACA16B,OAAAmhB,oBACAnhB,OAAA8qB,oBACA9qB,OAAA+qB,wBACA/qB,OAAAy3B,gBACAz3B,OAAAqhB,gBACArhB,OAAAs2B,0BACAt2B,OAAAw2B,8BACAx2B,OAAAy2B,kCACAz2B,OAAAy5B,cACAz5B,OAAA05B,kBACA15B,OAAA03B,oBACA13B,OAAApF,kBACAoF,OAAA43B,YACA53B,OAAA7H,UACA6H,OAAAgP,cACAhP,OAAA3H,QACA2H,OAAAorB,gBACAprB,OAAAqrB,oBACArrB,OAAAsxB,gBACAtxB,OAAAuxB,gCACAvxB,OAAA+mB,gBACA/mB,OAAA45B,YACA55B,OAAAw5B,oBACAx5B,OAAA26B,cACA36B,OAAA46B,kBACA56B,OAAAwxB,YACAxxB,OAAA0kB,cACA1kB,OAAA8xB,cACA9xB,OAAA65B,UACA75B,OAAAsrB,cACAtrB,OAAAmnB,UACAnnB,OAAAskB,gBACAtkB,OAAA66B,UACA76B,OAAAk4B,kBACAl4B,OAAA86B,oBACA96B,OAAA+6B,kBACA/6B,OAAAynB,gBACAznB,OAAAo4B,0BACAp4B,OAAA63B,oBACA73B,OAAAmzB,UACAnzB,OAAAurB,cACAvrB,OAAAxJ,kBACAwJ,OAAA+xB,sBACA/xB,OAAA02B,UACA12B,OAAA0hB,gBACA1hB,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","file":"skribble/ai.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(31);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar hasOwn = {}.hasOwnProperty;\n\t\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\t\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\t\n\t\t\t\tvar argType = typeof arg;\n\t\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn classes.join(' ');\n\t\t}\n\t\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (true) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn classNames;\n\t\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar Selectable = (function (_skoash$Component) {\n\t  _inherits(Selectable, _skoash$Component);\n\t\n\t  function Selectable() {\n\t    _classCallCheck(this, Selectable);\n\t\n\t    _get(Object.getPrototypeOf(Selectable.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      selectClass: 'SELECTED',\n\t      classes: {},\n\t      list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t      selectFunction: this.select\n\t    };\n\t  }\n\t\n\t  _createClass(Selectable, [{\n\t    key: 'start',\n\t    value: function start() {\n\t      var _this = this;\n\t\n\t      var selectClass,\n\t          selectFunction,\n\t          classes = {};\n\t\n\t      selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n\t\n\t      selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\t\n\t      if (this.props.selectOnStart) {\n\t        classes[this.props.selectOnStart] = selectClass;\n\t      }\n\t\n\t      this.setState({\n\t        started: true,\n\t        classes: classes,\n\t        selectFunction: selectFunction,\n\t        selectClass: selectClass\n\t      });\n\t\n\t      this.bootstrap();\n\t\n\t      Object.keys(this.refs).map(function (key) {\n\t        if (typeof _this.refs[key].start === 'function') _this.refs[key].start();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'selectHelper',\n\t    value: function selectHelper(e, classes) {\n\t      var message, target;\n\t\n\t      target = e.target.closest('LI');\n\t\n\t      if (!target) return;\n\t\n\t      message = target.getAttribute('data-ref');\n\t      classes[message] = this.state.selectClass;\n\t\n\t      this.setState({\n\t        classes: classes\n\t      });\n\t\n\t      if (typeof this.props.selectRespond === 'function') {\n\t        this.props.selectRespond(message);\n\t      }\n\t\n\t      this.requireForComplete = this.requireForComplete.filter(function (key) {\n\t        return key !== message;\n\t      });\n\t\n\t      this.checkComplete();\n\t    }\n\t  }, {\n\t    key: 'select',\n\t    value: function select(e) {\n\t      var classes = [];\n\t      this.selectHelper(e, classes);\n\t    }\n\t  }, {\n\t    key: 'highlight',\n\t    value: function highlight(e) {\n\t      var classes = this.state.classes;\n\t      this.selectHelper(e, classes);\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key) {\n\t      return (0, _classnames2['default'])(_defineProperty({}, this.state.classes[key] || '', true));\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        selectable: true,\n\t        COMPLETE: this.state.complete\n\t      }, this.props.className);\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this2 = this;\n\t\n\t      var list = this.props.list || this.state.list;\n\t\n\t      return list.map(function (li, key) {\n\t        var ref = li.props['data-ref'] == null ? key : li.props['data-ref'];\n\t        return React.createElement(skoash.ListItem, _extends({}, li.props, {\n\t          className: (li.props.className ? li.props.className + ' ' : '') + _this2.getClass(ref),\n\t          'data-ref': ref,\n\t          ref: ref,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'ul',\n\t        { className: this.getClassNames(), onClick: this.state.selectFunction.bind(this) },\n\t        this.renderList()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Selectable;\n\t})(skoash.Component);\n\t\n\texports['default'] = Selectable;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.14.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', ARY_FLAG],\n\t    ['bind', BIND_FLAG],\n\t    ['bindKey', BIND_KEY_FLAG],\n\t    ['curry', CURRY_FLAG],\n\t    ['curryRight', CURRY_RIGHT_FLAG],\n\t    ['flip', FLIP_FLAG],\n\t    ['partial', PARTIAL_FLAG],\n\t    ['partialRight', PARTIAL_RIGHT_FLAG],\n\t    ['rearg', REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return baseFindIndex(array, baseIsNaN, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes `func` with its first argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n\t        objectCreate = context.Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\t\n\t    /** Built-in method references that are mockable. */\n\t    var clearTimeout = function(id) { return context.clearTimeout.call(root, id); },\n\t        setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(context.Object, 'create');\n\t\n\t    /* Used to set `toString` methods. */\n\t    var defineProperty = (function() {\n\t      var func = getNative(context.Object, 'defineProperty'),\n\t          name = getNative.name;\n\t\n\t      return (name && name.length > 2) ? func : undefined;\n\t    }());\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache) {\n\t        var pairs = cache.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          return this;\n\t        }\n\t        cache = this.__data__ = new MapCache(pairs);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      var index = length;\n\t      while (index--) {\n\t        var key = props[index],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined &&\n\t            !(key in Object(object))) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return object != null &&\n\t        (hasOwnProperty.call(object, key) ||\n\t          (typeof object == 'object' && key in object && getPrototype(object) === null));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    var baseKeys = overArg(nativeKeys, Object);\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return basePickBy(object, props, function(value, key) {\n\t        return key in object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick from.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, props, predicate) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return baseRest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return baseRest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\t\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    var getPrototype = overArg(nativeGetPrototype, Object);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length,\n\t          lastIndex = length - 1;\n\t\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return defineProperty(wrapper, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      string = toString(string);\n\t\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return baseFindIndex(array, baseIsNaN, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = baseRest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = baseRest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    function now() {\n\t      return Date.now();\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = baseRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = baseRest(function(func, indexes) {\n\t      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`\n\t     * and is equivalent to `_.matches` when `source` is partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = baseRest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = baseRest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = baseRest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = baseRest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function supports comparing the same values as\n\t     * `_.isEqual` is equivalent to `_.isMatch` with `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(40)(module)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar randomFromSeed = __webpack_require__(38);\n\t\n\tvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\n\tvar alphabet;\n\tvar previousSeed;\n\t\n\tvar shuffled;\n\t\n\tfunction reset() {\n\t    shuffled = false;\n\t}\n\t\n\tfunction setCharacters(_alphabet_) {\n\t    if (!_alphabet_) {\n\t        if (alphabet !== ORIGINAL) {\n\t            alphabet = ORIGINAL;\n\t            reset();\n\t        }\n\t        return;\n\t    }\n\t\n\t    if (_alphabet_ === alphabet) {\n\t        return;\n\t    }\n\t\n\t    if (_alphabet_.length !== ORIGINAL.length) {\n\t        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n\t    }\n\t\n\t    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n\t       return ind !== arr.lastIndexOf(item);\n\t    });\n\t\n\t    if (unique.length) {\n\t        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n\t    }\n\t\n\t    alphabet = _alphabet_;\n\t    reset();\n\t}\n\t\n\tfunction characters(_alphabet_) {\n\t    setCharacters(_alphabet_);\n\t    return alphabet;\n\t}\n\t\n\tfunction setSeed(seed) {\n\t    randomFromSeed.seed(seed);\n\t    if (previousSeed !== seed) {\n\t        reset();\n\t        previousSeed = seed;\n\t    }\n\t}\n\t\n\tfunction shuffle() {\n\t    if (!alphabet) {\n\t        setCharacters(ORIGINAL);\n\t    }\n\t\n\t    var sourceArray = alphabet.split('');\n\t    var targetArray = [];\n\t    var r = randomFromSeed.nextValue();\n\t    var characterIndex;\n\t\n\t    while (sourceArray.length > 0) {\n\t        r = randomFromSeed.nextValue();\n\t        characterIndex = Math.floor(r * sourceArray.length);\n\t        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n\t    }\n\t    return targetArray.join('');\n\t}\n\t\n\tfunction getShuffled() {\n\t    if (shuffled) {\n\t        return shuffled;\n\t    }\n\t    shuffled = shuffle();\n\t    return shuffled;\n\t}\n\t\n\t/**\n\t * lookup shuffled letter\n\t * @param index\n\t * @returns {string}\n\t */\n\tfunction lookup(index) {\n\t    var alphabetShuffled = getShuffled();\n\t    return alphabetShuffled[index];\n\t}\n\t\n\tmodule.exports = {\n\t    characters: characters,\n\t    seed: setSeed,\n\t    lookup: lookup,\n\t    shuffled: getShuffled\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _editable_asset01Js = __webpack_require__(8);\n\t\n\tvar _editable_asset01Js2 = _interopRequireDefault(_editable_asset01Js);\n\t\n\tvar Canvas = (function (_skoash$Component) {\n\t  _inherits(Canvas, _skoash$Component);\n\t\n\t  function Canvas() {\n\t    _classCallCheck(this, Canvas);\n\t\n\t    _get(Object.getPrototypeOf(Canvas.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      background: null,\n\t      items: [],\n\t      messages: [],\n\t      offsetX: 0,\n\t      offsetY: 0,\n\t      active: false,\n\t      valid: true\n\t    };\n\t\n\t    this.deleteItem = this.deleteItem.bind(this);\n\t    this.checkItem = this.checkItem.bind(this);\n\t    this.deactivateItems = this.deactivateItems.bind(this);\n\t    this.relayerItems = this.relayerItems.bind(this);\n\t    this.setValid = this.setValid.bind(this);\n\t  }\n\t\n\t  _createClass(Canvas, [{\n\t    key: 'start',\n\t    value: function start() {\n\t      var dom = ReactDOM.findDOMNode(this);\n\t\n\t      _get(Object.getPrototypeOf(Canvas.prototype), 'start', this).call(this);\n\t\n\t      this.setState({\n\t        width: dom.offsetWidth,\n\t        height: dom.offsetHeight\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getItems',\n\t    value: function getItems() {\n\t      var items,\n\t          messages,\n\t          self = this;\n\t\n\t      items = this.state.items.map(function (item, key) {\n\t        var state;\n\t\n\t        if (!self.refs['item-' + key]) return item;\n\t\n\t        state = self.refs['item-' + key].state;\n\t\n\t        item.state = {\n\t          left: _lodash2['default'].floor(state.left, 14),\n\t          top: _lodash2['default'].floor(state.top, 14),\n\t          scale: _lodash2['default'].floor(state.scale, 14),\n\t          rotation: _lodash2['default'].floor(state.rotation, 14),\n\t          layer: state.layer,\n\t          valid: state.valid,\n\t          corners: state.corners\n\t        };\n\t\n\t        item.check = state.check;\n\t        item.mime_type = state.mime_type; // eslint-disable-line camelcase\n\t\n\t        return item;\n\t      });\n\t\n\t      messages = this.state.messages.map(function (item, key) {\n\t        var state;\n\t\n\t        if (!self.refs['message-' + key]) return item;\n\t\n\t        state = self.refs['message-' + key].state;\n\t\n\t        item.state = {\n\t          left: _lodash2['default'].floor(state.left, 14),\n\t          top: _lodash2['default'].floor(state.top, 14),\n\t          scale: _lodash2['default'].floor(state.scale, 14),\n\t          rotation: _lodash2['default'].floor(state.rotation, 14),\n\t          layer: state.layer,\n\t          valid: state.valid,\n\t          corners: state.corners\n\t        };\n\t\n\t        item.check = state.check;\n\t        item.mime_type = state.mime_type; // eslint-disable-line camelcase\n\t\n\t        return item;\n\t      });\n\t\n\t      _lodash2['default'].remove(items, function (n) {\n\t        return !n;\n\t      });\n\t\n\t      _lodash2['default'].remove(messages, function (n) {\n\t        return !n;\n\t      });\n\t\n\t      return {\n\t        background: this.state.background,\n\t        items: items,\n\t        messages: messages\n\t      };\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.setState({\n\t        background: null,\n\t        items: [],\n\t        messages: []\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setItems',\n\t    value: function setItems(message) {\n\t      var _this = this;\n\t\n\t      if (message) {\n\t        /*\n\t         *\n\t         * This makes sure the EditableAssets get cleared.\n\t         *\n\t         * This prevents the new assets from inheriting\n\t         * state from the old assets.\n\t         *\n\t         */\n\t        this.setState({\n\t          background: null,\n\t          items: [],\n\t          messages: []\n\t        }, function () {\n\t          _this.addItem(message.background);\n\t          message.items.forEach(function (asset) {\n\t            _this.addItem(asset);\n\t          });\n\t          message.messages.forEach(function (asset) {\n\t            _this.addItem(asset);\n\t          });\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addItem',\n\t    value: function addItem(asset, cb) {\n\t      var _this2 = this;\n\t\n\t      var items, messages, index, count;\n\t\n\t      if (!asset) return;\n\t\n\t      if (asset.asset_type === 'background') {\n\t        this.setState({\n\t          background: asset\n\t        }, function () {\n\t          skoash.trigger('emit', {\n\t            name: 'getMedia',\n\t            'media_id': asset.media_id\n\t          }).then(function (d) {\n\t            var background = _this2.state.background;\n\t            background.check = d.check;\n\t            background.mime_type = d.mime_type; // eslint-disable-line camelcase\n\t            _this2.setState({\n\t              background: background\n\t            }, cb);\n\t          });\n\t        });\n\t      } else if (asset.asset_type === 'item') {\n\t        items = this.state.items;\n\t\n\t        count = _lodash2['default'].reduce(items, function (c, v) {\n\t          if (asset.src === v.src) c++;\n\t          return c;\n\t        }, 1);\n\t\n\t        if (count > this.props.maxInstances) return;\n\t\n\t        items.push(asset);\n\t        index = items.indexOf(asset);\n\t\n\t        this.setState({\n\t          items: items\n\t        }, function () {\n\t          skoash.trigger('emit', {\n\t            name: 'getMedia',\n\t            'media_id': asset.media_id\n\t          }).then(function (d) {\n\t            asset.check = d.check;\n\t            asset.mime_type = d.mime_type; // eslint-disable-line camelcase\n\t            items[index] = asset;\n\t            _this2.setState({\n\t              items: items\n\t            }, cb);\n\t          });\n\t        });\n\t      } else if (asset.asset_type === 'message') {\n\t        messages = this.state.messages;\n\t\n\t        count = _lodash2['default'].reduce(items, function (c, v) {\n\t          if (asset.src === v.src) c++;\n\t          return c;\n\t        }, 1);\n\t\n\t        if (count > this.props.maxInstances) return;\n\t\n\t        messages.push(asset);\n\t        index = messages.indexOf(asset);\n\t\n\t        this.setState({\n\t          messages: messages\n\t        }, function () {\n\t          skoash.trigger('emit', {\n\t            name: 'getMedia',\n\t            'media_id': asset.media_id\n\t          }).then(function (d) {\n\t            asset.check = d.check;\n\t            asset.mime_type = d.mime_type; // eslint-disable-line camelcase\n\t            messages[index] = asset;\n\t            _this2.setState({\n\t              messages: messages\n\t            }, cb);\n\t          });\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'deleteItem',\n\t    value: function deleteItem(key, type) {\n\t      var items;\n\t\n\t      items = this.state[type + 's'];\n\t      delete items[key];\n\t\n\t      this.setState(_defineProperty({}, type + 's', items));\n\t    }\n\t  }, {\n\t    key: 'deactivateItems',\n\t    value: function deactivateItems(exclude, type) {\n\t      var _this3 = this;\n\t\n\t      if (typeof exclude === 'object' && exclude.target) {\n\t        if (exclude.target.tagName !== 'LI') {\n\t          return;\n\t        }\n\t        this.setState({\n\t          active: false\n\t        });\n\t      }\n\t\n\t      if (typeof exclude === 'number') {\n\t        this.setState({\n\t          active: true\n\t        });\n\t      }\n\t\n\t      this.state.items.map(function (item, key) {\n\t        if ((key !== exclude || type !== 'item') && _this3.refs['item-' + key]) {\n\t          _this3.refs['item-' + key].deactivate();\n\t        }\n\t      });\n\t\n\t      this.state.messages.map(function (item, key) {\n\t        if ((key !== exclude || type !== 'message') && _this3.refs['message-' + key]) {\n\t          _this3.refs['message-' + key].deactivate();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'relayerItems',\n\t    value: function relayerItems(type) {\n\t      var _this4 = this;\n\t\n\t      var layers = [];\n\t\n\t      this.state[type + 's'].map(function (item, key) {\n\t        var layer;\n\t\n\t        layer = _this4.refs[type + '-' + key].state.layer;\n\t\n\t        if (layers.indexOf(layer) === -1) {\n\t          layers.push(layer);\n\t        }\n\t      });\n\t\n\t      layers.sort(function (a, b) {\n\t        return a < b;\n\t      });\n\t\n\t      this.state[type + 's'].map(function (item, key) {\n\t        var oldLayer, newLayer;\n\t\n\t        oldLayer = _this4.refs[type + '-' + key].state.layer;\n\t        newLayer = type === 'message' ? 10000 : 1000;\n\t        newLayer = newLayer - layers.indexOf(oldLayer);\n\t\n\t        _this4.refs[type + '-' + key].relayer(newLayer);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'checkItem',\n\t    value: function checkItem(key, type) {\n\t      var self = this;\n\t\n\t      return !self.refs[type + '-' + key].state.corners.length || self.isInBounds(key, type) && (self.refs[type + '-' + key].state.can_overlap || !self.state[type + 's'].some(function (item, index) {\n\t        return key !== index && !self.refs[type + '-' + index].state.can_overlap && self.refs[type + '-' + index].state.corners.length && skoash.util.doIntersect(self.refs[type + '-' + key].state.corners, self.refs[type + '-' + index].state.corners);\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'isInBounds',\n\t    value: function isInBounds(key, type) {\n\t      return !this.state.width || !this.state.height || !(\n\t      // box to left\n\t      skoash.util.doIntersect(this.refs[type + '-' + key].state.corners, [{ x: 0, y: -this.state.height }, { x: 0, y: 2 * this.state.height }, { x: -this.state.width, y: 2 * this.state.height }, { x: -this.state.width, y: -this.state.height }]) ||\n\t      // box above\n\t      skoash.util.doIntersect(this.refs[type + '-' + key].state.corners, [{ x: -this.state.width, y: 0 }, { x: 2 * this.state.width, y: 0 }, { x: 2 * this.state.width, y: -this.state.height }, { x: this.state.width, y: -this.state.height }]) ||\n\t      // box to right\n\t      skoash.util.doIntersect(this.refs[type + '-' + key].state.corners, [{ x: this.state.width, y: -this.state.height }, { x: this.state.width, y: 2 * this.state.height }, { x: 2 * this.state.width, y: 2 * this.state.height }, { x: 2 * this.state.width, y: -this.state.height }]) ||\n\t      // box below\n\t      skoash.util.doIntersect(this.refs[type + '-' + key].state.corners, [{ x: -this.state.width, y: this.state.height }, { x: 2 * this.state.width, y: this.state.height }, { x: 2 * this.state.width, y: 2 * this.state.height }, { x: -this.state.width, y: 2 * this.state.height }]));\n\t    }\n\t  }, {\n\t    key: 'setValid',\n\t    value: function setValid(valid) {\n\t      this.setState({\n\t        valid: valid\n\t      });\n\t\n\t      if (typeof this.props.setValid === 'function') {\n\t        this.props.setValid(valid);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      if (!this.state.background) return;\n\t\n\t      return {\n\t        backgroundImage: 'url(' + this.state.background.src + ')'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'renderItems',\n\t    value: function renderItems() {\n\t      var _this5 = this;\n\t\n\t      var self = this;\n\t\n\t      return this.state.items.map(function (item, key) {\n\t        return React.createElement(_editable_asset01Js2['default'], _extends({}, item, {\n\t          'data-ref': key,\n\t          minDim: _this5.props.itemMinDim,\n\t          deleteItem: self.deleteItem,\n\t          checkItem: self.checkItem,\n\t          deactivateItems: self.deactivateItems,\n\t          relayerItems: self.relayerItems,\n\t          setValid: self.setValid,\n\t          ref: 'item-' + key,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderMessages',\n\t    value: function renderMessages() {\n\t      var _this6 = this;\n\t\n\t      var self = this;\n\t\n\t      return this.state.messages.map(function (item, key) {\n\t        return React.createElement(_editable_asset01Js2['default'], _extends({}, item, {\n\t          'data-ref': key,\n\t          minDim: _this6.props.messageMinDim,\n\t          deleteItem: self.deleteItem,\n\t          checkItem: self.checkItem,\n\t          deactivateItems: self.deactivateItems,\n\t          relayerItems: self.relayerItems,\n\t          setValid: self.setValid,\n\t          canvasWidth: _this6.state.width,\n\t          canvasHeight: _this6.state.height,\n\t          ref: 'message-' + key,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        canvas: true,\n\t        ACTIVE: !this.props.preview && this.state.active\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'ul',\n\t        {\n\t          className: this.getClassNames(),\n\t          style: this.getStyle(),\n\t          onClick: this.deactivateItems\n\t        },\n\t        this.renderItems(),\n\t        this.renderMessages()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Canvas;\n\t})(skoash.Component);\n\t\n\tCanvas.defaultProps = _lodash2['default'].defaults({\n\t  maxInstances: 5\n\t}, skoash.Component.defaultProps);\n\t\n\texports['default'] = Canvas;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _shortid = __webpack_require__(32);\n\t\n\tvar _shortid2 = _interopRequireDefault(_shortid);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _selectable01 = __webpack_require__(2);\n\t\n\tvar _selectable012 = _interopRequireDefault(_selectable01);\n\t\n\tvar ItemDrawer = (function (_Selectable) {\n\t  _inherits(ItemDrawer, _Selectable);\n\t\n\t  function ItemDrawer() {\n\t    _classCallCheck(this, ItemDrawer);\n\t\n\t    _get(Object.getPrototypeOf(ItemDrawer.prototype), 'constructor', this).call(this);\n\t  }\n\t\n\t  _createClass(ItemDrawer, [{\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      var items, quickCheck, itemsChanged;\n\t\n\t      if (JSON.stringify(this.state.classes) !== JSON.stringify(nextState.classes)) {\n\t        return true;\n\t      }\n\t\n\t      items = nextProps.data || [];\n\t\n\t      if (nextState.category && items[nextState.category]) {\n\t        items = items[nextState.category].items;\n\t      }\n\t\n\t      quickCheck = _lodash2['default'].reduce(items, function (a, i) {\n\t        a += i.name;\n\t        return a;\n\t      }, '');\n\t\n\t      itemsChanged = this.quickCheck !== quickCheck;\n\t      if (itemsChanged) {\n\t        this.quickCheck = quickCheck;\n\t      }\n\t\n\t      return itemsChanged;\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      var items,\n\t          selectedItem,\n\t          selectFunction,\n\t          classes = {},\n\t          self = this;\n\t\n\t      selectFunction = this.state.selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\t\n\t      items = self.props.data || [];\n\t\n\t      if (self.state.category && items[self.state.category]) {\n\t        items = items[self.state.category].items;\n\t      }\n\t\n\t      selectedItem = JSON.stringify(self.props.selectedItem);\n\t\n\t      _lodash2['default'].each(items, function (item, key) {\n\t        if (self.props.selectedItem && JSON.stringify(item) === selectedItem) {\n\t          classes[key] = self.state.selectClass;\n\t        }\n\t      });\n\t\n\t      if (this.props.selectOnStart) {\n\t        classes[this.props.selectOnStart] = this.state.selectClass;\n\t      }\n\t\n\t      this.setState({\n\t        started: true,\n\t        classes: classes,\n\t        selectFunction: selectFunction,\n\t        categoryName: '',\n\t        category: ''\n\t      });\n\t\n\t      this.refs.list.scrollTop = 0;\n\t\n\t      _lodash2['default'].each(self.refs, function (ref) {\n\t        if (typeof ref.start === 'function') ref.start();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'selectHelper',\n\t    value: function selectHelper(e) {\n\t      var li,\n\t          message,\n\t          key,\n\t          type,\n\t          categoryName,\n\t          classes = [];\n\t\n\t      li = e.target.closest('LI');\n\t      if (!li) return;\n\t\n\t      key = li.getAttribute('data-ref');\n\t      if (!this.refs[key]) return;\n\t\n\t      type = this.refs[key].props.item.asset_type;\n\t      if (!type) return;\n\t\n\t      if (type === 'folder') {\n\t        categoryName = this.refs[key].props.item.name;\n\t        this.setState({\n\t          category: key,\n\t          categoryName: categoryName\n\t        });\n\t      } else {\n\t        message = this.refs[key].props.item;\n\t        classes[key] = this.state.selectClass;\n\t\n\t        this.setState({\n\t          message: message,\n\t          classes: classes\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'selectButton',\n\t    value: function selectButton() {\n\t      if (typeof this.props.selectRespond === 'function') {\n\t        this.props.selectRespond(this.state.message);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'continueButton',\n\t    value: function continueButton() {\n\t      if (typeof this.props.selectRespond === 'function') {\n\t        this.props.selectRespond({});\n\t      }\n\t    }\n\t  }, {\n\t    key: 'cancelButton',\n\t    value: function cancelButton() {\n\t      if (typeof this.props.cancelRespond === 'function') {\n\t        this.props.cancelRespond.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      if (this.state.categoryName) {\n\t        return this.state.categoryName;\n\t      }\n\t\n\t      if (this.props.categories && this.props.categories.length) {\n\t        return this.props.categories[this.props.categories.length - 1];\n\t      }\n\t      return '';\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        'ANSWERED': _lodash2['default'].values(this.state.classes).indexOf(this.state.selectClass) !== -1\n\t      }, this.props.className, 'item-drawer-component');\n\t    }\n\t  }, {\n\t    key: 'getULClass',\n\t    value: function getULClass() {\n\t      var _classNames;\n\t\n\t      var categories = '';\n\t\n\t      if (this.props.categories) {\n\t        categories = this.props.categories.join(' ');\n\t      }\n\t\n\t      return (0, _classnames2['default'])((_classNames = {\n\t        'item-drawer': true\n\t      }, _defineProperty(_classNames, categories, true), _defineProperty(_classNames, 'COMPLETE', this.state.complete), _classNames));\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key, item) {\n\t      var _classNames2;\n\t\n\t      var white = item && item.name && item.name.toLowerCase().indexOf('w.') !== -1;\n\t\n\t      return (0, _classnames2['default'])((_classNames2 = {}, _defineProperty(_classNames2, this.state.classes[key] || '', true), _defineProperty(_classNames2, 'white', white), _classNames2));\n\t    }\n\t  }, {\n\t    key: 'renderButtons',\n\t    value: function renderButtons() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'buttons' },\n\t        React.createElement('button', { className: 'select', onClick: this.selectButton.bind(this) }),\n\t        React.createElement('button', { className: 'continue', onClick: this.continueButton.bind(this) }),\n\t        React.createElement('button', { className: 'cancel', onClick: this.cancelButton.bind(this) })\n\t      );\n\t    }\n\t  }, {\n\t    key: 'renderItemContent',\n\t    value: function renderItemContent(item) {\n\t      var content = [],\n\t          src;\n\t\n\t      if (item.src || item.thumb) {\n\t        src = item.thumb || item.src;\n\t      } else if (item.items) {\n\t        if (!_lodash2['default'].isArray(item.items)) {\n\t          item.items = _lodash2['default'].values(item.items);\n\t        }\n\t\n\t        if (item.items[0]) {\n\t          src = item.items[0].thumb || item.items[0].src;\n\t        }\n\t\n\t        item.items.some(function (subitem) {\n\t          if (subitem.name === '_thumb.png') {\n\t            src = subitem.thumb || subitem.src;\n\t            return true;\n\t          }\n\t        });\n\t      }\n\t\n\t      if (src) {\n\t        content.push(React.createElement(skoash.Image, { src: src, key: 0 }));\n\t      }\n\t\n\t      if (item.name && (item.asset_type === 'folder' || item.asset_type === 'friend')) {\n\t        content.push(React.createElement(\n\t          'span',\n\t          { className: 'name', key: 1 },\n\t          item.name\n\t        ));\n\t      }\n\t\n\t      if (item.description) {\n\t        content.push(React.createElement(\n\t          'span',\n\t          { className: 'description', key: 2 },\n\t          item.description\n\t        ));\n\t      }\n\t\n\t      return content;\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this = this;\n\t\n\t      var items,\n\t          self = this;\n\t\n\t      if (!this.props.data) return;\n\t\n\t      items = this.props.data;\n\t\n\t      if (this.state.category && items[this.state.category]) {\n\t        items = items[this.state.category].items;\n\t      }\n\t\n\t      if (!_lodash2['default'].isArray(items)) {\n\t        items = _lodash2['default'].values(items);\n\t      }\n\t\n\t      return items.sort(function (a, b) {\n\t        var aVal = !_lodash2['default'].isNaN(window.parseInt(a.order)) ? window.parseInt(a.order) : Infinity;\n\t        var bVal = !_lodash2['default'].isNaN(window.parseInt(b.order)) ? window.parseInt(b.order) : Infinity;\n\t        if (aVal === bVal) {\n\t          if (a.name < b.name) return -1;\n\t          if (a.name > b.name) return 1;\n\t          return 0;\n\t        }\n\t        if (aVal < bVal) return -1;\n\t        return 1;\n\t      }).map(function (item, key) {\n\t        return React.createElement(\n\t          skoash.ListItem,\n\t          {\n\t            className: _this.getClass(key, item),\n\t            ref: key,\n\t            'data-ref': key,\n\t            item: item,\n\t            key: _shortid2['default'].generate()\n\t          },\n\t          self.renderItemContent(item)\n\t        );\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.getClassNames() },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'item-drawer-container' },\n\t          React.createElement(\n\t            'h2',\n\t            null,\n\t            this.getCategory()\n\t          ),\n\t          React.createElement(\n\t            'ul',\n\t            { ref: 'list', className: this.getULClass(), onClick: this.state.selectFunction.bind(this) },\n\t            this.renderList()\n\t          )\n\t        ),\n\t        this.renderButtons()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ItemDrawer;\n\t})(_selectable012['default']);\n\t\n\texports['default'] = ItemDrawer;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar Draggable = (function (_skoash$Component) {\n\t  _inherits(Draggable, _skoash$Component);\n\t\n\t  function Draggable() {\n\t    _classCallCheck(this, Draggable);\n\t\n\t    _get(Object.getPrototypeOf(Draggable.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      startX: 0,\n\t      startY: 0,\n\t      endX: 0,\n\t      endY: 0,\n\t      zoom: 1\n\t    };\n\t\n\t    this.mouseDown = this.mouseDown.bind(this);\n\t    this.mouseUp = this.mouseUp.bind(this);\n\t\n\t    this.moveEvent = this.moveEvent.bind(this);\n\t\n\t    this.touchStart = this.touchStart.bind(this);\n\t    this.touchEnd = this.touchEnd.bind(this);\n\t  }\n\t\n\t  _createClass(Draggable, [{\n\t    key: 'shouldDrag',\n\t    value: function shouldDrag() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'markCorrect',\n\t    value: function markCorrect() {\n\t      this.setState({\n\t        correct: true\n\t      });\n\t    }\n\t  }, {\n\t    key: 'markIncorrect',\n\t    value: function markIncorrect() {\n\t      this.setState({\n\t        correct: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'startEvent',\n\t    value: function startEvent(e, cb) {\n\t      var pageX, pageY, rect, startX, startY, endX, endY, grabX, grabY;\n\t\n\t      if (e.target !== this.refs.el) return;\n\t      if (!this.shouldDrag()) return;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        pageX = e.targetTouches[0].pageX;\n\t        pageY = e.targetTouches[0].pageY;\n\t        rect = e.target.getBoundingClientRect();\n\t        e = e.targetTouches[0];\n\t        e.offsetX = pageX - rect.left;\n\t        e.offsetY = pageY - rect.top;\n\t      }\n\t\n\t      grabX = e.offsetX;\n\t      grabY = e.offsetY;\n\t\n\t      startX = endX = e.pageX - grabX;\n\t      startY = endY = e.pageY - grabY;\n\t\n\t      if (!this.props['return']) {\n\t        startX = _lodash2['default'].isFinite(this.state.grabX) ? this.state.startX + this.state.grabX - grabX : startX;\n\t        startY = _lodash2['default'].isFinite(this.state.grabY) ? this.state.startY + this.state.grabY - grabY : startY;\n\t      }\n\t\n\t      this.setState({\n\t        dragging: true,\n\t        'return': false,\n\t        startX: startX,\n\t        startY: startY,\n\t        grabX: grabX,\n\t        grabY: grabY,\n\t        endX: endX,\n\t        endY: endY\n\t      });\n\t\n\t      if (typeof this.props.dragRespond === 'function') {\n\t        this.props.dragRespond(this.props.message);\n\t      }\n\t\n\t      if (typeof cb === 'function') {\n\t        cb.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'attachMouseEvents',\n\t    value: function attachMouseEvents() {\n\t      window.addEventListener('mousemove', this.moveEvent);\n\t      window.addEventListener('mouseup', this.mouseUp);\n\t    }\n\t  }, {\n\t    key: 'attachTouchEvents',\n\t    value: function attachTouchEvents() {\n\t      window.addEventListener('touchmove', this.moveEvent);\n\t      window.addEventListener('touchend', this.touchEnd);\n\t    }\n\t  }, {\n\t    key: 'mouseDown',\n\t    value: function mouseDown(e) {\n\t      this.startEvent(e, this.attachMouseEvents);\n\t    }\n\t  }, {\n\t    key: 'touchStart',\n\t    value: function touchStart(e) {\n\t      this.startEvent(e, this.attachTouchEvents);\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t        e.pageY = e.targetTouches[0].pageY;\n\t      }\n\t\n\t      this.setState({\n\t        endX: e.pageX - this.state.grabX,\n\t        endY: e.pageY - this.state.grabY\n\t      });\n\t    }\n\t  }, {\n\t    key: 'endEvent',\n\t    value: function endEvent(cb) {\n\t      this.dropRespond();\n\t\n\t      if (this.props['return']) {\n\t        this.setState({\n\t          dragging: false,\n\t          'return': this.props['return'],\n\t          endX: this.state.startX,\n\t          endY: this.state.startY\n\t        });\n\t      } else {\n\t        this.setState({\n\t          dragging: false,\n\t          'return': this.props['return']\n\t        });\n\t      }\n\t\n\t      if (typeof cb === 'function') {\n\t        cb.call(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'detachMouseEvents',\n\t    value: function detachMouseEvents() {\n\t      window.removeEventListener('mousemove', this.moveEvent);\n\t      window.removeEventListener('mouseup', this.mouseUp);\n\t    }\n\t  }, {\n\t    key: 'detachTouchEvents',\n\t    value: function detachTouchEvents() {\n\t      window.removeEventListener('touchmove', this.moveEvent);\n\t      window.removeEventListener('touchend', this.touchEnd);\n\t    }\n\t  }, {\n\t    key: 'mouseUp',\n\t    value: function mouseUp() {\n\t      this.endEvent(this.detachMouseEvents);\n\t    }\n\t  }, {\n\t    key: 'touchEnd',\n\t    value: function touchEnd() {\n\t      this.endEvent(this.detachTouchEvents);\n\t    }\n\t  }, {\n\t    key: 'dropRespond',\n\t    value: function dropRespond() {\n\t      var corners;\n\t\n\t      corners = this.setCorners();\n\t\n\t      if (typeof this.props.dropRespond === 'function') {\n\t        this.props.dropRespond(this.props.message, corners);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setCorners',\n\t    value: function setCorners() {\n\t      var top,\n\t          left,\n\t          width,\n\t          height,\n\t          el,\n\t          corners = [];\n\t\n\t      left = 0;\n\t      top = 0;\n\t      el = this.refs.el;\n\t      width = el.offsetWidth;\n\t      height = el.offsetHeight;\n\t\n\t      while (el) {\n\t        if (el.className.indexOf('screen') !== -1) {\n\t          break;\n\t        }\n\t\n\t        left += el.offsetLeft || 0;\n\t        top += el.offsetTop || 0;\n\t        el = el.offsetParent;\n\t      }\n\t\n\t      left += (this.state.endX - this.state.startX) / this.state.zoom;\n\t      top += (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t      for (var i = 0; i < 4; i++) {\n\t        corners.push({\n\t          x: left + width * (i === 1 || i === 2 ? 1 : 0),\n\t          y: top + height * (i > 1 ? 1 : 0)\n\t        });\n\t      }\n\t\n\t      this.setState({\n\t        corners: corners\n\t      });\n\t\n\t      return corners;\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bootstrap();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      skoash.Component.prototype.bootstrap.call(this);\n\t\n\t      this.setZoom();\n\t\n\t      this.refs.el.addEventListener('mousedown', this.mouseDown);\n\t      this.refs.el.addEventListener('touchstart', this.touchStart);\n\t\n\t      window.addEventListener('resize', this.setZoom.bind(this));\n\t    }\n\t  }, {\n\t    key: 'setZoom',\n\t    value: function setZoom() {\n\t      this.setState({\n\t        zoom: skoash.trigger('getState').scale\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      var x, y; // eslint-disable-line no-unused-vars\n\t\n\t      x = (this.state.endX - this.state.startX) / this.state.zoom;\n\t      y = (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t      return {\n\t        transform: 'translateX(' + x + 'px) translateY(' + y + 'px)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        draggable: true,\n\t        DRAGGING: this.state.dragging,\n\t        RETURN: this.state['return'],\n\t        CORRECT: this.state.correct\n\t      }, this.props.className);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          ref: 'el',\n\t          className: this.getClassNames(),\n\t          style: this.getStyle()\n\t        },\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Draggable;\n\t})(skoash.Component);\n\t\n\texports['default'] = Draggable;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _draggable01Js = __webpack_require__(7);\n\t\n\tvar _draggable01Js2 = _interopRequireDefault(_draggable01Js);\n\t\n\tvar EditableAsset = (function (_Draggable) {\n\t  _inherits(EditableAsset, _Draggable);\n\t\n\t  function EditableAsset() {\n\t    _classCallCheck(this, EditableAsset);\n\t\n\t    _get(Object.getPrototypeOf(EditableAsset.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      width: 0,\n\t      height: 0,\n\t      left: 0,\n\t      top: 0,\n\t      scale: .5,\n\t      minScale: .1,\n\t      maxScale: 1,\n\t      rotation: 0,\n\t      layer: 1000,\n\t      zoom: 1,\n\t      active: false,\n\t      valid: true,\n\t      corners: [],\n\t      lastValid: {}\n\t    };\n\t\n\t    this.scale = this.scale.bind(this);\n\t    this.adjustScale = this.adjustScale.bind(this);\n\t    this.offScale = this.offScale.bind(this);\n\t\n\t    this.rotate = this.rotate.bind(this);\n\t    this.adjustRotation = this.adjustRotation.bind(this);\n\t    this.offRotate = this.offRotate.bind(this);\n\t  }\n\t\n\t  _createClass(EditableAsset, [{\n\t    key: 'shouldDrag',\n\t    value: function shouldDrag() {\n\t      return this.state.active;\n\t    }\n\t  }, {\n\t    key: 'activate',\n\t    value: function activate() {\n\t      this.setState({\n\t        active: true\n\t      });\n\t\n\t      if (typeof this.props.deactivateItems === 'function') {\n\t        this.props.deactivateItems(this.props['data-ref'], this.props.asset_type);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'deactivate',\n\t    value: function deactivate() {\n\t      var _this = this;\n\t\n\t      if (!this.state.valid) {\n\t        this.setState({\n\t          left: this.state.lastValid.left || this.state.left,\n\t          top: this.state.lastValid.top || this.state.top,\n\t          scale: this.state.lastValid.scale || this.state.scale,\n\t          rotation: this.state.lastValid.rotation || this.state.rotation,\n\t          active: false\n\t        }, function () {\n\t          setTimeout(function () {\n\t            _this.checkItem();\n\t          }, 0);\n\t        });\n\t      } else {\n\t        this.setState({\n\t          active: false\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moveEvent',\n\t    value: function moveEvent(e) {\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t        e.pageY = e.targetTouches[0].pageY;\n\t      }\n\t\n\t      this.setState({\n\t        endX: e.pageX - this.state.grabX,\n\t        endY: e.pageY - this.state.grabY,\n\t        left: (e.pageX - this.state.grabX - this.state.startX) / this.state.zoom,\n\t        top: (e.pageY - this.state.grabY - this.state.startY) / this.state.zoom\n\t      });\n\t      this.checkItem();\n\t    }\n\t  }, {\n\t    key: 'delete',\n\t    value: function _delete() {\n\t      if (typeof this.props.deleteItem === 'function') {\n\t        this.props.deleteItem(this.props['data-ref'], this.props.asset_type);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'rotate',\n\t    value: function rotate() {\n\t      this.refs.el.parentNode.addEventListener('mousemove', this.adjustRotation);\n\t      this.refs.el.parentNode.addEventListener('mouseup', this.offRotate);\n\t\n\t      this.refs.el.parentNode.addEventListener('touchmove', this.adjustRotation);\n\t      this.refs.el.parentNode.addEventListener('touchend', this.offRotate);\n\t    }\n\t  }, {\n\t    key: 'offRotate',\n\t    value: function offRotate() {\n\t      this.refs.el.parentNode.removeEventListener('mousemove', this.adjustRotation);\n\t      this.refs.el.parentNode.removeEventListener('mouseup', this.offRotate);\n\t\n\t      this.refs.el.parentNode.removeEventListener('touchmove', this.adjustRotation);\n\t      this.refs.el.parentNode.removeEventListener('touchend', this.offRotate);\n\t    }\n\t  }, {\n\t    key: 'adjustRotation',\n\t    value: function adjustRotation(e) {\n\t      var rotation, deltaX, deltaY;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t        e.pageY = e.targetTouches[0].pageY;\n\t      }\n\t\n\t      deltaX = e.pageX / this.state.zoom - this.refs.li.offsetParent.offsetLeft - (this.state.left + this.state.width / 2);\n\t      deltaY = e.pageY / this.state.zoom - this.refs.li.offsetParent.offsetTop - (this.state.top + this.state.height / 2);\n\t\n\t      rotation = Math.atan2(deltaY, deltaX) + Math.PI / 4 % (2 * Math.PI);\n\t\n\t      this.setState({\n\t        rotation: rotation\n\t      });\n\t\n\t      this.checkItem();\n\t    }\n\t  }, {\n\t    key: 'layer',\n\t    value: function layer() {\n\t      var layer,\n\t          self = this;\n\t\n\t      layer = this.state.layer - 1;\n\t\n\t      this.setState({\n\t        layer: layer\n\t      }, function () {\n\t        if (typeof self.props.relayerItems === 'function') {\n\t          self.props.relayerItems(self.props.asset_type);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'relayer',\n\t    value: function relayer(layer) {\n\t      this.setState({\n\t        layer: layer\n\t      });\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale() {\n\t      this.refs.el.parentNode.addEventListener('mousemove', this.adjustScale);\n\t      this.refs.el.parentNode.addEventListener('mouseup', this.offScale);\n\t\n\t      this.refs.el.parentNode.addEventListener('touchmove', this.adjustScale);\n\t      this.refs.el.parentNode.addEventListener('touchend', this.offScale);\n\t    }\n\t  }, {\n\t    key: 'offScale',\n\t    value: function offScale() {\n\t      this.refs.el.parentNode.removeEventListener('mousemove', this.adjustScale);\n\t      this.refs.el.parentNode.removeEventListener('mouseup', this.offScale);\n\t\n\t      this.refs.el.parentNode.removeEventListener('touchmove', this.adjustScale);\n\t      this.refs.el.parentNode.removeEventListener('touchend', this.offScale);\n\t    }\n\t  }, {\n\t    key: 'adjustScale',\n\t    value: function adjustScale(e) {\n\t      var scale, deltaX, deltaY, delta, base;\n\t\n\t      if (e.targetTouches && e.targetTouches[0]) {\n\t        e.pageX = e.targetTouches[0].pageX;\n\t        e.pageY = e.targetTouches[0].pageY;\n\t      }\n\t\n\t      deltaX = e.pageX / this.state.zoom - this.refs.li.offsetParent.offsetLeft / this.state.zoom - (this.state.left / this.state.zoom + this.state.width / 2);\n\t      deltaY = e.pageY / this.state.zoom - this.refs.li.offsetParent.offsetTop / this.state.zoom - (this.state.top / this.state.zoom + this.state.height / 2);\n\t\n\t      delta = Math.pow(Math.pow(deltaX, 2) + Math.pow(deltaY, 2), .5);\n\t      base = Math.pow(Math.pow(this.state.width / 2, 2) + Math.pow(this.state.height / 2, 2), .5);\n\t\n\t      scale = Math.max(Math.min(delta / base, 1), this.state.minScale);\n\t\n\t      this.setState({\n\t        scale: scale\n\t      });\n\t\n\t      this.checkItem();\n\t    }\n\t  }, {\n\t    key: 'checkItem',\n\t    value: function checkItem() {\n\t      var _this2 = this;\n\t\n\t      this.setCorners(function () {\n\t        var valid;\n\t\n\t        if (typeof _this2.props.checkItem === 'function') {\n\t          valid = _this2.props.checkItem(_this2.props['data-ref'], _this2.props.asset_type);\n\t\n\t          if (valid) {\n\t            _this2.setState({\n\t              valid: valid,\n\t              lastValid: new Object(_this2.state)\n\t            });\n\t          } else {\n\t            _this2.setState({\n\t              valid: valid\n\t            });\n\t          }\n\t\n\t          if (typeof _this2.props.setValid === 'function') {\n\t            _this2.props.setValid(valid);\n\t          }\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setCorners',\n\t    value: function setCorners(cb) {\n\t      var center,\n\t          distance,\n\t          angle,\n\t          corners = [];\n\t\n\t      center = {\n\t        x: this.state.left + this.state.width / 2,\n\t        y: this.state.top + this.state.height / 2\n\t      };\n\t\n\t      distance = Math.pow(Math.pow(this.state.width * this.state.scale / 2, 2) + Math.pow(this.state.height * this.state.scale / 2, 2), .5);\n\t\n\t      for (var i = 0; i < 4; i++) {\n\t        angle = this.state.rotation;\n\t        angle += i < 2 ? 0 : Math.PI;\n\t        angle += Math.pow(-1, i) * Math.atan2(this.state.height, this.state.width);\n\t\n\t        corners.push({\n\t          x: center.x + distance * Math.cos(angle),\n\t          y: center.y + distance * Math.sin(angle)\n\t        });\n\t      }\n\t\n\t      this.setState({\n\t        corners: corners\n\t      }, cb);\n\t    }\n\t  }, {\n\t    key: 'getSize',\n\t    value: function getSize() {\n\t      var _this3 = this;\n\t\n\t      var image,\n\t          self = this;\n\t\n\t      image = new Image();\n\t\n\t      image.onload = function () {\n\t        var left, top, width, height, minDim, maxDim, minScale, maxScale, scale;\n\t\n\t        minDim = _this3.props.minDim || 40;\n\t        maxDim = _this3.props.maxDim || 400;\n\t        left = _this3.state.left;\n\t        top = _this3.state.top;\n\t        width = image.width;\n\t        height = image.height;\n\t\n\t        minScale = Math.max(minDim / width, minDim / height);\n\t        maxScale = Math.min(maxDim / width, maxDim / height, _this3.state.maxScale);\n\t        scale = self.props.state && self.props.state.scale ? self.props.state.scale : Math.max(Math.min(self.state.scale, maxScale), minScale);\n\t\n\t        if ((!_this3.state.height || !_this3.state.width) && !_this3.state.left && !_this3.state.top) {\n\t          left = (_this3.props.canvasWidth - width) / 2;\n\t          top = (_this3.props.canvasHeight - height) / 2;\n\t        }\n\t\n\t        self.setState({\n\t          left: left,\n\t          top: top,\n\t          width: width,\n\t          height: height,\n\t          minScale: minScale,\n\t          scale: scale\n\t        }, function () {\n\t          self.activate();\n\t          self.checkItem();\n\t        });\n\t      };\n\t\n\t      image.src = this.props.src;\n\t    }\n\t  }, {\n\t    key: 'getLayer',\n\t    value: function getLayer() {\n\t      var layer = 1000;\n\t\n\t      if (this.props.state && this.props.state.layer) {\n\t        layer = this.props.state.layer;\n\t      } else {\n\t        switch (this.props.asset_type) {\n\t          case 'background':\n\t            layer = 1;\n\t            break;\n\t          case 'message':\n\t            layer = 10000;\n\t            break;\n\t        }\n\t      }\n\t\n\t      this.setState({\n\t        layer: layer\n\t      });\n\t    }\n\t  }, {\n\t    key: 'attachEvents',\n\t    value: function attachEvents() {\n\t      this.refs.scale.addEventListener('mousedown', this.scale);\n\t      this.refs.rotate.addEventListener('mousedown', this.rotate);\n\t\n\t      this.refs.scale.addEventListener('touchstart', this.scale);\n\t      this.refs.rotate.addEventListener('touchstart', this.rotate);\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.bootstrap();\n\t    }\n\t  }, {\n\t    key: 'bootstrap',\n\t    value: function bootstrap() {\n\t      var _this4 = this;\n\t\n\t      _get(Object.getPrototypeOf(EditableAsset.prototype), 'bootstrap', this).call(this);\n\t\n\t      if (this.props.state) {\n\t        this.setState(this.props.state);\n\t      }\n\t\n\t      this.getSize();\n\t      this.getLayer();\n\t\n\t      this.attachEvents();\n\t\n\t      skoash.trigger('emit', {\n\t        name: 'getMedia',\n\t        'media_id': this.props.media_id\n\t      }).then(function (d) {\n\t        _this4.setState(d, function () {\n\t          _this4.checkItem();\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate() {\n\t      this.attachEvents();\n\t    }\n\t  }, {\n\t    key: 'getButtonStyle',\n\t    value: function getButtonStyle() {\n\t      var style,\n\t          transform = '';\n\t\n\t      transform += 'scale(' + 1 / this.state.scale + ') ';\n\t      transform += 'rotate(' + -this.state.rotation + 'rad) ';\n\t\n\t      style = {\n\t        transform: transform\n\t      };\n\t\n\t      return style;\n\t    }\n\t  }, {\n\t    key: 'getAssetStyle',\n\t    value: function getAssetStyle() {\n\t      var style,\n\t          transform = '';\n\t\n\t      transform += 'scale(' + this.state.scale + ') ';\n\t      transform += 'rotate(' + this.state.rotation + 'rad) ';\n\t\n\t      style = {\n\t        backgroundImage: 'url(\"' + this.props.src + '\")',\n\t        width: this.state.width,\n\t        height: this.state.height,\n\t        left: this.state.left,\n\t        top: this.state.top,\n\t        transform: transform,\n\t        zIndex: this.state.layer\n\t      };\n\t\n\t      return style;\n\t    }\n\t  }, {\n\t    key: 'getButtonsStyle',\n\t    value: function getButtonsStyle() {\n\t      var style,\n\t          transform = '';\n\t\n\t      transform += 'scale(' + this.state.scale + ') ';\n\t      transform += 'rotate(' + this.state.rotation + 'rad) ';\n\t\n\t      style = {\n\t        width: this.state.width,\n\t        height: this.state.height,\n\t        left: this.state.left,\n\t        top: this.state.top,\n\t        transform: transform\n\t      };\n\t\n\t      return style;\n\t    }\n\t  }, {\n\t    key: 'getClasses',\n\t    value: function getClasses() {\n\t      return (0, _classnames2['default'])({\n\t        DRAGGING: this.state.dragging,\n\t        RETURN: this.state['return'],\n\t        ACTIVE: this.state.active,\n\t        INVALID: !this.state.valid\n\t      }, 'editable-asset', this.props.asset_type);\n\t    }\n\t  }, {\n\t    key: 'renderAsset',\n\t    value: function renderAsset() {\n\t      return React.createElement('div', {\n\t        ref: 'el',\n\t        className: 'asset',\n\t        style: this.getAssetStyle()\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderButtons',\n\t    value: function renderButtons() {\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          className: 'buttons',\n\t          style: this.getButtonsStyle()\n\t        },\n\t        React.createElement('button', {\n\t          className: 'delete',\n\t          style: this.getButtonStyle(),\n\t          onClick: this['delete'].bind(this)\n\t        }),\n\t        React.createElement('button', {\n\t          ref: 'rotate',\n\t          className: 'rotate',\n\t          style: this.getButtonStyle()\n\t        }),\n\t        React.createElement('button', {\n\t          className: 'layer',\n\t          onClick: this.layer.bind(this),\n\t          style: this.getButtonStyle()\n\t        }),\n\t        React.createElement('button', {\n\t          ref: 'scale',\n\t          className: 'scale',\n\t          style: this.getButtonStyle()\n\t        })\n\t      );\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'li',\n\t        {\n\t          ref: 'li',\n\t          className: this.getClasses(),\n\t          onClick: this.activate.bind(this)\n\t        },\n\t        this.renderAsset(),\n\t        this.renderButtons()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return EditableAsset;\n\t})(_draggable01Js2['default']);\n\t\n\tEditableAsset.defaultProps = _lodash2['default'].defaults({\n\t  canvasWidth: 1280,\n\t  canvasHeight: 720\n\t}, _draggable01Js2['default'].defaultProps);\n\t\n\texports['default'] = EditableAsset;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _selectable01 = __webpack_require__(2);\n\t\n\tvar _selectable012 = _interopRequireDefault(_selectable01);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar Inbox = (function (_Selectable) {\n\t  _inherits(Inbox, _Selectable);\n\t\n\t  function Inbox() {\n\t    _classCallCheck(this, Inbox);\n\t\n\t    _get(Object.getPrototypeOf(Inbox.prototype), 'constructor', this).call(this);\n\t  }\n\t\n\t  _createClass(Inbox, [{\n\t    key: 'selectHelper',\n\t    value: function selectHelper(e) {\n\t      var li,\n\t          message,\n\t          key,\n\t          classes = [];\n\t\n\t      li = e.target.closest('LI');\n\t\n\t      if (!li) return;\n\t\n\t      key = li.getAttribute('data-ref');\n\t\n\t      if (!this.refs[key]) return;\n\t\n\t      message = this.refs[key].props.item;\n\t      classes[key] = this.state.selectClass;\n\t\n\t      this.setState({\n\t        message: message,\n\t        classes: classes\n\t      });\n\t\n\t      if (message.status !== 'COMPLETE') return;\n\t\n\t      if (typeof this.props.selectRespond === 'function' && message) {\n\t        this.props.selectRespond(message);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key, read) {\n\t      return (0, _classnames2['default'])(this.state.classes[key], {\n\t        UNREAD: this.props.friendKey === 'created_by' && !read,\n\t        SENT: this.props.friendKey !== 'created_by'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        'item-drawer': true,\n\t        COMPLETE: this.state.complete\n\t      }, this.props.className);\n\t    }\n\t  }, {\n\t    key: 'getStatusText',\n\t    value: function getStatusText(item) {\n\t      if (!item.status || item.status === 'COMPLETE') return '';\n\t      return item.status;\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this = this;\n\t\n\t      var items, friends;\n\t\n\t      if (!this.props.data || !this.props.data.items) return;\n\t\n\t      items = this.props.data.items;\n\t\n\t      if (!items.length) {\n\t        return React.createElement(\n\t          'li',\n\t          { className: 'empty' },\n\t          this.props.emptyMessage\n\t        );\n\t      }\n\t\n\t      friends = skoash.trigger('getState').data.user || [];\n\t\n\t      return items.map(function (item, key) {\n\t        var timestamp, image, name;\n\t        timestamp = moment.utc(item.updated).local();\n\t        key = 'message-' + key;\n\t\n\t        friends.forEach(function (friend) {\n\t          if (item[_this.props.friendKey] === friend.friend_id) {\n\t            image = friend._embedded.image ? friend._embedded.image.url : '';\n\t            name = friend.username;\n\t          }\n\t        });\n\t\n\t        if (!name) {\n\t          skoash.trigger('getData', {\n\t            name: 'getFriend',\n\t            'friend_id': item[_this.props.friendKey]\n\t          });\n\t        }\n\t\n\t        if (_this.props.friendKey === 'friend_to') {\n\t          item.sent = true;\n\t        }\n\t\n\t        return React.createElement(\n\t          skoash.ListItem,\n\t          {\n\t            className: _this.getClass(key, item.read),\n\t            ref: key,\n\t            'data-ref': key,\n\t            item: item,\n\t            key: key\n\t          },\n\t          React.createElement(skoash.Image, { src: image }),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'username' },\n\t            name\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'timestamp' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'date' },\n\t              timestamp.format('MM.DD.YY')\n\t            ),\n\t            React.createElement(\n\t              'span',\n\t              { className: 'time' },\n\t              timestamp.format('h:mm a')\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'status ' + item.status },\n\t            _this.getStatusText(item)\n\t          )\n\t        );\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: this.getClassNames(), onClick: this.state.selectFunction.bind(this) },\n\t          this.renderList()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Inbox;\n\t})(_selectable012['default']);\n\t\n\tInbox.defaultProps = _lodash2['default'].defaults({\n\t  friendKey: 'created_by'\n\t}, _selectable012['default'].defaultProps);\n\t\n\texports['default'] = Inbox;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports[\"default\"] = function (props, ref, key) {\n\t  var iOSSplashScreen = React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"ios-splash\",\n\t      checkComplete: false,\n\t      completeDelay: 6000,\n\t      hidePrev: true\n\t    }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball.png\" }),\n\t    React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball_anim.gif\" })\n\t  );\n\t\n\t  return iOSSplashScreen;\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Loader = (function (_skoash$Component) {\n\t  _inherits(Loader, _skoash$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    _get(Object.getPrototypeOf(Loader.prototype), \"constructor\", this).call(this);\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        \"div\",\n\t        { id: \"loader\", className: \"center\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"group\" },\n\t          React.createElement(\n\t            \"h2\",\n\t            null,\n\t            \"Loading!\"\n\t          ),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"spinner animated\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"spinner animated\" },\n\t              React.createElement(\"div\", { className: \"spinner animated\" })\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t})(skoash.Component);\n\t\n\texports[\"default\"] = Loader;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _selectable01Js = __webpack_require__(2);\n\t\n\tvar _selectable01Js2 = _interopRequireDefault(_selectable01Js);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar Menu = (function (_Selectable) {\n\t  _inherits(Menu, _Selectable);\n\t\n\t  function Menu() {\n\t    _classCallCheck(this, Menu);\n\t\n\t    _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      active: false,\n\t      selectClass: 'SELECTED',\n\t      classes: {}\n\t    };\n\t  }\n\t\n\t  _createClass(Menu, [{\n\t    key: 'deactivate',\n\t    value: function deactivate() {\n\t      var self = this;\n\t\n\t      this.setState({\n\t        active: false\n\t      });\n\t\n\t      Object.keys(this.refs).map(function (key) {\n\t        if (typeof self.refs[key].deactivate === 'function') {\n\t          self.refs[key].deactivate();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'onClick',\n\t    value: function onClick(e) {\n\t      var li,\n\t          ul,\n\t          dom,\n\t          message,\n\t          active = false,\n\t          classes = [];\n\t\n\t      li = e.target.closest('LI');\n\t\n\t      if (!li) return;\n\t\n\t      ul = li.closest('UL');\n\t      dom = ReactDOM.findDOMNode(this); // eslint-disable-line no-undef\n\t\n\t      if (ul !== dom) return;\n\t\n\t      message = li.getAttribute('data-ref');\n\t\n\t      if (this.state.classes[message] !== this.state.selectClass) {\n\t        classes[message] = this.state.selectClass;\n\t        active = !this.props.inactive;\n\t      }\n\t\n\t      this.setState({\n\t        classes: classes,\n\t        active: active\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderItems',\n\t    value: function renderItems() {\n\t      var _this = this;\n\t\n\t      var self = this;\n\t\n\t      if (typeof this.props.items !== 'object') return;\n\t\n\t      return Object.keys(this.props.items).map(function (key) {\n\t        var item, onClick, gotoObj, categories, isFinal;\n\t\n\t        categories = _this.props.categories ? [].concat(_this.props.categories) : [];\n\t        categories.push(key);\n\t\n\t        item = _this.props.items[key];\n\t\n\t        isFinal = typeof item.items !== 'object' || Object.prototype.toString.call(item.items) === '[object Array]' || typeof self.props.lastLevel === 'number' && self.props.lastLevel === self.props.level;\n\t\n\t        if (isFinal) {\n\t          gotoObj = {\n\t            index: 'item-drawer',\n\t            categories: categories\n\t          };\n\t          onClick = skoash.trigger.bind(null, 'goto', gotoObj);\n\t        }\n\t\n\t        return React.createElement(\n\t          skoash.ListItem,\n\t          {\n\t            className: self.getClass(key),\n\t            'data-ref': key,\n\t            ref: key,\n\t            key: key,\n\t            onClick: onClick\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            key\n\t          ),\n\t          (function () {\n\t            if (isFinal) return;\n\t            return React.createElement(Menu, {\n\t              ref: 'menu-' + key,\n\t              categories: categories,\n\t              items: item.items,\n\t              inactive: true,\n\t              level: (self.props.level || 0) + 1,\n\t              lastLevel: self.props.lastLevel\n\t            });\n\t          })()\n\t        );\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key) {\n\t      var _classNames;\n\t\n\t      return (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, key.replace(' ', '-'), true), _defineProperty(_classNames, this.state.classes[key] || '', true), _classNames));\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        menu: true,\n\t        ACTIVE: this.state.active\n\t      }, this.props.className);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'ul',\n\t        {\n\t          className: this.getClassNames(),\n\t          onClick: this.onClick.bind(this)\n\t        },\n\t        this.renderItems()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Menu;\n\t})(_selectable01Js2['default']);\n\t\n\texports['default'] = Menu;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar QuitScreen = (function (_skoash$Screen) {\n\t  _inherits(QuitScreen, _skoash$Screen);\n\t\n\t  function QuitScreen() {\n\t    _classCallCheck(this, QuitScreen);\n\t\n\t    _get(Object.getPrototypeOf(QuitScreen.prototype), 'constructor', this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(QuitScreen, [{\n\t    key: 'okay',\n\t    value: function okay() {\n\t      skoash.trigger('quit');\n\t    }\n\t  }, {\n\t    key: 'cancel',\n\t    value: function cancel() {\n\t      this.close();\n\t      skoash.trigger('menuClose', {\n\t        id: this.state.id\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { id: this.props.id, className: this.getClassNames() },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'center' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'frame' },\n\t            React.createElement(\n\t              'h2',\n\t              null,\n\t              'Are you sure you',\n\t              React.createElement('br', null),\n\t              'want to quit?'\n\t            ),\n\t            React.createElement(\n\t              'h3',\n\t              null,\n\t              'Your game progress will be saved'\n\t            ),\n\t            React.createElement('button', { className: 'quit-yes', onClick: this.okay.bind(this) }),\n\t            React.createElement('button', { className: 'quit-no', onClick: this.cancel.bind(this) })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuitScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = React.createElement(QuitScreen, {\n\t  id: 'quit'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Reveal = (function (_skoash$Component) {\n\t  _inherits(Reveal, _skoash$Component);\n\t\n\t  function Reveal() {\n\t    _classCallCheck(this, Reveal);\n\t\n\t    _get(Object.getPrototypeOf(Reveal.prototype), 'constructor', this).call(this);\n\t\n\t    this.list = [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)];\n\t\n\t    this.state = {\n\t      openReveal: ''\n\t    };\n\t  }\n\t\n\t  _createClass(Reveal, [{\n\t    key: 'open',\n\t    value: function open(message) {\n\t      var _this = this;\n\t\n\t      this.setState({\n\t        open: true,\n\t        openReveal: message\n\t      });\n\t\n\t      this.playAudio(message);\n\t\n\t      this.requireForComplete = this.requireForComplete.filter(function (item) {\n\t        return item !== message || _this.refs[message] instanceof skoash.Audio;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      this.setState({\n\t        open: false,\n\t        openReveal: ''\n\t      });\n\t\n\t      if (typeof this.props.closeRespond === 'function') {\n\t        this.props.closeRespond();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      skoash.Component.prototype.start.call(this);\n\t      this.close();\n\t\n\t      if (this.props.openOnStart != null) {\n\t        this.open(this.props.openOnStart);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'playAudio',\n\t    value: function playAudio(message) {\n\t      var _this2 = this;\n\t\n\t      var messages;\n\t\n\t      if (this.audio['open-sound']) {\n\t        this.audio['open-sound'].play();\n\t      }\n\t\n\t      if (typeof message === 'string') {\n\t        messages = message.split(' ');\n\t        messages.map(function (audio) {\n\t          if (_this2.audio[audio]) {\n\t            _this2.audio[audio].play();\n\t          }\n\t        });\n\t      } else {\n\t        if (this.audio.voiceOver[message]) {\n\t          this.audio.voiceOver[message].play();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      if (this.props.assets) {\n\t        return this.props.assets.map(function (asset, key) {\n\t          return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t            ref: asset.props['data-ref'] || 'asset-' + key,\n\t            key: key,\n\t            'data-ref': key\n\t          }));\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var _this3 = this;\n\t\n\t      var list = this.props.list || this.list;\n\t\n\t      return list.map(function (li, key) {\n\t        var ref = li.props['data-ref'] == null ? key : li.props['data-ref'];\n\t        return React.createElement('li', _extends({}, li.props, {\n\t          className: _this3.getClass(li, key),\n\t          'data-ref': ref,\n\t          ref: key,\n\t          key: key\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(li, key) {\n\t      var classes = '';\n\t\n\t      if (li.props.className) classes += li.props.className;\n\t      if (this.state.openReveal.indexOf(key) !== -1) classes += ' OPEN';\n\t      if (this.state.openReveal.indexOf(li.props['data-ref']) !== -1) classes += ' OPEN';\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'getClasses',\n\t    value: function getClasses() {\n\t      var classes = '';\n\t\n\t      if (this.state.open) classes += 'OPEN';\n\t      if (this.state.complete) classes += ' COMPLETE';\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'reveal ' + this.getClasses() },\n\t        this.renderAssets(),\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'ul',\n\t            null,\n\t            this.renderList()\n\t          ),\n\t          React.createElement('button', { className: 'close-reveal', onClick: this.close.bind(this) })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Reveal;\n\t})(skoash.Component);\n\t\n\texports['default'] = Reveal;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _selectable01 = __webpack_require__(2);\n\t\n\tvar _selectable012 = _interopRequireDefault(_selectable01);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar SavedMessages = (function (_Selectable) {\n\t  _inherits(SavedMessages, _Selectable);\n\t\n\t  function SavedMessages() {\n\t    _classCallCheck(this, SavedMessages);\n\t\n\t    _get(Object.getPrototypeOf(SavedMessages.prototype), 'constructor', this).call(this);\n\t  }\n\t\n\t  _createClass(SavedMessages, [{\n\t    key: 'selectHelper',\n\t    value: function selectHelper(e) {\n\t      var li,\n\t          message,\n\t          key,\n\t          classes = [];\n\t\n\t      li = e.target.closest('LI');\n\t\n\t      if (!li) return;\n\t\n\t      key = li.getAttribute('data-ref');\n\t\n\t      message = this.refs[key].props.item;\n\t      classes[key] = this.state.selectClass;\n\t\n\t      this.setState({\n\t        message: message,\n\t        classes: classes\n\t      }, this.selectRespond.bind(this));\n\t    }\n\t  }, {\n\t    key: 'selectRespond',\n\t    value: function selectRespond() {\n\t      if (typeof this.props.selectRespond === 'function' && this.state.message) {\n\t        this.props.selectRespond(this.state.message);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getClass',\n\t    value: function getClass(key) {\n\t      var _classNames;\n\t\n\t      return (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, this.state.classes[key] || '', true), _defineProperty(_classNames, 'DRAFT', true), _classNames));\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        'item-drawer': true,\n\t        SAVED: true,\n\t        COMPLETE: this.state.complete\n\t      }, this.props.className);\n\t    }\n\t  }, {\n\t    key: 'renderThumb',\n\t    value: function renderThumb(item) {\n\t      var firstImg, background;\n\t\n\t      background = item && item.rules && item.rules.background && item.rules.background.src ? item.rules.background.src : '';\n\t\n\t      firstImg = item && item.rules && item.rules.items && item.rules.items[0] && item.rules.items[0].src ? item.rules.items[0].src : item && item.rules && item.rules.messages && item.rules.messages[0] && item.rules.messages[0].src ? item.rules.messages[0].src : '';\n\t\n\t      return React.createElement(\n\t        'div',\n\t        {\n\t          className: 'thumbnail',\n\t          style: {\n\t            backgroundImage: 'url(' + background + ')'\n\t          }\n\t        },\n\t        React.createElement(skoash.Image, { src: firstImg })\n\t      );\n\t    }\n\t  }, {\n\t    key: 'renderList',\n\t    value: function renderList() {\n\t      var items,\n\t          self = this;\n\t\n\t      if (!self.props.data || !self.props.data.items) return;\n\t\n\t      items = self.props.data.items;\n\t\n\t      if (!items.length) {\n\t        return React.createElement(\n\t          'li',\n\t          { className: 'empty' },\n\t          this.props.emptyMessage\n\t        );\n\t      }\n\t\n\t      return items.map(function (item, key) {\n\t        var timestamp = moment.utc(item.updated).local();\n\t        return React.createElement(\n\t          skoash.ListItem,\n\t          {\n\t            className: self.getClass(key),\n\t            ref: key,\n\t            'data-ref': key,\n\t            item: item,\n\t            key: key\n\t          },\n\t          self.renderThumb(item),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'timestamp' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'date' },\n\t              timestamp.format('MM.DD.YY')\n\t            ),\n\t            React.createElement(\n\t              'span',\n\t              { className: 'time' },\n\t              timestamp.format('h:mm a')\n\t            )\n\t          )\n\t        );\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: this.getClassNames(), onClick: this.state.selectFunction.bind(this) },\n\t          this.renderList()\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SavedMessages;\n\t})(_selectable012['default']);\n\t\n\texports['default'] = SavedMessages;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _selectable01Js = __webpack_require__(2);\n\t\n\tvar _selectable01Js2 = _interopRequireDefault(_selectable01Js);\n\t\n\tvar _reveal01Js = __webpack_require__(14);\n\t\n\tvar _reveal01Js2 = _interopRequireDefault(_reveal01Js);\n\t\n\tvar SelectableReveal = (function (_skoash$Component) {\n\t  _inherits(SelectableReveal, _skoash$Component);\n\t\n\t  function SelectableReveal() {\n\t    _classCallCheck(this, SelectableReveal);\n\t\n\t    _get(Object.getPrototypeOf(SelectableReveal.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      answers: []\n\t    };\n\t  }\n\t\n\t  _createClass(SelectableReveal, [{\n\t    key: 'open',\n\t    value: function open(message) {\n\t      this.refs.reveal.open(message);\n\t    }\n\t  }, {\n\t    key: 'selectRespond',\n\t    value: function selectRespond(message) {\n\t      if (this.state.answers.length) {\n\t        if (this.state.answers.indexOf(message) === -1) {\n\t          if (this.audio.incorrect) this.audio.incorrect.play();\n\t        } else {\n\t          if (this.audio.correct) this.audio.correct.play();\n\t          if (typeof this.refs.reveal.open === 'function') {\n\t            this.open(message);\n\t          }\n\t        }\n\t      } else {\n\t        if (typeof this.refs.reveal.open === 'function') {\n\t          this.open(message);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'closeRespond',\n\t    value: function closeRespond() {\n\t      if (typeof this.props.closeRespond === 'function') {\n\t        this.props.closeRespond();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      if (this.props.assets) {\n\t        return this.props.assets.map(function (asset, key) {\n\t          return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t            ref: asset.props['data-ref'] || 'asset-' + key,\n\t            key: key,\n\t            'data-ref': key\n\t          }));\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'renderSelectable',\n\t    value: function renderSelectable() {\n\t      return React.createElement(_selectable01Js2['default'], {\n\t        ref: 'selectable',\n\t        list: this.props.selectableList,\n\t        selectRespond: this.selectRespond.bind(this),\n\t        selectClass: this.props.selectableSelectClass,\n\t        selectOnStart: this.props.selectOnStart\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderReveal',\n\t    value: function renderReveal() {\n\t      return React.createElement(_reveal01Js2['default'], {\n\t        ref: 'reveal',\n\t        list: this.props.revealList,\n\t        assets: this.props.revealAssets,\n\t        closeRespond: this.closeRespond.bind(this),\n\t        openOnStart: this.props.openOnStart\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClasses',\n\t    value: function getClasses() {\n\t      var classes = '';\n\t\n\t      if (this.state.complete) classes += ' COMPLETE';\n\t\n\t      return classes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'selectable-reveal' + this.getClasses() },\n\t        this.renderAssets(),\n\t        this.renderSelectable(),\n\t        this.renderReveal()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SelectableReveal;\n\t})(skoash.Component);\n\t\n\texports['default'] = SelectableReveal;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (i, s, o, g, r, a, m) {\n\t  i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {\n\t    (i[r].q = i[r].q || []).push(arguments);\n\t  }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);\n\t})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\t\n\tga('create', 'UA-26000499-1', 'auto');\n\tga('send', 'pageview');\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function test() {\n\t  if (window.parent === window) {\n\t    window.location.href = 'https://www.changemyworldnow.com/';\n\t  } else {\n\t    document.domain = 'changemyworldnow.com';\n\t  }\n\t})();\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _sharedComponentsCanvas01 = __webpack_require__(5);\n\t\n\tvar _sharedComponentsCanvas012 = _interopRequireDefault(_sharedComponentsCanvas01);\n\t\n\tvar _sharedComponentsMenu01 = __webpack_require__(12);\n\t\n\tvar _sharedComponentsMenu012 = _interopRequireDefault(_sharedComponentsMenu01);\n\t\n\tvar _sharedComponentsSelectable01 = __webpack_require__(2);\n\t\n\tvar _sharedComponentsSelectable012 = _interopRequireDefault(_sharedComponentsSelectable01);\n\t\n\t// import Reveal from 'shared/components/reveal/0.1';\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar CanvasScreen = (function (_skoash$Screen) {\n\t  _inherits(CanvasScreen, _skoash$Screen);\n\t\n\t  function CanvasScreen() {\n\t    _classCallCheck(this, CanvasScreen);\n\t\n\t    _get(Object.getPrototypeOf(CanvasScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      load: true,\n\t      menu: {},\n\t      valid: true\n\t    };\n\t\n\t    this.rightMenuList = [React.createElement(\n\t      'li',\n\t      { className: 'preview', onClick: this.preview.bind(this) },\n\t      React.createElement('span', null)\n\t    ), React.createElement(\n\t      'li',\n\t      { className: 'send', onClick: this.send.bind(this) },\n\t      React.createElement('span', null)\n\t    )];\n\t\n\t    this.setValid = this.setValid.bind(this);\n\t    this.closeReveal = this.closeReveal.bind(this);\n\t    this.setHasAssets = this.setHasAssets.bind(this);\n\t  }\n\t\n\t  _createClass(CanvasScreen, [{\n\t    key: 'getData',\n\t    value: function getData() {\n\t      return this.refs.canvas.getItems();\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.refs.canvas.reset();\n\t      this.setState({\n\t        background: false,\n\t        hasAssets: false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addItem',\n\t    value: function addItem(message) {\n\t      if (message) {\n\t        this.setState({\n\t          hasAssets: true,\n\t          background: this.state.background || message.asset_type === 'background'\n\t        });\n\t        this.refs.canvas.addItem(message, function () {\n\t          skoash.trigger('save');\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addItems',\n\t    value: function addItems(message) {\n\t      var hasAssets, background;\n\t\n\t      hasAssets = true;\n\t      background = !!message.rules.background;\n\t\n\t      this.mapRulesStringToNumbers(message.rules);\n\t\n\t      this.refs.canvas.setItems(message.rules);\n\t\n\t      this.setState({\n\t        hasAssets: hasAssets,\n\t        background: background\n\t      });\n\t\n\t      if (message.friend_to) {\n\t        skoash.trigger('passData', {\n\t          name: 'add-recipient',\n\t          message: message.friend_to\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setMenu',\n\t    value: function setMenu() {\n\t      var menu, state;\n\t      state = skoash.trigger('getState');\n\t\n\t      if (state && state.data && state.data.menu) {\n\t        menu = state.data.menu;\n\t        this.setState({\n\t          menu: menu\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'mapRulesStringToNumbers',\n\t    value: function mapRulesStringToNumbers(rules) {\n\t      if (!rules) return;\n\t\n\t      if (_lodash2['default'].isArray(rules.items)) {\n\t        rules.items.forEach(function (item) {\n\t          item.state.left = parseFloat(item.state.left);\n\t          item.state.rotation = parseFloat(item.state.rotation);\n\t          item.state.scale = parseFloat(item.state.scale);\n\t          item.state.top = parseFloat(item.state.top);\n\t        });\n\t      }\n\t\n\t      if (_lodash2['default'].isArray(rules.messages)) {\n\t        rules.messages.forEach(function (message) {\n\t          message.state.left = parseFloat(message.state.left);\n\t          message.state.rotation = parseFloat(message.state.rotation);\n\t          message.state.scale = parseFloat(message.state.scale);\n\t          message.state.top = parseFloat(message.state.top);\n\t        });\n\t      }\n\t\n\t      return rules;\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open() {\n\t      var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      this.setMenu();\n\t\n\t      if (this.refs && this.refs.menu) {\n\t        this.refs.menu.deactivate();\n\t      }\n\t\n\t      if (!opts.draft) skoash.trigger('save');\n\t\n\t      // interval = setInterval(() => {\n\t      //   skoash.trigger('save');\n\t      // }, 120000);\n\t\n\t      // this.setState({\n\t      //   interval\n\t      // });\n\t\n\t      _get(Object.getPrototypeOf(CanvasScreen.prototype), 'open', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      skoash.trigger('save');\n\t      // clearInterval(this.state.interval);\n\t      // this.setState({\n\t      //   interval: null\n\t      // });\n\t      _get(Object.getPrototypeOf(CanvasScreen.prototype), 'close', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'setValid',\n\t    value: function setValid(valid) {\n\t      this.setState({\n\t        valid: valid\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setHasAssets',\n\t    value: function setHasAssets(hasAssets) {\n\t      this.setState({\n\t        hasAssets: hasAssets\n\t      });\n\t    }\n\t  }, {\n\t    key: 'send',\n\t    value: function send() {\n\t      if (!this.state.valid) return;\n\t      this.goto('send');\n\t    }\n\t  }, {\n\t    key: 'preview',\n\t    value: function preview() {\n\t      if (!this.state.valid) return;\n\t      this.goto('preview');\n\t    }\n\t  }, {\n\t    key: 'closeReveal',\n\t    value: function closeReveal() {\n\t      if (this.refs && this.refs.reveal) {\n\t        this.refs.reveal.close();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getContainerClasses',\n\t    value: function getContainerClasses() {\n\t      return (0, _classnames2['default'])({\n\t        'canvas-container': true,\n\t        BACKGROUND: this.state.background\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getClassNames',\n\t    value: function getClassNames() {\n\t      return (0, _classnames2['default'])({\n\t        'HAS-ASSETS': this.state.hasAssets,\n\t        'INVALID': !this.state.valid\n\t      }, skoash.Screen.prototype.getClassNames.call(this));\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(skoash.Image, { className: 'hidden', src: 'media/_Frames/SK_frames_canvas.png' }),\n\t        React.createElement(skoash.Image, { className: 'hidden', src: 'media/_Buttons/SK_btn_friend.png' }),\n\t        React.createElement(_sharedComponentsMenu012['default'], {\n\t          ref: 'menu',\n\t          items: this.state.menu.items,\n\t          level: 0,\n\t          lastLevel: 1\n\t        }),\n\t        React.createElement(\n\t          'div',\n\t          { className: this.getContainerClasses() },\n\t          React.createElement(_sharedComponentsCanvas012['default'], {\n\t            ref: 'canvas',\n\t            setValid: this.setValid,\n\t            setHasAssets: this.setHasAssets,\n\t            itemMinDim: 150\n\t          })\n\t        ),\n\t        React.createElement(_sharedComponentsSelectable012['default'], { className: 'menu right-menu', list: this.rightMenuList })\n\t      );\n\t      // move this back up below the Selectable when there is an instructional help video\n\t      /*\n\t          <Reveal\n\t            ref=\"reveal\"\n\t            openOnStart=\"0\"\n\t            list={[\n\t              <li>\n\t                <skoash.Image className=\"otter\" src={'media/_Otter/Otter_Static_GreetingTwo.png'} />\n\t                <div className=\"bubble\">\n\t                  Welcome to your canvas!<br/><br/>\n\t                  Would you like me<br/>\n\t                  to show you around?\n\t                  <div className=\"buttons\">\n\t                    <button\n\t                      className=\"yes\"\n\t                      onClick={skoash.trigger.bind(null, 'openMenu', {id: 'help'})}\n\t                    />\n\t                    <button\n\t                      className=\"no\"\n\t                      onClick={this.closeReveal}\n\t                    />\n\t                  </div>\n\t                </div>\n\t              </li>\n\t            ]}\n\t          />\n\t      */\n\t    }\n\t  }]);\n\t\n\t  return CanvasScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(CanvasScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'canvas',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _sharedComponentsItem_drawer01Js = __webpack_require__(6);\n\t\n\tvar _sharedComponentsItem_drawer01Js2 = _interopRequireDefault(_sharedComponentsItem_drawer01Js);\n\t\n\tvar DEFAULT_PROFILE_IMAGE = 'https://changemyworldnow.com/ff50fa329edc8a1d64add63c839fe541.png';\n\t\n\tvar FriendScreen = (function (_skoash$Screen) {\n\t  _inherits(FriendScreen, _skoash$Screen);\n\t\n\t  function FriendScreen() {\n\t    _classCallCheck(this, FriendScreen);\n\t\n\t    _get(Object.getPrototypeOf(FriendScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      load: true,\n\t      complete: true,\n\t      recipient: {},\n\t      opts: {}\n\t    };\n\t  }\n\t\n\t  _createClass(FriendScreen, [{\n\t    key: 'selectRespond',\n\t    value: function selectRespond(message) {\n\t      skoash.trigger('pass-data', {\n\t        name: 'add-recipient',\n\t        goto: this.state.opts.goto,\n\t        message: message\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateData',\n\t    value: function updateData(d) {\n\t      var data = d && d.user ? d.user : skoash.trigger('getState').data.user || [];\n\t\n\t      data = data.map(function (friend) {\n\t        var src = friend._embedded.image && friend._embedded.image.url ? friend._embedded.image.url : DEFAULT_PROFILE_IMAGE;\n\t        return {\n\t          'user_id': friend.friend_id,\n\t          name: friend.username,\n\t          src: src,\n\t          // I need to get the flips earned back from the backend to do this.\n\t          description: '',\n\t          // description: friend.flips_earned + ' Flips Earned',\n\t          'asset_type': 'friend'\n\t        };\n\t      });\n\t\n\t      this.setState({\n\t        data: data\n\t      });\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(opts) {\n\t      var recipient,\n\t          self = this;\n\t\n\t      self.updateData();\n\t\n\t      skoash.trigger('getData', {\n\t        name: 'getFriends'\n\t      }).then(function (data) {\n\t        self.updateData.call(self, data);\n\t      });\n\t\n\t      recipient = skoash.trigger('getState').recipient;\n\t\n\t      self.setState({\n\t        load: true,\n\t        open: true,\n\t        leave: false,\n\t        close: false,\n\t        recipient: recipient,\n\t        opts: opts\n\t      }, function () {\n\t        self.refs.drawer && self.refs.drawer.start();\n\t      });\n\t\n\t      if (!self.state.started) {\n\t        self.start();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'suggestFriends',\n\t    value: function suggestFriends() {\n\t      window.open(window.location.origin.replace('games-', '') + '/friends/suggested');\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      skoash.trigger('goto', {\n\t        index: 'canvas'\n\t      });\n\t      skoash.trigger('openMenu', { id: 'save' });\n\t    }\n\t  }, {\n\t    key: 'renderOtter',\n\t    value: function renderOtter() {\n\t      var copy, src;\n\t\n\t      src = 'One';\n\t      copy = React.createElement(\n\t        'span',\n\t        null,\n\t        'Don\\'t have',\n\t        React.createElement('br', null),\n\t        ' friends yet?',\n\t        React.createElement('br', null),\n\t        React.createElement('br', null),\n\t        ' Let me suggest',\n\t        React.createElement('br', null),\n\t        ' some for you.'\n\t      );\n\t\n\t      if (this.state.data && this.state.data.length) {\n\t        src = 'Two';\n\t        copy = React.createElement(\n\t          'span',\n\t          null,\n\t          'Let me find a friend',\n\t          React.createElement('br', null),\n\t          ' to send your message to.'\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'otter-container ' + src },\n\t        React.createElement(skoash.Image, { className: 'otter', src: 'media/_Otter/Otter_Static_Greeting' + src + '.png' }),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'bubble' },\n\t          copy\n\t        )\n\t      );\n\t    }\n\t  }, {\n\t    key: 'renderFriends',\n\t    value: function renderFriends() {\n\t      if (this.state.data && this.state.data.length) {\n\t        return React.createElement(_sharedComponentsItem_drawer01Js2['default'], {\n\t          ref: 'drawer',\n\t          selectRespond: this.selectRespond.bind(this),\n\t          cancelRespond: this.back,\n\t          categories: this.state.opts.categories,\n\t          data: this.state.data,\n\t          selectedItem: this.state.recipient,\n\t          buttons: this.buttons,\n\t          complete: true,\n\t          className: this.state.opts.goto\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.state.opts.goto },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'item-drawer-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'suggest-friends-buttons' },\n\t            React.createElement('button', { className: 'continue', onClick: this.selectRespond.bind(this, {}) }),\n\t            React.createElement('button', { className: 'suggest', onClick: this.suggestFriends }),\n\t            React.createElement('button', { className: 'save-to-drafts', onClick: this.save })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'header' }),\n\t        this.renderOtter(),\n\t        this.renderFriends()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FriendScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(FriendScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'friends',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _sharedComponentsSelectable_reveal01Js = __webpack_require__(16);\n\t\n\tvar _sharedComponentsSelectable_reveal01Js2 = _interopRequireDefault(_sharedComponentsSelectable_reveal01Js);\n\t\n\tvar _sharedComponentsInbox01Js = __webpack_require__(9);\n\t\n\tvar _sharedComponentsInbox01Js2 = _interopRequireDefault(_sharedComponentsInbox01Js);\n\t\n\tvar _sharedComponentsSaved_messages01Js = __webpack_require__(15);\n\t\n\tvar _sharedComponentsSaved_messages01Js2 = _interopRequireDefault(_sharedComponentsSaved_messages01Js);\n\t\n\tvar inboxEmptyMessage = React.createElement(\n\t  'span',\n\t  null,\n\t  'You haven\\'t received any Skribbles!',\n\t  React.createElement('br', null),\n\t  'Get started by sending some!'\n\t);\n\tvar unreadEmptyMessage = React.createElement(\n\t  'span',\n\t  null,\n\t  'You don\\'t have any',\n\t  React.createElement('br', null),\n\t  'unread Skribbles!'\n\t);\n\tvar readEmptyMessage = React.createElement(\n\t  'span',\n\t  null,\n\t  'You don\\'t have any',\n\t  React.createElement('br', null),\n\t  'read Skribbles!'\n\t);\n\tvar sentEmptyMessage = React.createElement(\n\t  'span',\n\t  null,\n\t  'You haven\\'t sent any Skribbles.',\n\t  React.createElement('br', null),\n\t  'Let\\'s get started!'\n\t);\n\tvar draftsEmptyMessage = React.createElement(\n\t  'span',\n\t  null,\n\t  'You don\\'t have any drafts.',\n\t  React.createElement('br', null),\n\t  'Start Skribbling!'\n\t);\n\t\n\tvar InboxScreen = (function (_skoash$Screen) {\n\t  _inherits(InboxScreen, _skoash$Screen);\n\t\n\t  function InboxScreen() {\n\t    _classCallCheck(this, InboxScreen);\n\t\n\t    _get(Object.getPrototypeOf(InboxScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      load: true\n\t    };\n\t\n\t    this.selectableList = [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)];\n\t\n\t    this.revealList = this.getRevealList();\n\t\n\t    this.readMessage = this.readMessage.bind(this);\n\t    this.editMessage = this.editMessage.bind(this);\n\t  }\n\t\n\t  _createClass(InboxScreen, [{\n\t    key: 'getRevealList',\n\t    value: function getRevealList(inbox, outbox, saved) {\n\t      var read, unread;\n\t\n\t      inbox = inbox || [];\n\t\n\t      read = inbox.filter(function (item) {\n\t        return item.read;\n\t      });\n\t\n\t      unread = inbox.filter(function (item) {\n\t        return !item.read;\n\t      });\n\t\n\t      return [React.createElement(\n\t        'li',\n\t        null,\n\t        React.createElement(_sharedComponentsInbox01Js2['default'], {\n\t          'data-ref': 'inbox',\n\t          data: {\n\t            items: inbox || []\n\t          },\n\t          emptyMessage: inboxEmptyMessage,\n\t          selectRespond: this.readMessage\n\t        })\n\t      ), React.createElement(\n\t        'li',\n\t        null,\n\t        React.createElement(_sharedComponentsInbox01Js2['default'], {\n\t          'data-ref': 'unread',\n\t          data: {\n\t            items: unread || []\n\t          },\n\t          emptyMessage: unreadEmptyMessage,\n\t          selectRespond: this.readMessage\n\t        })\n\t      ), React.createElement(\n\t        'li',\n\t        null,\n\t        React.createElement(_sharedComponentsInbox01Js2['default'], {\n\t          'data-ref': 'read',\n\t          data: {\n\t            items: read || []\n\t          },\n\t          emptyMessage: readEmptyMessage,\n\t          selectRespond: this.readMessage\n\t        })\n\t      ), React.createElement(\n\t        'li',\n\t        null,\n\t        React.createElement(_sharedComponentsInbox01Js2['default'], {\n\t          'data-ref': 'outbox',\n\t          data: {\n\t            items: outbox || []\n\t          },\n\t          emptyMessage: sentEmptyMessage,\n\t          friendKey: 'friend_to',\n\t          selectRespond: this.readMessage\n\t        })\n\t      ), React.createElement(\n\t        'li',\n\t        null,\n\t        React.createElement(_sharedComponentsSaved_messages01Js2['default'], {\n\t          'data-ref': 'saved',\n\t          data: {\n\t            items: saved || []\n\t          },\n\t          emptyMessage: draftsEmptyMessage,\n\t          selectRespond: this.editMessage\n\t        })\n\t      )];\n\t    }\n\t  }, {\n\t    key: 'editMessage',\n\t    value: function editMessage(message) {\n\t      skoash.trigger('loadSkribble', {\n\t        message: message\n\t      });\n\t    }\n\t  }, {\n\t    key: 'readMessage',\n\t    value: function readMessage(message) {\n\t      skoash.trigger('goto', {\n\t        index: 'read',\n\t        message: message\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateData',\n\t    value: function updateData() {\n\t      var data, inbox, outbox, saved;\n\t\n\t      data = skoash.trigger('getState').data;\n\t      inbox = data.received;\n\t      outbox = data.sent;\n\t      saved = data.draft;\n\t\n\t      this.revealList = this.getRevealList(inbox, outbox, saved);\n\t\n\t      this.setState({\n\t        inbox: inbox,\n\t        outbox: outbox,\n\t        saved: saved\n\t      });\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open() {\n\t      var self = this;\n\t\n\t      skoash.trigger('getData', {\n\t        status: 'received'\n\t      }).then(function () {\n\t        self.updateData();\n\t      });\n\t\n\t      skoash.trigger('getData', {\n\t        status: 'sent'\n\t      }).then(function () {\n\t        self.updateData();\n\t      });\n\t\n\t      skoash.trigger('getData', {\n\t        status: 'draft'\n\t      }).then(function () {\n\t        self.updateData();\n\t      });\n\t\n\t      self.setState({\n\t        load: true,\n\t        open: true,\n\t        leave: false,\n\t        close: false\n\t      });\n\t\n\t      setTimeout(function () {\n\t        if (!self.state.started) {\n\t          self.start();\n\t        }\n\t      }, 250);\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'center' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'frame' },\n\t            React.createElement(_sharedComponentsSelectable_reveal01Js2['default'], {\n\t              ref: 'selectableReveal',\n\t              selectableList: this.selectableList,\n\t              revealList: this.revealList,\n\t              selectOnStart: '0',\n\t              openOnStart: '0'\n\t            })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return InboxScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(InboxScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'inbox',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _sharedComponentsItem_drawer01Js = __webpack_require__(6);\n\t\n\tvar _sharedComponentsItem_drawer01Js2 = _interopRequireDefault(_sharedComponentsItem_drawer01Js);\n\t\n\tvar ItemDrawerScreen = (function (_skoash$Screen) {\n\t  _inherits(ItemDrawerScreen, _skoash$Screen);\n\t\n\t  function ItemDrawerScreen() {\n\t    _classCallCheck(this, ItemDrawerScreen);\n\t\n\t    _get(Object.getPrototypeOf(ItemDrawerScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      opts: {\n\t        categories: []\n\t      }\n\t    };\n\t  }\n\t\n\t  _createClass(ItemDrawerScreen, [{\n\t    key: 'selectRespond',\n\t    value: function selectRespond(message) {\n\t      skoash.trigger('pass-data', {\n\t        name: 'add-item',\n\t        message: message\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateData',\n\t    value: function updateData(d) {\n\t      var data = d ? d : skoash.trigger('getState').data.menu.items;\n\t\n\t      this.state.opts.categories.forEach(function (key) {\n\t        if (data[key]) data = data[key];\n\t        if (data.items) data = data.items;\n\t      });\n\t\n\t      data = _lodash2['default'].values(data);\n\t\n\t      this.setState({\n\t        data: data\n\t      });\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(opts) {\n\t      var self = this;\n\t\n\t      skoash.trigger('getMedia', {\n\t        path: 'skribble/menu/' + opts.categories.join('/')\n\t      }).then(function (data) {\n\t        self.updateData(data);\n\t      });\n\t\n\t      self.setState({\n\t        load: true,\n\t        open: true,\n\t        leave: false,\n\t        close: false,\n\t        opts: opts,\n\t        data: null\n\t      }, function () {\n\t        self.updateData();\n\t      });\n\t\n\t      setTimeout(function () {\n\t        if (!self.state.started) {\n\t          self.start();\n\t        }\n\t      }, 250);\n\t    }\n\t  }, {\n\t    key: 'cancelRespond',\n\t    value: function cancelRespond() {\n\t      if (this.state.category) {\n\t        this.setState({\n\t          category: '',\n\t          categoryName: ''\n\t        });\n\t      } else {\n\t        skoash.trigger('goto', { index: 'canvas' });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(_sharedComponentsItem_drawer01Js2['default'], {\n\t          ref: 'drawer',\n\t          selectRespond: this.selectRespond.bind(this),\n\t          cancelRespond: this.cancelRespond,\n\t          categories: this.state.opts.categories,\n\t          data: this.state.data\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ItemDrawerScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(ItemDrawerScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'item-drawer',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuScreen = (function (_skoash$Screen) {\n\t  _inherits(MenuScreen, _skoash$Screen);\n\t\n\t  function MenuScreen() {\n\t    _classCallCheck(this, MenuScreen);\n\t\n\t    _get(Object.getPrototypeOf(MenuScreen.prototype), \"constructor\", this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(MenuScreen, [{\n\t    key: \"renderContent\",\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        React.createElement(skoash.Image, { className: \"hidden\", src: \"media/_Background/SK_BKG_1.png\" }),\n\t        React.createElement(skoash.Image, { className: \"otter\", src: \"media/_Otter/Otter_Static_GreetingOne.png\" }),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"bubble\" },\n\t          \"Hi there!\",\n\t          React.createElement(\"br\", null),\n\t          \"What would you\",\n\t          React.createElement(\"br\", null),\n\t          \"like to do today?\"\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"buttons\" },\n\t          React.createElement(\"button\", { className: \"make\", onClick: this.goto.bind(this, 'friend') }),\n\t          React.createElement(\"button\", { className: \"read\", onClick: this.goto.bind(this, 'inbox') })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return MenuScreen;\n\t})(skoash.Screen);\n\t\n\texports[\"default\"] = function (props, ref, key) {\n\t  return React.createElement(MenuScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: \"menu\",\n\t    hidePrev: true,\n\t    hideNext: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _sharedComponentsCanvas01 = __webpack_require__(5);\n\t\n\tvar _sharedComponentsCanvas012 = _interopRequireDefault(_sharedComponentsCanvas01);\n\t\n\tvar _sharedComponentsSelectable01Js = __webpack_require__(2);\n\t\n\tvar _sharedComponentsSelectable01Js2 = _interopRequireDefault(_sharedComponentsSelectable01Js);\n\t\n\tvar classNameText = {\n\t  skribbleBox: 'skribble-box',\n\t  box: 'box',\n\t  leftMenu: 'menu left-menu',\n\t  rightMenu: 'menu right-menu'\n\t};\n\t\n\tvar refs = {\n\t  box: 'box',\n\t  canvas: 'canvas'\n\t};\n\t\n\tvar PreviewScreen = (function (_skoash$Screen) {\n\t  _inherits(PreviewScreen, _skoash$Screen);\n\t\n\t  function PreviewScreen() {\n\t    _classCallCheck(this, PreviewScreen);\n\t\n\t    _get(Object.getPrototypeOf(PreviewScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      load: true,\n\t      opts: {}\n\t    };\n\t\n\t    this.leftMenuList = [React.createElement(\n\t      'li',\n\t      { className: 'edit', onClick: this.goto.bind(this, 'canvas') },\n\t      React.createElement('span', null)\n\t    )];\n\t\n\t    this.rightMenuList = [React.createElement(\n\t      'li',\n\t      { className: 'send', onClick: this.goto.bind(this, 'send') },\n\t      React.createElement('span', null)\n\t    )];\n\t  }\n\t\n\t  _createClass(PreviewScreen, [{\n\t    key: 'open',\n\t    value: function open(opts) {\n\t      var rules = skoash.trigger('getRules');\n\t      this.refs[refs.box].refs[refs.canvas].setItems(rules);\n\t\n\t      skoash.Screen.prototype.open.call(this, opts);\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          skoash.Component,\n\t          { ref: refs.box, className: classNameText.skribbleBox },\n\t          React.createElement(_sharedComponentsCanvas012['default'], { ref: refs.canvas, preview: true }),\n\t          React.createElement('div', { className: classNameText.box })\n\t        ),\n\t        React.createElement(_sharedComponentsSelectable01Js2['default'], { className: classNameText.leftMenu, list: this.leftMenuList }),\n\t        React.createElement(_sharedComponentsSelectable01Js2['default'], { className: classNameText.rightMenu, list: this.rightMenuList })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return PreviewScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(PreviewScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'preview',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _sharedComponentsSelectable01Js = __webpack_require__(2);\n\t\n\tvar _sharedComponentsSelectable01Js2 = _interopRequireDefault(_sharedComponentsSelectable01Js);\n\t\n\tvar classNameText = {\n\t  skribbleBox: 'skribble-box',\n\t  box: 'box',\n\t  leftMenu: 'menu left-menu',\n\t  rightMenu: 'menu right-menu',\n\t  sender: 'menu recipient sender'\n\t};\n\t\n\tvar refs = {\n\t  box: 'box'\n\t};\n\t\n\tvar ReadScreen = (function (_skoash$Screen) {\n\t  _inherits(ReadScreen, _skoash$Screen);\n\t\n\t  function ReadScreen() {\n\t    _classCallCheck(this, ReadScreen);\n\t\n\t    _get(Object.getPrototypeOf(ReadScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state.load = true;\n\t    this.state.message = { user: {} };\n\t\n\t    this.leftMenuList = [React.createElement(\n\t      'li',\n\t      { className: 'inbox', onClick: this.goto.bind(this, 'inbox') },\n\t      React.createElement('span', null)\n\t    )];\n\t\n\t    this.rightMenuList = [React.createElement(\n\t      'li',\n\t      { className: 'reply', onClick: this.reply.bind(this) },\n\t      React.createElement('span', null)\n\t    )];\n\t  }\n\t\n\t  _createClass(ReadScreen, [{\n\t    key: 'reply',\n\t    value: function reply() {\n\t      skoash.trigger('passData', {\n\t        name: 'add-recipient',\n\t        message: this.state.message.created_by\n\t      });\n\t    }\n\t  }, {\n\t    key: 'open',\n\t    value: function open(opts) {\n\t      var message, friends, creater;\n\t\n\t      message = opts.message || {};\n\t\n\t      friends = skoash.trigger('getState').data.user || [];\n\t      friends.forEach(function (friend) {\n\t        if (message.created_by === friend.friend_id) {\n\t          creater = friend;\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        load: true,\n\t        open: true,\n\t        leave: false,\n\t        close: false,\n\t        message: message,\n\t        creater: creater\n\t      });\n\t\n\t      this.start();\n\t\n\t      skoash.trigger('getData', {\n\t        name: 'markAsRead',\n\t        'skribble_id': message.skribble_id\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getSenderClassNames',\n\t    value: function getSenderClassNames() {\n\t      return (0, _classnames2['default'])(classNameText.sender, {\n\t        HIDE: !this.state.creater || this.state.message.sent\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderSender',\n\t    value: function renderSender() {\n\t      var creater,\n\t          content = [];\n\t\n\t      creater = this.state.creater;\n\t\n\t      if (!creater) return;\n\t\n\t      if (creater.username) {\n\t        content.push(React.createElement(\n\t          'span',\n\t          { className: 'name' },\n\t          creater.username\n\t        ));\n\t      }\n\t\n\t      if (creater._embedded.image) {\n\t        content.push(React.createElement('img', { className: 'profile-image', src: creater._embedded.image.url }));\n\t      }\n\t\n\t      return content;\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: this.getSenderClassNames() },\n\t          React.createElement(\n\t            'li',\n\t            null,\n\t            React.createElement(\n\t              'span',\n\t              null,\n\t              this.renderSender()\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          skoash.Component,\n\t          { ref: refs.box, className: classNameText.skribbleBox },\n\t          React.createElement(skoash.Image, { src: this.state.message.url }),\n\t          React.createElement('div', { className: classNameText.box })\n\t        ),\n\t        React.createElement(_sharedComponentsSelectable01Js2['default'], { className: classNameText.leftMenu, list: this.leftMenuList }),\n\t        React.createElement(_sharedComponentsSelectable01Js2['default'], { className: classNameText.rightMenu, list: this.rightMenuList })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ReadScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(ReadScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'read',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SaveMenu = (function (_skoash$Screen) {\n\t  _inherits(SaveMenu, _skoash$Screen);\n\t\n\t  function SaveMenu() {\n\t    _classCallCheck(this, SaveMenu);\n\t\n\t    _get(Object.getPrototypeOf(SaveMenu.prototype), \"constructor\", this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(SaveMenu, [{\n\t    key: \"cancel\",\n\t    value: function cancel() {\n\t      this.close();\n\t      skoash.trigger('menuClose', {\n\t        id: this.state.id\n\t      });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        \"div\",\n\t        { id: this.props.id, className: this.getClassNames() },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"center\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"frame\" },\n\t            React.createElement(\"button\", { className: \"quit-saved\", onClick: this.cancel.bind(this) }),\n\t            React.createElement(\n\t              \"h2\",\n\t              null,\n\t              \"Your progress\"\n\t            ),\n\t            React.createElement(\n\t              \"h2\",\n\t              null,\n\t              \"has been saved\"\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SaveMenu;\n\t})(skoash.Screen);\n\t\n\texports[\"default\"] = React.createElement(SaveMenu, {\n\t  id: \"save\"\n\t});\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _sharedComponentsSelectable01Js = __webpack_require__(2);\n\t\n\tvar _sharedComponentsSelectable01Js2 = _interopRequireDefault(_sharedComponentsSelectable01Js);\n\t\n\tvar classNameText = {\n\t  yourMessageTo: 'your-message-to',\n\t  isReady: 'is-ready',\n\t  changeFriend: 'change-friend',\n\t  character: 'character',\n\t  gift: 'gift',\n\t  header: 'header',\n\t  username: 'username'\n\t};\n\t\n\tvar SendScreen = (function (_skoash$Screen) {\n\t  _inherits(SendScreen, _skoash$Screen);\n\t\n\t  function SendScreen() {\n\t    _classCallCheck(this, SendScreen);\n\t\n\t    _get(Object.getPrototypeOf(SendScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state.load = true;\n\t    this.state.recipient = {};\n\t\n\t    this.rightMenuList = [React.createElement(\n\t      'li',\n\t      { className: 'edit-right', onClick: this.goto.bind(this, 'canvas') },\n\t      React.createElement('span', null)\n\t    ), React.createElement(\n\t      'li',\n\t      { className: 'send', onClick: this.send },\n\t      React.createElement('span', null)\n\t    )];\n\t  }\n\t\n\t  _createClass(SendScreen, [{\n\t    key: 'open',\n\t    value: function open() {\n\t      var recipient = skoash.trigger('getState').recipient || {};\n\t\n\t      this.setState({\n\t        load: true,\n\t        open: true,\n\t        leave: false,\n\t        close: false,\n\t        recipient: recipient\n\t      });\n\t\n\t      this.start();\n\t    }\n\t  }, {\n\t    key: 'send',\n\t    value: function send() {\n\t      skoash.trigger('pass-data', {\n\t        name: 'send'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      var changeFriendClick = this.goto.bind(this, {\n\t        index: 'friend',\n\t        goto: 'send'\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: classNameText.header },\n\t          React.createElement('span', { className: classNameText.yourMessageTo }),\n\t          React.createElement(\n\t            'span',\n\t            { className: classNameText.username },\n\t            this.state.recipient.name\n\t          ),\n\t          React.createElement('br', null),\n\t          React.createElement('span', { className: classNameText.isReady }),\n\t          React.createElement('button', { className: classNameText.changeFriend, onClick: changeFriendClick })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: classNameText.character },\n\t          React.createElement(skoash.Image, { className: 'otter', src: 'media/_Otter/Otter_Static_GreetingTwo.png' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'bubble' },\n\t            'Are you sure',\n\t            React.createElement('br', null),\n\t            'you are ready to',\n\t            React.createElement('br', null),\n\t            'send your message?'\n\t          )\n\t        ),\n\t        React.createElement('div', { className: classNameText.gift }),\n\t        React.createElement(_sharedComponentsSelectable01Js2['default'], { className: 'menu right-menu', list: this.rightMenuList })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SendScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(SendScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'send',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar classNameText = {\n\t  character: 'character',\n\t  header: 'header',\n\t  yourMessageTo: 'your-message-to',\n\t  username: 'username',\n\t  isReady: 'is-ready',\n\t  buttons: 'buttons',\n\t  createAnother: 'create-another',\n\t  inbox: 'inbox'\n\t};\n\t\n\tvar text = {\n\t  yourMessageTo: 'YOUR MESSAGE TO:',\n\t  hasBeenSent: 'IS BEING SENT!'\n\t};\n\t\n\tvar SentScreen = (function (_skoash$Screen) {\n\t  _inherits(SentScreen, _skoash$Screen);\n\t\n\t  function SentScreen() {\n\t    _classCallCheck(this, SentScreen);\n\t\n\t    _get(Object.getPrototypeOf(SentScreen.prototype), 'constructor', this).call(this);\n\t\n\t    this.state = {\n\t      load: true,\n\t      opts: {\n\t        recipient: {}\n\t      }\n\t    };\n\t  }\n\t\n\t  _createClass(SentScreen, [{\n\t    key: 'renderContent',\n\t    value: function renderContent() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: classNameText.character }),\n\t        React.createElement(\n\t          'div',\n\t          { className: classNameText.header },\n\t          React.createElement(\n\t            'span',\n\t            { className: classNameText.yourMessageTo },\n\t            text.yourMessageTo\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: classNameText.username },\n\t            this.state.opts.recipient.name\n\t          ),\n\t          React.createElement('br', null),\n\t          React.createElement(\n\t            'span',\n\t            { className: classNameText.isReady },\n\t            text.hasBeenSent\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: classNameText.buttons },\n\t          React.createElement('button', { className: classNameText.createAnother, onClick: this.goto.bind(this, 'friend') }),\n\t          React.createElement('button', { className: classNameText.inbox, onClick: this.goto.bind(this, 'inbox') })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SentScreen;\n\t})(skoash.Screen);\n\t\n\texports['default'] = function (props, ref, key) {\n\t  return React.createElement(SentScreen, _extends({}, props, {\n\t    ref: ref,\n\t    key: key,\n\t    id: 'sent',\n\t    hideNext: true,\n\t    hidePrev: true\n\t  }));\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports[\"default\"] = function (props, ref, key) {\n\t  return React.createElement(\n\t    skoash.Screen,\n\t    _extends({}, props, {\n\t      ref: ref,\n\t      key: key,\n\t      id: \"title\",\n\t      hidePrev: true,\n\t      nextDelay: 1000,\n\t      nextIndex: \"menu\"\n\t    }),\n\t    React.createElement(skoash.Image, {\n\t      ref: \"title\",\n\t      className: \"title animated\",\n\t      src: \"media/_Title/SKribble_title.png\"\n\t    }),\n\t    React.createElement(skoash.Image, {\n\t      ref: \"play\",\n\t      className: \"hidden\",\n\t      src: \"media/_Buttons/skribble-play-01.png\"\n\t    }),\n\t    React.createElement(skoash.Image, {\n\t      ref: \"play-hover\",\n\t      className: \"hidden\",\n\t      src: \"media/_Buttons/skribble-hover.png\"\n\t    })\n\t  );\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar config = {\n\t  id: 'skribble',\n\t  version: 1,\n\t  dimensions: {\n\t    width: 1600,\n\t    ratio: 16 / 9\n\t  }\n\t};\n\t\n\texports['default'] = config;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Index script\n\t * @module\n\t */\n\t\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _configGame = __webpack_require__(30);\n\t\n\tvar _configGame2 = _interopRequireDefault(_configGame);\n\t\n\tvar _sharedComponentsLoader01 = __webpack_require__(11);\n\t\n\tvar _sharedComponentsLoader012 = _interopRequireDefault(_sharedComponentsLoader01);\n\t\n\tvar _sharedComponentsIos_splash_screen01 = __webpack_require__(10);\n\t\n\tvar _sharedComponentsIos_splash_screen012 = _interopRequireDefault(_sharedComponentsIos_splash_screen01);\n\t\n\tvar _componentsTitle_screen = __webpack_require__(29);\n\t\n\tvar _componentsTitle_screen2 = _interopRequireDefault(_componentsTitle_screen);\n\t\n\tvar _componentsMenu_screen = __webpack_require__(23);\n\t\n\tvar _componentsMenu_screen2 = _interopRequireDefault(_componentsMenu_screen);\n\t\n\tvar _componentsFriend_screen = __webpack_require__(20);\n\t\n\tvar _componentsFriend_screen2 = _interopRequireDefault(_componentsFriend_screen);\n\t\n\tvar _componentsCanvas_screen = __webpack_require__(19);\n\t\n\tvar _componentsCanvas_screen2 = _interopRequireDefault(_componentsCanvas_screen);\n\t\n\tvar _componentsItem_drawer_screen = __webpack_require__(22);\n\t\n\tvar _componentsItem_drawer_screen2 = _interopRequireDefault(_componentsItem_drawer_screen);\n\t\n\tvar _componentsInbox_screen = __webpack_require__(21);\n\t\n\tvar _componentsInbox_screen2 = _interopRequireDefault(_componentsInbox_screen);\n\t\n\tvar _componentsPreview_screen = __webpack_require__(24);\n\t\n\tvar _componentsPreview_screen2 = _interopRequireDefault(_componentsPreview_screen);\n\t\n\tvar _componentsSend_screen = __webpack_require__(27);\n\t\n\tvar _componentsSend_screen2 = _interopRequireDefault(_componentsSend_screen);\n\t\n\tvar _componentsSent_screen = __webpack_require__(28);\n\t\n\tvar _componentsSent_screen2 = _interopRequireDefault(_componentsSent_screen);\n\t\n\tvar _componentsRead_screen = __webpack_require__(25);\n\t\n\tvar _componentsRead_screen2 = _interopRequireDefault(_componentsRead_screen);\n\t\n\tvar _sharedComponentsQuit_screen01 = __webpack_require__(13);\n\t\n\tvar _sharedComponentsQuit_screen012 = _interopRequireDefault(_sharedComponentsQuit_screen01);\n\t\n\tvar _componentsSave_menu = __webpack_require__(26);\n\t\n\tvar _componentsSave_menu2 = _interopRequireDefault(_componentsSave_menu);\n\t\n\t__webpack_require__(18);\n\t\n\t__webpack_require__(17);\n\t\n\tvar DEFAULT_PROFILE_IMAGE = 'https://changemyworldnow.com/ff50fa329edc8a1d64add63c839fe541.png';\n\t\n\tvar Skribble = (function (_skoash$Game) {\n\t  _inherits(Skribble, _skoash$Game);\n\t\n\t  function Skribble() {\n\t    _classCallCheck(this, Skribble);\n\t\n\t    _get(Object.getPrototypeOf(Skribble.prototype), 'constructor', this).call(this, _configGame2['default']);\n\t\n\t    this.screens = {\n\t      0: _sharedComponentsIos_splash_screen012['default'],\n\t      1: _componentsTitle_screen2['default'],\n\t      'menu': _componentsMenu_screen2['default'],\n\t      friend: _componentsFriend_screen2['default'],\n\t      canvas: _componentsCanvas_screen2['default'],\n\t      'item-drawer': _componentsItem_drawer_screen2['default'],\n\t      inbox: _componentsInbox_screen2['default'],\n\t      preview: _componentsPreview_screen2['default'],\n\t      send: _componentsSend_screen2['default'],\n\t      sent: _componentsSent_screen2['default'],\n\t      read: _componentsRead_screen2['default']\n\t    };\n\t\n\t    this.menus = {\n\t      quit: _sharedComponentsQuit_screen012['default'],\n\t      save: _componentsSave_menu2['default']\n\t    };\n\t\n\t    this.state.data.screens = _lodash2['default'].map(this.screens, function () {\n\t      return {};\n\t    });\n\t  }\n\t\n\t  _createClass(Skribble, [{\n\t    key: 'goto',\n\t    value: function goto(opts) {\n\t      if (opts.index === 'send') {\n\t        if (!this.state.recipient || !this.state.recipient.name) {\n\t          opts.index = 'friend';\n\t          opts.goto = 'send';\n\t        }\n\t      }\n\t\n\t      skoash.Game.prototype.goto.call(this, opts);\n\t    }\n\t  }, {\n\t    key: 'ready',\n\t    value: function ready() {\n\t      if (!this.state.ready) {\n\t        this.getMedia();\n\t        this.getData({ name: 'getFriends' });\n\t      }\n\t\n\t      skoash.Game.prototype.ready.call(this);\n\t    }\n\t  }, {\n\t    key: 'getRules',\n\t    value: function getRules() {\n\t      return this.refs['screen-canvas'].getData();\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(e, skramble) {\n\t      /* eslint-disable camelcase */\n\t      var friend_to,\n\t          self = this;\n\t      friend_to = self.state.recipient && self.state.recipient.user_id ? self.state.recipient.user_id : null;\n\t      var skribble = _extends({\n\t        'version': _configGame2['default'].version\n\t      }, self.state.skribbleData, {\n\t        friend_to: friend_to,\n\t        skramble: skramble,\n\t        rules: self.getRules()\n\t      });\n\t\n\t      if (JSON.stringify(skribble) !== JSON.stringify(this.state.skribble)) {\n\t        self.emit({\n\t          name: 'saveSkribble',\n\t          game: self.config.id,\n\t          skribble: skribble\n\t        }).then(function (skribbleData) {\n\t          self.setState({\n\t            skribbleData: skribbleData,\n\t            skribble: skribble\n\t          });\n\t        });\n\t      }\n\t      /* eslint-enable camelcase */\n\t    }\n\t  }, {\n\t    key: 'send',\n\t    value: function send() {\n\t      this.save(null, true);\n\t\n\t      this.refs['screen-canvas'].reset();\n\t      this.goto({\n\t        index: 'sent',\n\t        recipient: this.state.recipient\n\t      });\n\t\n\t      this.setState({\n\t        recipient: null,\n\t        skribbleData: null\n\t      });\n\t    }\n\t  }, {\n\t    key: 'trigger',\n\t    value: function trigger(event, opts) {\n\t      switch (event) {\n\t        case 'save':\n\t          return this.save();\n\t        case 'getMedia':\n\t          return this.getMedia(opts.path);\n\t        case 'getRules':\n\t          return this.getRules();\n\t        case 'loadSkribble':\n\t          return this.loadSkribble(opts);\n\t      }\n\t\n\t      return _get(Object.getPrototypeOf(Skribble.prototype), 'trigger', this).call(this, event, opts);\n\t    }\n\t  }, {\n\t    key: 'loadSkribble',\n\t    value: function loadSkribble(opts) {\n\t      var _this = this;\n\t\n\t      this.setState({\n\t        skribbleData: opts.message\n\t      }, function () {\n\t        _this.refs['screen-canvas'].addItems(opts.message);\n\t        _this.goto({\n\t          index: 'canvas',\n\t          draft: true\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getMedia',\n\t    value: function getMedia(path) {\n\t      var _this2 = this;\n\t\n\t      var pathArray,\n\t          self = this;\n\t\n\t      path = path || 'skribble/menu';\n\t      pathArray = path.split('/');\n\t      pathArray.shift();\n\t\n\t      return self.emit({\n\t        name: 'getMedia',\n\t        path: path\n\t      }).then(function (d) {\n\t        var opts, currentOpts;\n\t        opts = {\n\t          data: {},\n\t          callback: function callback() {\n\t            _this2.refs['screen-canvas'].setMenu();\n\t            _this2.refs['screen-item-drawer'].updateData();\n\t          }\n\t        };\n\t        currentOpts = opts.data;\n\t\n\t        pathArray.forEach(function (key, index) {\n\t          currentOpts[key] = {\n\t            items: {}\n\t          };\n\t          if (index !== pathArray.length - 1) {\n\t            currentOpts = currentOpts[key].items;\n\t          }\n\t        });\n\t\n\t        currentOpts[pathArray[pathArray.length - 1]] = _lodash2['default'].clone(d);\n\t        currentOpts[pathArray[pathArray.length - 1]].items = {};\n\t\n\t        if (d.items) {\n\t          d.items.forEach(function (item) {\n\t            if (item.asset_type === 'folder' && item.name) {\n\t              self.getMedia(path + '/' + item.name);\n\t            } else {\n\t              currentOpts[pathArray[pathArray.length - 1]].items[item.name] = item;\n\t            }\n\t          });\n\t        }\n\t\n\t        self.updateData(opts);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getData',\n\t    value: function getData(opts) {\n\t      var _this3 = this;\n\t\n\t      var names = ['getFriends', 'getFriend', 'markAsRead'];\n\t\n\t      if (names.indexOf(opts.name) === -1) {\n\t        opts.name = 'getData';\n\t      }\n\t\n\t      return this.emit(opts).then(function (data) {\n\t        if (opts.status) {\n\t          data[opts.status] = data.skribble;\n\t          delete data.skribble;\n\t          _this3.updateData({\n\t            data: data\n\t          });\n\t        } else {\n\t          if (opts.name === 'getFriend') {\n\t            data = {\n\t              user: [data]\n\t            };\n\t          }\n\t          _this3.updateData({\n\t            data: data,\n\t            callback: opts.callback\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'passData',\n\t    value: function passData(opts) {\n\t      if (opts.name === 'add-item') {\n\t        this.refs['screen-canvas'].addItem(opts.message);\n\t        this.goto({ index: 'canvas' });\n\t      } else if (opts.name === 'add-recipient') {\n\t        this.addRecipient(opts.message, this.goto.bind(this, { index: opts.goto || 'canvas' }));\n\t      } else if (opts.name === 'send') {\n\t        this.send();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addRecipient',\n\t    value: function addRecipient(recipient, cb) {\n\t      var _this4 = this;\n\t\n\t      var src;\n\t\n\t      if (recipient.src) {\n\t        recipient.profile_image = recipient.src; // eslint-disable-line camelcase\n\t        delete recipient.src;\n\t      } else if (typeof recipient === 'string') {\n\t        if (this.state.data && this.state.data.user) {\n\t          this.state.data.user.some(function (friend) {\n\t            if (friend.friend_id === recipient) {\n\t              recipient = friend;\n\t              return true;\n\t            }\n\t            return false;\n\t          });\n\t        }\n\t      }\n\t\n\t      if (typeof recipient === 'string') {\n\t        this.getData({\n\t          name: 'getFriend',\n\t          'friend_id': recipient,\n\t          callback: function callback() {\n\t            _this4.addRecipient(recipient, cb);\n\t          }\n\t        });\n\t      } else {\n\t        src = recipient && recipient._embedded && recipient._embedded.image && recipient._embedded.image.url ? recipient._embedded.image.url : DEFAULT_PROFILE_IMAGE;\n\t        this.setState({\n\t          recipient: {\n\t            'user_id': recipient.friend_id,\n\t            name: recipient.username,\n\t            src: src,\n\t            // I need to get the flips earned back from the backend to do this.\n\t            description: '',\n\t            // description: friend.flips_earned + ' Flips Earned',\n\t            'asset_type': 'friend'\n\t          }\n\t        }, cb);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'clickRecipient',\n\t    value: function clickRecipient() {\n\t      this.goto({\n\t        index: 'friend'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'create',\n\t    value: function create() {\n\t      if (this.state.recipient) {\n\t        this.goto({ index: 'canvas' });\n\t      } else {\n\t        this.goto({ index: 'friend' });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'saveButton',\n\t    value: function saveButton() {\n\t      this.save();\n\t      this.openMenu({ id: 'save' });\n\t    }\n\t  }, {\n\t    key: 'renderLoader',\n\t    value: function renderLoader() {\n\t      return React.createElement(_sharedComponentsLoader012['default'], null);\n\t    }\n\t  }, {\n\t    key: 'renderAssets',\n\t    value: function renderAssets() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('div', { className: 'background-1' }),\n\t        React.createElement('div', { className: 'background-2' }),\n\t        React.createElement('div', { className: 'background-3' }),\n\t        React.createElement('div', { className: 'background-4' }),\n\t        React.createElement('div', { className: 'background-5' }),\n\t        React.createElement('div', { className: 'background-6' })\n\t      );\n\t    }\n\t  }, {\n\t    key: 'renderRecipient',\n\t    value: function renderRecipient() {\n\t      var recipient = this.state.recipient,\n\t          content = [];\n\t\n\t      if (!recipient) return;\n\t\n\t      if (recipient.name) {\n\t        content.push(React.createElement(\n\t          'span',\n\t          { className: 'name' },\n\t          recipient.name\n\t        ));\n\t      }\n\t\n\t      if (recipient.profile_image) {\n\t        content.push(React.createElement('img', { className: 'profile-image', src: recipient.profile_image }));\n\t      }\n\t\n\t      return content;\n\t    }\n\t  }, {\n\t    key: 'renderMenu',\n\t    value: function renderMenu() {\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'game-menu' },\n\t          React.createElement('button', { className: 'save', onClick: this.saveButton.bind(this) }),\n\t          React.createElement('button', { className: 'inbox', onClick: this.goto.bind(this, { index: 'inbox' }) }),\n\t          React.createElement('button', { className: 'create', onClick: this.create.bind(this) }),\n\t          React.createElement('button', { className: 'help', onClick: this.openMenu.bind(this, { id: 'help' }) }),\n\t          React.createElement('button', { className: 'close', onClick: this.openMenu.bind(this, { id: 'quit' }) })\n\t        ),\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'menu recipient' },\n\t          React.createElement(\n\t            'li',\n\t            { onClick: this.clickRecipient.bind(this) },\n\t            React.createElement(\n\t              'span',\n\t              null,\n\t              this.renderRecipient()\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Skribble;\n\t})(skoash.Game);\n\t\n\tskoash.start(Skribble, _configGame2['default'].id);\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tmodule.exports = __webpack_require__(35);\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar alphabet = __webpack_require__(4);\n\t\n\t/**\n\t * Decode the id to get the version and worker\n\t * Mainly for debugging and testing.\n\t * @param id - the shortid-generated id.\n\t */\n\tfunction decode(id) {\n\t    var characters = alphabet.shuffled();\n\t    return {\n\t        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n\t        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n\t    };\n\t}\n\t\n\tmodule.exports = decode;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar randomByte = __webpack_require__(37);\n\t\n\tfunction encode(lookup, number) {\n\t    var loopCounter = 0;\n\t    var done;\n\t\n\t    var str = '';\n\t\n\t    while (!done) {\n\t        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n\t        done = number < (Math.pow(16, loopCounter + 1 ) );\n\t        loopCounter++;\n\t    }\n\t    return str;\n\t}\n\t\n\tmodule.exports = encode;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar alphabet = __webpack_require__(4);\n\tvar encode = __webpack_require__(34);\n\tvar decode = __webpack_require__(33);\n\tvar isValid = __webpack_require__(36);\n\t\n\t// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n\t// This number should be updated every year or so to keep the generated id short.\n\t// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\tvar REDUCE_TIME = 1459707606518;\n\t\n\t// don't change unless we change the algos or REDUCE_TIME\n\t// must be an integer and less than 16\n\tvar version = 6;\n\t\n\t// if you are using cluster or multiple servers use this to make each instance\n\t// has a unique value for worker\n\t// Note: I don't know if this is automatically set when using third\n\t// party cluster solutions such as pm2.\n\tvar clusterWorkerId = __webpack_require__(39) || 0;\n\t\n\t// Counter is used when shortid is called multiple times in one second.\n\tvar counter;\n\t\n\t// Remember the last time shortid was called in case counter is needed.\n\tvar previousSeconds;\n\t\n\t/**\n\t * Generate unique id\n\t * Returns string id\n\t */\n\tfunction generate() {\n\t\n\t    var str = '';\n\t\n\t    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\t\n\t    if (seconds === previousSeconds) {\n\t        counter++;\n\t    } else {\n\t        counter = 0;\n\t        previousSeconds = seconds;\n\t    }\n\t\n\t    str = str + encode(alphabet.lookup, version);\n\t    str = str + encode(alphabet.lookup, clusterWorkerId);\n\t    if (counter > 0) {\n\t        str = str + encode(alphabet.lookup, counter);\n\t    }\n\t    str = str + encode(alphabet.lookup, seconds);\n\t\n\t    return str;\n\t}\n\t\n\t\n\t/**\n\t * Set the seed.\n\t * Highly recommended if you don't want people to try to figure out your id schema.\n\t * exposed as shortid.seed(int)\n\t * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n\t */\n\tfunction seed(seedValue) {\n\t    alphabet.seed(seedValue);\n\t    return module.exports;\n\t}\n\t\n\t/**\n\t * Set the cluster worker or machine id\n\t * exposed as shortid.worker(int)\n\t * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n\t * returns shortid module so it can be chained.\n\t */\n\tfunction worker(workerId) {\n\t    clusterWorkerId = workerId;\n\t    return module.exports;\n\t}\n\t\n\t/**\n\t *\n\t * sets new characters to use in the alphabet\n\t * returns the shuffled alphabet\n\t */\n\tfunction characters(newCharacters) {\n\t    if (newCharacters !== undefined) {\n\t        alphabet.characters(newCharacters);\n\t    }\n\t\n\t    return alphabet.shuffled();\n\t}\n\t\n\t\n\t// Export all other functions as properties of the generate function\n\tmodule.exports = generate;\n\tmodule.exports.generate = generate;\n\tmodule.exports.seed = seed;\n\tmodule.exports.worker = worker;\n\tmodule.exports.characters = characters;\n\tmodule.exports.decode = decode;\n\tmodule.exports.isValid = isValid;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar alphabet = __webpack_require__(4);\n\t\n\tfunction isShortId(id) {\n\t    if (!id || typeof id !== 'string' || id.length < 6 ) {\n\t        return false;\n\t    }\n\t\n\t    var characters = alphabet.characters();\n\t    var len = id.length;\n\t    for(var i = 0; i < len;i++) {\n\t        if (characters.indexOf(id[i]) === -1) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\t\n\tmodule.exports = isShortId;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\t\n\tfunction randomByte() {\n\t    if (!crypto || !crypto.getRandomValues) {\n\t        return Math.floor(Math.random() * 256) & 0x30;\n\t    }\n\t    var dest = new Uint8Array(1);\n\t    crypto.getRandomValues(dest);\n\t    return dest[0] & 0x30;\n\t}\n\t\n\tmodule.exports = randomByte;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// Found this seed-based random generator somewhere\n\t// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\t\n\tvar seed = 1;\n\t\n\t/**\n\t * return a random number based on a seed\n\t * @param seed\n\t * @returns {number}\n\t */\n\tfunction getNextValue() {\n\t    seed = (seed * 9301 + 49297) % 233280;\n\t    return seed/(233280.0);\n\t}\n\t\n\tfunction setSeed(_seed_) {\n\t    seed = _seed_;\n\t}\n\t\n\tmodule.exports = {\n\t    nextValue: getNextValue,\n\t    seed: setSeed\n\t};\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = 0;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** skribble/ai.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e8acde2a7f5b338237ca\n **/","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/classnames/index.js\n ** module id = 1\n ** module chunks = 0\n **/","import classNames from 'classnames';\n\nclass Selectable extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectClass: 'SELECTED',\n      classes: {},\n      list: [\n        <li></li>,\n        <li></li>,\n        <li></li>,\n        <li></li>\n      ],\n      selectFunction: this.select,\n    };\n  }\n\n  start() {\n    var selectClass, selectFunction, classes = {};\n\n    selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n\n    selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\n    if (this.props.selectOnStart) {\n      classes[this.props.selectOnStart] = selectClass;\n    }\n\n    this.setState({\n      started: true,\n      classes,\n      selectFunction,\n      selectClass,\n    });\n\n    this.bootstrap();\n\n    Object.keys(this.refs).map(key => {\n      if (typeof this.refs[key].start === 'function') this.refs[key].start();\n    });\n  }\n\n  selectHelper(e, classes) {\n    var message, target;\n\n    target = e.target.closest('LI');\n\n    if (!target) return;\n\n    message = target.getAttribute('data-ref');\n    classes[message] = this.state.selectClass;\n\n    this.setState({\n      classes,\n    });\n\n    if (typeof this.props.selectRespond === 'function') {\n      this.props.selectRespond(message);\n    }\n\n    this.requireForComplete = this.requireForComplete.filter((key) => {\n      return key !== message;\n    });\n\n    this.checkComplete();\n  }\n\n  select(e) {\n    var classes = [];\n    this.selectHelper(e, classes);\n  }\n\n  highlight(e) {\n    var classes = this.state.classes;\n    this.selectHelper(e, classes);\n  }\n\n  getClass(key) {\n    return classNames({\n      [this.state.classes[key] || '']: true,\n    });\n  }\n\n  getClassNames() {\n    return classNames({\n      selectable: true,\n      COMPLETE: this.state.complete,\n    }, this.props.className);\n  }\n\n  renderList() {\n    var list = this.props.list || this.state.list;\n\n    return list.map((li, key) => {\n      var ref = li.props['data-ref'] == null ? key : li.props['data-ref'];\n      return (\n        <skoash.ListItem\n          {...li.props}\n          className={(li.props.className ? li.props.className + ' ' : '') + this.getClass(ref)}\n          data-ref={ref}\n          ref={ref}\n          key={key}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <ul className={this.getClassNames()} onClick={this.state.selectFunction.bind(this)}>\n        {this.renderList()}\n      </ul>\n    );\n  }\n}\n\nexport default Selectable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/selectable/0.1.js\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.14.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return baseFindIndex(array, baseIsNaN, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = context.Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Built-in method references that are mockable. */\n    var clearTimeout = function(id) { return context.clearTimeout.call(root, id); },\n        setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(context.Object, 'create');\n\n    /* Used to set `toString` methods. */\n    var defineProperty = (function() {\n      var func = getNative(context.Object, 'defineProperty'),\n          name = getNative.name;\n\n      return (name && name.length > 2) ? func : undefined;\n    }());\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          return this;\n        }\n        cache = this.__data__ = new MapCache(pairs);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      var index = length;\n      while (index--) {\n        var key = props[index],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined &&\n            !(key in Object(object))) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    var baseKeys = overArg(nativeKeys, Object);\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return baseRest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return baseRest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    var getPrototype = overArg(nativeGetPrototype, Object);\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length,\n          lastIndex = length - 1;\n\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return defineProperty(wrapper, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n      });\n    };\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return baseFindIndex(array, baseIsNaN, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = baseRest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = baseRest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = baseRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = baseRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`\n     * and is equivalent to `_.matches` when `source` is partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = baseRest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = baseRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = baseRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = baseRest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function supports comparing the same values as\n     * `_.isEqual` is equivalent to `_.isMatch` with `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lodash.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/alphabet.js\n ** module id = 4\n ** module chunks = 0\n **/","import _ from 'lodash';\nimport classNames from 'classnames';\n\nimport EditableAsset from '../editable_asset/0.1.js';\n\nclass Canvas extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      background: null,\n      items: [],\n      messages: [],\n      offsetX: 0,\n      offsetY: 0,\n      active: false,\n      valid: true,\n    };\n\n    this.deleteItem = this.deleteItem.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.deactivateItems = this.deactivateItems.bind(this);\n    this.relayerItems = this.relayerItems.bind(this);\n    this.setValid = this.setValid.bind(this);\n  }\n\n  start() {\n    var dom = ReactDOM.findDOMNode(this);\n\n    super.start();\n\n    this.setState({\n      width: dom.offsetWidth,\n      height: dom.offsetHeight,\n    });\n  }\n\n  getItems() {\n    var items, messages, self = this;\n\n    items = this.state.items.map((item, key) => {\n      var state;\n\n      if (!self.refs['item-' + key]) return item;\n\n      state = self.refs['item-' + key].state;\n\n      item.state = {\n        left: _.floor(state.left, 14),\n        top: _.floor(state.top, 14),\n        scale: _.floor(state.scale, 14),\n        rotation: _.floor(state.rotation, 14),\n        layer: state.layer,\n        valid: state.valid,\n        corners: state.corners,\n      };\n\n      item.check = state.check;\n      item.mime_type = state.mime_type; // eslint-disable-line camelcase\n\n      return item;\n    });\n\n    messages = this.state.messages.map((item, key) => {\n      var state;\n\n      if (!self.refs['message-' + key]) return item;\n\n      state = self.refs['message-' + key].state;\n\n      item.state = {\n        left: _.floor(state.left, 14),\n        top: _.floor(state.top, 14),\n        scale: _.floor(state.scale, 14),\n        rotation: _.floor(state.rotation, 14),\n        layer: state.layer,\n        valid: state.valid,\n        corners: state.corners,\n      };\n\n      item.check = state.check;\n      item.mime_type = state.mime_type; // eslint-disable-line camelcase\n\n      return item;\n    });\n\n    _.remove(items, n => {\n      return !n;\n    });\n\n    _.remove(messages, n => {\n      return !n;\n    });\n\n    return {\n      background: this.state.background,\n      items,\n      messages,\n    };\n  }\n\n  reset() {\n    this.setState({\n      background: null,\n      items: [],\n      messages: []\n    });\n  }\n\n  setItems(message) {\n    if (message) {\n      /*\n       *\n       * This makes sure the EditableAssets get cleared.\n       *\n       * This prevents the new assets from inheriting\n       * state from the old assets.\n       *\n       */\n      this.setState({\n        background: null,\n        items: [],\n        messages: [],\n      }, () => {\n        this.addItem(message.background);\n        message.items.forEach(asset => {\n          this.addItem(asset);\n        });\n        message.messages.forEach(asset => {\n          this.addItem(asset);\n        });\n      });\n    }\n  }\n\n  addItem(asset, cb) {\n    var items, messages, index, count;\n\n    if (!asset) return;\n\n    if (asset.asset_type === 'background') {\n      this.setState({\n        background: asset,\n      }, () => {\n        skoash.trigger('emit', {\n          name: 'getMedia',\n          'media_id': asset.media_id\n        }).then(d => {\n          var background = this.state.background;\n          background.check = d.check;\n          background.mime_type = d.mime_type; // eslint-disable-line camelcase\n          this.setState({\n            background\n          }, cb);\n        });\n      });\n    } else if (asset.asset_type === 'item') {\n      items = this.state.items;\n\n      count = _.reduce(items, (c, v) => {\n        if (asset.src === v.src) c++;\n        return c;\n      }, 1);\n\n      if (count > this.props.maxInstances) return;\n\n      items.push(asset);\n      index = items.indexOf(asset);\n\n      this.setState({\n        items,\n      }, () => {\n        skoash.trigger('emit', {\n          name: 'getMedia',\n          'media_id': asset.media_id\n        }).then(d => {\n          asset.check = d.check;\n          asset.mime_type = d.mime_type; // eslint-disable-line camelcase\n          items[index] = asset;\n          this.setState({\n            items\n          }, cb);\n        });\n      });\n    } else if (asset.asset_type === 'message') {\n      messages = this.state.messages;\n\n      count = _.reduce(items, (c, v) => {\n        if (asset.src === v.src) c++;\n        return c;\n      }, 1);\n\n      if (count > this.props.maxInstances) return;\n\n      messages.push(asset);\n      index = messages.indexOf(asset);\n\n      this.setState({\n        messages,\n      }, () => {\n        skoash.trigger('emit', {\n          name: 'getMedia',\n          'media_id': asset.media_id\n        }).then(d => {\n          asset.check = d.check;\n          asset.mime_type = d.mime_type; // eslint-disable-line camelcase\n          messages[index] = asset;\n          this.setState({\n            messages\n          }, cb);\n        });\n      });\n    }\n  }\n\n  deleteItem(key, type) {\n    var items;\n\n    items = this.state[type + 's'];\n    delete items[key];\n\n    this.setState({\n      [type + 's']: items,\n    });\n  }\n\n  deactivateItems(exclude, type) {\n    if (typeof exclude === 'object' && exclude.target) {\n      if (exclude.target.tagName !== 'LI') {\n        return;\n      }\n      this.setState({\n        active: false,\n      });\n    }\n\n    if (typeof exclude === 'number') {\n      this.setState({\n        active: true,\n      });\n    }\n\n    this.state.items.map((item, key) => {\n      if ((key !== exclude || type !== 'item') && this.refs['item-' + key]) {\n        this.refs['item-' + key].deactivate();\n      }\n    });\n\n    this.state.messages.map((item, key) => {\n      if ((key !== exclude || type !== 'message') && this.refs['message-' + key]) {\n        this.refs['message-' + key].deactivate();\n      }\n    });\n  }\n\n  relayerItems(type) {\n    var layers = [];\n\n    this.state[type + 's'].map((item, key) => {\n      var layer;\n\n      layer = this.refs[type + '-' + key].state.layer;\n\n      if (layers.indexOf(layer) === -1) {\n        layers.push(layer);\n      }\n    });\n\n    layers.sort((a, b) => {\n      return a < b;\n    });\n\n    this.state[type + 's'].map((item, key) => {\n      var oldLayer, newLayer;\n\n      oldLayer = this.refs[type + '-' + key].state.layer;\n      newLayer = (type === 'message') ? 10000 : 1000;\n      newLayer = newLayer - layers.indexOf(oldLayer);\n\n      this.refs[type + '-' + key].relayer(newLayer);\n    });\n  }\n\n  checkItem(key, type) {\n    var self = this;\n\n    return (\n      !self.refs[type + '-' + key].state.corners.length ||\n      (\n        self.isInBounds(key, type) && (\n          self.refs[type + '-' + key].state.can_overlap ||\n          !self.state[type + 's'].some((item, index) =>\n            key !== index &&\n            !self.refs[type + '-' + index].state.can_overlap &&\n            self.refs[type + '-' + index].state.corners.length &&\n            skoash.util.doIntersect(\n              self.refs[type + '-' + key].state.corners,\n              self.refs[type + '-' + index].state.corners\n            )\n          )\n        )\n      )\n    );\n  }\n\n  isInBounds(key, type) {\n    return !this.state.width ||\n      !this.state.height ||\n      !(\n      // box to left\n      skoash.util.doIntersect(\n        this.refs[type + '-' + key].state.corners,\n        [\n          {x: 0, y: -this.state.height},\n          {x: 0, y: 2 * this.state.height},\n          {x: -this.state.width, y: 2 * this.state.height},\n          {x: -this.state.width, y: -this.state.height}\n        ]\n      ) ||\n      // box above\n      skoash.util.doIntersect(\n        this.refs[type + '-' + key].state.corners,\n        [\n          {x: -this.state.width, y: 0},\n          {x: 2 * this.state.width, y: 0},\n          {x: 2 * this.state.width, y: -this.state.height},\n          {x: this.state.width, y: -this.state.height}\n        ]\n      ) ||\n      // box to right\n      skoash.util.doIntersect(\n        this.refs[type + '-' + key].state.corners,\n        [\n          {x: this.state.width, y: -this.state.height},\n          {x: this.state.width, y: 2 * this.state.height},\n          {x: 2 * this.state.width, y: 2 * this.state.height},\n          {x: 2 * this.state.width, y: -this.state.height}\n        ]\n      ) ||\n      // box below\n      skoash.util.doIntersect(\n        this.refs[type + '-' + key].state.corners,\n        [\n          {x: -this.state.width, y: this.state.height},\n          {x: 2 * this.state.width, y: this.state.height},\n          {x: 2 * this.state.width, y: 2 * this.state.height},\n          {x: -this.state.width, y: 2 * this.state.height}\n        ]\n      )\n    );\n  }\n\n  setValid(valid) {\n    this.setState({\n      valid\n    });\n\n    if (typeof this.props.setValid === 'function') {\n      this.props.setValid(valid);\n    }\n  }\n\n  getStyle() {\n    if (!this.state.background) return;\n\n    return {\n      backgroundImage: `url(${this.state.background.src})`,\n    };\n  }\n\n  renderItems() {\n    var self = this;\n\n    return this.state.items.map((item, key) => {\n      return (\n        <EditableAsset\n          {...item}\n          data-ref={key}\n          minDim={this.props.itemMinDim}\n          deleteItem={self.deleteItem}\n          checkItem={self.checkItem}\n          deactivateItems={self.deactivateItems}\n          relayerItems={self.relayerItems}\n          setValid={self.setValid}\n          ref={'item-' + key}\n          key={key}\n        />\n      );\n    });\n  }\n\n  renderMessages() {\n    var self = this;\n\n    return this.state.messages.map((item, key) => {\n      return (\n        <EditableAsset\n          {...item}\n          data-ref={key}\n          minDim={this.props.messageMinDim}\n          deleteItem={self.deleteItem}\n          checkItem={self.checkItem}\n          deactivateItems={self.deactivateItems}\n          relayerItems={self.relayerItems}\n          setValid={self.setValid}\n          canvasWidth={this.state.width}\n          canvasHeight={this.state.height}\n          ref={'message-' + key}\n          key={key}\n        />\n      );\n    });\n  }\n\n  getClassNames() {\n    return classNames({\n      canvas: true,\n      ACTIVE: !this.props.preview && this.state.active,\n    });\n  }\n\n  render() {\n    return (\n      <ul\n        className={this.getClassNames()}\n        style={this.getStyle()}\n        onClick={this.deactivateItems}\n      >\n        {this.renderItems()}\n        {this.renderMessages()}\n      </ul>\n    );\n  }\n}\n\nCanvas.defaultProps = _.defaults({\n  maxInstances: 5\n}, skoash.Component.defaultProps);\n\nexport default Canvas;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/canvas/0.1.js\n **/","import _ from 'lodash';\nimport shortid from 'shortid';\nimport classNames from 'classnames';\n\nimport Selectable from '../selectable/0.1';\n\nclass ItemDrawer extends Selectable {\n  constructor() {\n    super();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    var items, quickCheck, itemsChanged;\n\n    if (JSON.stringify(this.state.classes) !== JSON.stringify(nextState.classes)) {\n      return true;\n    }\n\n    items = nextProps.data || [];\n\n    if (nextState.category && items[nextState.category]) {\n      items = items[nextState.category].items;\n    }\n\n    quickCheck = _.reduce(items, (a, i) => {\n      a += i.name;\n      return a;\n    }, '');\n\n    itemsChanged = this.quickCheck !== quickCheck;\n    if (itemsChanged) {\n      this.quickCheck = quickCheck;\n    }\n\n    return itemsChanged;\n  }\n\n  start() {\n    var items, selectedItem, selectFunction, classes = {}, self = this;\n\n    selectFunction = this.state.selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\n    items = self.props.data || [];\n\n    if (self.state.category && items[self.state.category]) {\n      items = items[self.state.category].items;\n    }\n\n    selectedItem = JSON.stringify(self.props.selectedItem);\n\n    _.each(items, (item, key) => {\n      if (self.props.selectedItem && JSON.stringify(item) === selectedItem) {\n        classes[key] = self.state.selectClass;\n      }\n    });\n\n    if (this.props.selectOnStart) {\n      classes[this.props.selectOnStart] = this.state.selectClass;\n    }\n\n    this.setState({\n      started: true,\n      classes,\n      selectFunction,\n      categoryName: '',\n      category: '',\n    });\n\n    this.refs.list.scrollTop = 0;\n\n    _.each(self.refs, ref => {\n      if (typeof ref.start === 'function') ref.start();\n    });\n  }\n\n  selectHelper(e) {\n    var li, message, key, type, categoryName, classes = [];\n\n    li = e.target.closest('LI');\n    if (!li) return;\n\n    key = li.getAttribute('data-ref');\n    if (!this.refs[key]) return;\n\n    type = this.refs[key].props.item.asset_type;\n    if (!type) return;\n\n    if (type === 'folder') {\n      categoryName = this.refs[key].props.item.name;\n      this.setState({\n        category: key,\n        categoryName\n      });\n    } else {\n      message = this.refs[key].props.item;\n      classes[key] = this.state.selectClass;\n\n      this.setState({\n        message,\n        classes,\n      });\n    }\n  }\n\n  selectButton() {\n    if (typeof this.props.selectRespond === 'function') {\n      this.props.selectRespond(this.state.message);\n    }\n  }\n\n  continueButton() {\n    if (typeof this.props.selectRespond === 'function') {\n      this.props.selectRespond({});\n    }\n  }\n\n  cancelButton() {\n    if (typeof this.props.cancelRespond === 'function') {\n      this.props.cancelRespond.call(this);\n    }\n  }\n\n  getCategory() {\n    if (this.state.categoryName) {\n      return this.state.categoryName;\n    }\n\n    if (this.props.categories && this.props.categories.length) {\n      return this.props.categories[this.props.categories.length - 1];\n    }\n    return '';\n  }\n\n  getClassNames() {\n    return classNames({\n      'ANSWERED': _.values(this.state.classes).indexOf(this.state.selectClass) !== -1\n    }, this.props.className, 'item-drawer-component');\n  }\n\n  getULClass() {\n    var categories = '';\n\n    if (this.props.categories) {\n      categories = this.props.categories.join(' ');\n    }\n\n    return classNames({\n      'item-drawer': true,\n      [categories]: true,\n      COMPLETE: this.state.complete,\n    });\n  }\n\n  getClass(key, item) {\n    var white = item && item.name && item.name.toLowerCase().indexOf('w.') !== -1;\n\n    return classNames({\n      [this.state.classes[key] || '']: true,\n      white\n    });\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"buttons\">\n        <button className=\"select\" onClick={this.selectButton.bind(this)} />\n        <button className=\"continue\" onClick={this.continueButton.bind(this)} />\n        <button className=\"cancel\" onClick={this.cancelButton.bind(this)} />\n      </div>\n    );\n  }\n\n  renderItemContent(item) {\n    var content = [], src;\n\n    if (item.src || item.thumb) {\n      src = item.thumb || item.src;\n    } else if (item.items) {\n      if (!_.isArray(item.items)) {\n        item.items = _.values(item.items);\n      }\n\n      if (item.items[0]) {\n        src = item.items[0].thumb || item.items[0].src;\n      }\n\n      item.items.some(subitem => {\n        if (subitem.name === '_thumb.png') {\n          src = subitem.thumb || subitem.src;\n          return true;\n        }\n      });\n    }\n\n    if (src) {\n      content.push(<skoash.Image src={src} key={0} />);\n    }\n\n    if (item.name && (item.asset_type === 'folder' || item.asset_type === 'friend')) {\n      content.push(<span className=\"name\" key={1}>{item.name}</span>);\n    }\n\n    if (item.description) {\n      content.push(<span className=\"description\" key={2}>{item.description}</span>);\n    }\n\n    return content;\n  }\n\n  renderList() {\n    var items, self = this;\n\n    if (!this.props.data) return;\n\n    items = this.props.data;\n\n    if (this.state.category && items[this.state.category]) {\n      items = items[this.state.category].items;\n    }\n\n    if (!_.isArray(items)) {\n      items = _.values(items);\n    }\n\n    return items.sort((a, b) => {\n      var aVal = !_.isNaN(window.parseInt(a.order)) ? window.parseInt(a.order) : Infinity;\n      var bVal = !_.isNaN(window.parseInt(b.order)) ? window.parseInt(b.order) : Infinity;\n      if (aVal === bVal) {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      }\n      if (aVal < bVal) return -1;\n      return 1;\n    }).map((item, key) =>\n      <skoash.ListItem\n        className={this.getClass(key, item)}\n        ref={key}\n        data-ref={key}\n        item={item}\n        key={shortid.generate()}\n      >\n        {self.renderItemContent(item)}\n      </skoash.ListItem>\n    );\n  }\n\n  render() {\n    return (\n      <div className={this.getClassNames()}>\n        <div className=\"item-drawer-container\">\n          <h2>{this.getCategory()}</h2>\n          <ul ref=\"list\" className={this.getULClass()} onClick={this.state.selectFunction.bind(this)}>\n            {this.renderList()}\n          </ul>\n        </div>\n        {this.renderButtons()}\n      </div>\n    );\n  }\n}\n\nexport default ItemDrawer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/item_drawer/0.1.js\n **/","import _ from 'lodash';\nimport classNames from 'classnames';\n\nclass Draggable extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      zoom: 1,\n    };\n\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n\n    this.moveEvent = this.moveEvent.bind(this);\n\n    this.touchStart = this.touchStart.bind(this);\n    this.touchEnd = this.touchEnd.bind(this);\n  }\n\n  shouldDrag() {\n    return true;\n  }\n\n  markCorrect() {\n    this.setState({\n      correct: true,\n    });\n  }\n\n  markIncorrect() {\n    this.setState({\n      correct: false,\n    });\n  }\n\n  startEvent(e, cb) {\n    var pageX, pageY, rect, startX, startY, endX, endY, grabX, grabY;\n\n    if (e.target !== this.refs.el) return;\n    if (!this.shouldDrag()) return;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      pageX = e.targetTouches[0].pageX;\n      pageY = e.targetTouches[0].pageY;\n      rect = e.target.getBoundingClientRect();\n      e = e.targetTouches[0];\n      e.offsetX = pageX - rect.left;\n      e.offsetY = pageY - rect.top;\n    }\n\n    grabX = e.offsetX;\n    grabY = e.offsetY;\n\n    startX = endX = e.pageX - grabX;\n    startY = endY = e.pageY - grabY;\n\n    if (!this.props.return) {\n      startX = _.isFinite(this.state.grabX) ?\n        this.state.startX + this.state.grabX - grabX :\n        startX;\n      startY = _.isFinite(this.state.grabY) ?\n        this.state.startY + this.state.grabY - grabY :\n        startY;\n    }\n\n    this.setState({\n      dragging: true,\n      return: false,\n      startX,\n      startY,\n      grabX,\n      grabY,\n      endX,\n      endY,\n    });\n\n    if (typeof this.props.dragRespond === 'function') {\n      this.props.dragRespond(this.props.message);\n    }\n\n    if (typeof cb === 'function') {\n      cb.call(this);\n    }\n  }\n\n  attachMouseEvents() {\n    window.addEventListener('mousemove', this.moveEvent);\n    window.addEventListener('mouseup', this.mouseUp);\n  }\n\n  attachTouchEvents() {\n    window.addEventListener('touchmove', this.moveEvent);\n    window.addEventListener('touchend', this.touchEnd);\n  }\n\n  mouseDown(e) {\n    this.startEvent(e, this.attachMouseEvents);\n  }\n\n  touchStart(e) {\n    this.startEvent(e, this.attachTouchEvents);\n  }\n\n  moveEvent(e) {\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n      e.pageY = e.targetTouches[0].pageY;\n    }\n\n    this.setState({\n      endX: e.pageX - this.state.grabX,\n      endY: e.pageY - this.state.grabY,\n    });\n  }\n\n  endEvent(cb) {\n    this.dropRespond();\n\n    if (this.props.return) {\n      this.setState({\n        dragging: false,\n        return: this.props.return,\n        endX: this.state.startX,\n        endY: this.state.startY,\n      });\n    } else {\n      this.setState({\n        dragging: false,\n        return: this.props.return,\n      });\n    }\n\n    if (typeof cb === 'function') {\n      cb.call(this);\n    }\n  }\n\n  detachMouseEvents() {\n    window.removeEventListener('mousemove', this.moveEvent);\n    window.removeEventListener('mouseup', this.mouseUp);\n  }\n\n  detachTouchEvents() {\n    window.removeEventListener('touchmove', this.moveEvent);\n    window.removeEventListener('touchend', this.touchEnd);\n  }\n\n  mouseUp() {\n    this.endEvent(this.detachMouseEvents);\n  }\n\n  touchEnd() {\n    this.endEvent(this.detachTouchEvents);\n  }\n\n  dropRespond() {\n    var corners;\n\n    corners = this.setCorners();\n\n    if (typeof this.props.dropRespond === 'function') {\n      this.props.dropRespond(this.props.message, corners);\n    }\n  }\n\n  setCorners() {\n    var top, left, width, height, el, corners = [];\n\n    left = 0;\n    top = 0;\n    el = this.refs.el;\n    width = el.offsetWidth;\n    height = el.offsetHeight;\n\n    while (el) {\n      if (el.className.indexOf('screen') !== -1) {\n        break;\n      }\n\n      left += el.offsetLeft || 0;\n      top += el.offsetTop || 0;\n      el = el.offsetParent;\n    }\n\n    left += ((this.state.endX - this.state.startX) / this.state.zoom);\n    top += ((this.state.endY - this.state.startY) / this.state.zoom);\n\n    for (var i = 0; i < 4; i++) {\n      corners.push({\n        x: left + width * (i === 1 || i === 2 ? 1 : 0),\n        y: top + height * (i > 1 ? 1 : 0),\n      });\n    }\n\n    this.setState({\n      corners,\n    });\n\n    return corners;\n  }\n\n  componentDidMount() {\n    this.bootstrap();\n  }\n\n  bootstrap() {\n    skoash.Component.prototype.bootstrap.call(this);\n\n    this.setZoom();\n\n    this.refs.el.addEventListener('mousedown', this.mouseDown);\n    this.refs.el.addEventListener('touchstart', this.touchStart);\n\n    window.addEventListener('resize', this.setZoom.bind(this));\n  }\n\n  setZoom() {\n    this.setState({\n      zoom: skoash.trigger('getState').scale,\n    });\n  }\n\n  getStyle() {\n    var x, y; // eslint-disable-line no-unused-vars\n\n    x = ((this.state.endX - this.state.startX) / this.state.zoom);\n    y = ((this.state.endY - this.state.startY) / this.state.zoom);\n\n    return {\n      transform: `translateX(${x}px) translateY(${y}px)`,\n    };\n  }\n\n  getClassNames() {\n    return classNames({\n      draggable: true,\n      DRAGGING: this.state.dragging,\n      RETURN: this.state.return,\n      CORRECT: this.state.correct,\n    }, this.props.className);\n  }\n\n  render() {\n    return (\n      <div\n        ref=\"el\"\n        className={this.getClassNames()}\n        style={this.getStyle()}\n      >{this.props.children}</div>\n    );\n  }\n}\n\nexport default Draggable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/draggable/0.1.js\n **/","import _ from 'lodash';\nimport classNames from 'classnames';\n\nimport Draggable from '../draggable/0.1.js';\n\nclass EditableAsset extends Draggable {\n  constructor() {\n    super();\n\n    this.state = {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0,\n      scale: .5,\n      minScale: .1,\n      maxScale: 1,\n      rotation: 0,\n      layer: 1000,\n      zoom: 1,\n      active: false,\n      valid: true,\n      corners: [],\n      lastValid: {},\n    };\n\n    this.scale = this.scale.bind(this);\n    this.adjustScale = this.adjustScale.bind(this);\n    this.offScale = this.offScale.bind(this);\n\n    this.rotate = this.rotate.bind(this);\n    this.adjustRotation = this.adjustRotation.bind(this);\n    this.offRotate = this.offRotate.bind(this);\n  }\n\n  shouldDrag() {\n    return this.state.active;\n  }\n\n  activate() {\n    this.setState({\n      active: true,\n    });\n\n    if (typeof this.props.deactivateItems === 'function') {\n      this.props.deactivateItems(this.props['data-ref'], this.props.asset_type);\n    }\n  }\n\n  deactivate() {\n    if (!this.state.valid) {\n      this.setState({\n        left: this.state.lastValid.left || this.state.left,\n        top: this.state.lastValid.top || this.state.top,\n        scale: this.state.lastValid.scale || this.state.scale,\n        rotation: this.state.lastValid.rotation || this.state.rotation,\n        active: false,\n      }, () => {\n        setTimeout(() => {\n          this.checkItem();\n        }, 0);\n      });\n    } else {\n      this.setState({\n        active: false,\n      });\n    }\n  }\n\n  moveEvent(e) {\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n      e.pageY = e.targetTouches[0].pageY;\n    }\n\n    this.setState({\n      endX: e.pageX - this.state.grabX,\n      endY: e.pageY - this.state.grabY,\n      left: ((e.pageX - this.state.grabX - this.state.startX) / this.state.zoom),\n      top: ((e.pageY - this.state.grabY - this.state.startY) / this.state.zoom),\n    });\n    this.checkItem();\n  }\n\n  delete() {\n    if (typeof this.props.deleteItem === 'function') {\n      this.props.deleteItem(this.props['data-ref'], this.props.asset_type);\n    }\n  }\n\n  rotate() {\n    this.refs.el.parentNode.addEventListener('mousemove', this.adjustRotation);\n    this.refs.el.parentNode.addEventListener('mouseup', this.offRotate);\n\n    this.refs.el.parentNode.addEventListener('touchmove', this.adjustRotation);\n    this.refs.el.parentNode.addEventListener('touchend', this.offRotate);\n  }\n\n  offRotate() {\n    this.refs.el.parentNode.removeEventListener('mousemove', this.adjustRotation);\n    this.refs.el.parentNode.removeEventListener('mouseup', this.offRotate);\n\n    this.refs.el.parentNode.removeEventListener('touchmove', this.adjustRotation);\n    this.refs.el.parentNode.removeEventListener('touchend', this.offRotate);\n  }\n\n  adjustRotation(e) {\n    var rotation, deltaX, deltaY;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n      e.pageY = e.targetTouches[0].pageY;\n    }\n\n    deltaX = (e.pageX / this.state.zoom) - (this.refs.li.offsetParent.offsetLeft) - (this.state.left + this.state.width / 2);\n    deltaY = (e.pageY / this.state.zoom) - (this.refs.li.offsetParent.offsetTop) - (this.state.top + this.state.height / 2);\n\n    rotation = Math.atan2(deltaY, deltaX) + (Math.PI / 4) % (2 * Math.PI);\n\n    this.setState({\n      rotation,\n    });\n\n    this.checkItem();\n  }\n\n  layer() {\n    var layer, self = this;\n\n    layer = this.state.layer - 1;\n\n    this.setState({\n      layer,\n    }, () => {\n      if (typeof self.props.relayerItems === 'function') {\n        self.props.relayerItems(self.props.asset_type);\n      }\n    });\n  }\n\n  relayer(layer) {\n    this.setState({\n      layer,\n    });\n  }\n\n  scale() {\n    this.refs.el.parentNode.addEventListener('mousemove', this.adjustScale);\n    this.refs.el.parentNode.addEventListener('mouseup', this.offScale);\n\n    this.refs.el.parentNode.addEventListener('touchmove', this.adjustScale);\n    this.refs.el.parentNode.addEventListener('touchend', this.offScale);\n  }\n\n  offScale() {\n    this.refs.el.parentNode.removeEventListener('mousemove', this.adjustScale);\n    this.refs.el.parentNode.removeEventListener('mouseup', this.offScale);\n\n    this.refs.el.parentNode.removeEventListener('touchmove', this.adjustScale);\n    this.refs.el.parentNode.removeEventListener('touchend', this.offScale);\n  }\n\n  adjustScale(e) {\n    var scale, deltaX, deltaY, delta, base;\n\n    if (e.targetTouches && e.targetTouches[0]) {\n      e.pageX = e.targetTouches[0].pageX;\n      e.pageY = e.targetTouches[0].pageY;\n    }\n\n    deltaX = (e.pageX / this.state.zoom) - (this.refs.li.offsetParent.offsetLeft / this.state.zoom) - (this.state.left / this.state.zoom + this.state.width / 2);\n    deltaY = (e.pageY / this.state.zoom) - (this.refs.li.offsetParent.offsetTop / this.state.zoom) - (this.state.top / this.state.zoom + this.state.height / 2);\n\n    delta = Math.pow(Math.pow(deltaX, 2) + Math.pow(deltaY, 2), .5);\n    base = Math.pow(Math.pow(this.state.width / 2, 2) + Math.pow(this.state.height / 2, 2), .5);\n\n    scale = Math.max(Math.min(delta / base, 1), this.state.minScale);\n\n    this.setState({\n      scale,\n    });\n\n    this.checkItem();\n  }\n\n  checkItem() {\n    this.setCorners(() => {\n      var valid;\n\n      if (typeof this.props.checkItem === 'function') {\n        valid = this.props.checkItem(this.props['data-ref'], this.props.asset_type);\n\n        if (valid) {\n          this.setState({\n            valid,\n            lastValid: new Object(this.state),\n          });\n        } else {\n          this.setState({\n            valid,\n          });\n        }\n\n        if (typeof this.props.setValid === 'function') {\n          this.props.setValid(valid);\n        }\n      }\n    });\n  }\n\n  setCorners(cb) {\n    var center, distance, angle, corners = [];\n\n    center = {\n      x: this.state.left + this.state.width / 2,\n      y: this.state.top + this.state.height / 2,\n    };\n\n    distance = Math.pow(Math.pow(this.state.width * this.state.scale / 2, 2) + Math.pow(this.state.height * this.state.scale / 2, 2), .5);\n\n    for (var i = 0; i < 4; i++) {\n      angle = this.state.rotation;\n      angle += (i < 2 ? 0 : Math.PI);\n      angle += Math.pow(-1, i) * Math.atan2(this.state.height, this.state.width);\n\n      corners.push({\n        x: center.x + distance * Math.cos(angle),\n        y: center.y + distance * Math.sin(angle),\n      });\n    }\n\n    this.setState({\n      corners,\n    }, cb);\n  }\n\n  getSize() {\n    var image, self = this;\n\n    image = new Image();\n\n    image.onload = () => {\n      var left, top, width, height, minDim, maxDim, minScale, maxScale, scale;\n\n      minDim = this.props.minDim || 40;\n      maxDim = this.props.maxDim || 400;\n      left = this.state.left;\n      top = this.state.top;\n      width = image.width;\n      height = image.height;\n\n      minScale = Math.max(minDim / width, minDim / height);\n      maxScale = Math.min(maxDim / width, maxDim / height, this.state.maxScale);\n      scale = self.props.state && self.props.state.scale ?\n        self.props.state.scale :\n        Math.max(Math.min(self.state.scale, maxScale), minScale);\n\n      if ((!this.state.height || !this.state.width) &&\n        (!this.state.left && !this.state.top)) {\n        left = (this.props.canvasWidth - width) / 2;\n        top = (this.props.canvasHeight - height) / 2;\n      }\n\n      self.setState({\n        left,\n        top,\n        width,\n        height,\n        minScale,\n        scale,\n      }, () => {\n        self.activate();\n        self.checkItem();\n      });\n    };\n\n    image.src = this.props.src;\n  }\n\n  getLayer() {\n    var layer = 1000;\n\n    if (this.props.state && this.props.state.layer) {\n      layer = this.props.state.layer;\n    } else {\n      switch (this.props.asset_type) {\n      case 'background':\n        layer = 1;\n        break;\n      case 'message':\n        layer = 10000;\n        break;\n      }\n    }\n\n    this.setState({\n      layer,\n    });\n  }\n\n  attachEvents() {\n    this.refs.scale.addEventListener('mousedown', this.scale);\n    this.refs.rotate.addEventListener('mousedown', this.rotate);\n\n    this.refs.scale.addEventListener('touchstart', this.scale);\n    this.refs.rotate.addEventListener('touchstart', this.rotate);\n  }\n\n  componentDidMount() {\n    this.bootstrap();\n  }\n\n  bootstrap() {\n    super.bootstrap();\n\n    if (this.props.state) {\n      this.setState(this.props.state);\n    }\n\n    this.getSize();\n    this.getLayer();\n\n    this.attachEvents();\n\n    skoash.trigger('emit', {\n      name: 'getMedia',\n      'media_id': this.props.media_id\n    }).then(d => {\n      this.setState(d, () => {\n        this.checkItem();\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.attachEvents();\n  }\n\n  getButtonStyle() {\n    var style, transform = '';\n\n    transform += `scale(${(1 / this.state.scale)}) `;\n    transform += `rotate(${(-this.state.rotation)}rad) `;\n\n    style = {\n      transform,\n    };\n\n    return style;\n  }\n\n  getAssetStyle() {\n    var style, transform = '';\n\n    transform += `scale(${this.state.scale}) `;\n    transform += `rotate(${this.state.rotation}rad) `;\n\n    style = {\n      backgroundImage: `url(\"${this.props.src}\")`,\n      width: this.state.width,\n      height: this.state.height,\n      left: this.state.left,\n      top: this.state.top,\n      transform,\n      zIndex: this.state.layer,\n    };\n\n    return style;\n  }\n\n  getButtonsStyle() {\n    var style, transform = '';\n\n    transform += `scale(${this.state.scale}) `;\n    transform += `rotate(${this.state.rotation}rad) `;\n\n    style = {\n      width: this.state.width,\n      height: this.state.height,\n      left: this.state.left,\n      top: this.state.top,\n      transform,\n    };\n\n    return style;\n  }\n\n  getClasses() {\n    return classNames({\n      DRAGGING: this.state.dragging,\n      RETURN: this.state.return,\n      ACTIVE: this.state.active,\n      INVALID: !this.state.valid,\n    }, 'editable-asset', this.props.asset_type);\n  }\n\n  renderAsset() {\n    return (\n      <div\n        ref=\"el\"\n        className=\"asset\"\n        style={this.getAssetStyle()}\n      />\n    );\n  }\n\n  renderButtons() {\n    return (\n      <div\n        className=\"buttons\"\n        style={this.getButtonsStyle()}\n      >\n        <button\n          className=\"delete\"\n          style={this.getButtonStyle()}\n          onClick={this.delete.bind(this)}\n        />\n        <button\n          ref=\"rotate\"\n          className=\"rotate\"\n          style={this.getButtonStyle()}\n        />\n        <button\n          className=\"layer\"\n          onClick={this.layer.bind(this)}\n          style={this.getButtonStyle()}\n        />\n        <button\n          ref=\"scale\"\n          className=\"scale\"\n          style={this.getButtonStyle()}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <li\n        ref=\"li\"\n        className={this.getClasses()}\n        onClick={this.activate.bind(this)}\n      >\n        {this.renderAsset()}\n        {this.renderButtons()}\n      </li>\n    );\n  }\n}\n\nEditableAsset.defaultProps = _.defaults({\n  canvasWidth: 1280,\n  canvasHeight: 720,\n}, Draggable.defaultProps);\n\nexport default EditableAsset;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/editable_asset/0.1.js\n **/","import _ from 'lodash';\n\nimport Selectable from '../selectable/0.1';\n\nimport classNames from 'classnames';\n\nclass Inbox extends Selectable {\n  constructor() {\n    super();\n  }\n\n  selectHelper(e) {\n    var li, message, key, classes = [];\n\n    li = e.target.closest('LI');\n\n    if (!li) return;\n\n    key = li.getAttribute('data-ref');\n\n    if (!this.refs[key]) return;\n\n    message = this.refs[key].props.item;\n    classes[key] = this.state.selectClass;\n\n    this.setState({\n      message,\n      classes,\n    });\n\n    if (message.status !== 'COMPLETE') return;\n\n    if (typeof this.props.selectRespond === 'function' && message) {\n      this.props.selectRespond(message);\n    }\n  }\n\n  getClass(key, read) {\n    return classNames(\n      this.state.classes[key], {\n        UNREAD: this.props.friendKey === 'created_by' && !read,\n        SENT: this.props.friendKey !== 'created_by'\n      }\n    );\n  }\n\n  getClassNames() {\n    return classNames({\n      'item-drawer': true,\n      COMPLETE: this.state.complete,\n    }, this.props.className);\n  }\n\n  getStatusText(item) {\n    if (!item.status || item.status === 'COMPLETE') return '';\n    return item.status;\n  }\n\n  renderList() {\n    var items, friends;\n\n    if (!this.props.data || !this.props.data.items) return;\n\n    items = this.props.data.items;\n\n    if (!items.length) {\n      return (\n        <li className=\"empty\">\n          {this.props.emptyMessage}\n        </li>\n      );\n    }\n\n    friends = skoash.trigger('getState').data.user || [];\n\n    return items.map((item, key) => {\n      var timestamp, image, name;\n      timestamp = moment.utc(item.updated).local();\n      key = 'message-' + key;\n\n      friends.forEach(friend => {\n        if (item[this.props.friendKey] === friend.friend_id) {\n          image = friend._embedded.image ? friend._embedded.image.url : '';\n          name = friend.username;\n        }\n      });\n\n      if (!name) {\n        skoash.trigger('getData', {\n          name: 'getFriend',\n          'friend_id': item[this.props.friendKey],\n        });\n      }\n\n      if (this.props.friendKey === 'friend_to') {\n        item.sent = true;\n      }\n\n      return (\n        <skoash.ListItem\n          className={this.getClass(key, item.read)}\n          ref={key}\n          data-ref={key}\n          item={item}\n          key={key}\n        >\n          <skoash.Image src={image} />\n          <span className=\"username\">{name}</span>\n          <span className=\"timestamp\">\n            <span className=\"date\">{timestamp.format('MM.DD.YY')}</span>\n            <span className=\"time\">{timestamp.format('h:mm a')}</span>\n          </span>\n          <span className={'status ' + item.status}>\n            {this.getStatusText(item)}\n          </span>\n        </skoash.ListItem>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ul className={this.getClassNames()} onClick={this.state.selectFunction.bind(this)}>\n          {this.renderList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nInbox.defaultProps = _.defaults({\n  friendKey: 'created_by'\n}, Selectable.defaultProps);\n\nexport default Inbox;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/inbox/0.1.js\n **/","export default function (props, ref, key) {\n  var iOSSplashScreen = (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"ios-splash\"\n      checkComplete={false}\n      completeDelay={6000}\n      hidePrev\n    >\n      <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball.png\" />\n      <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball_anim.gif\" />\n    </skoash.Screen>\n  );\n\n  return iOSSplashScreen;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/ios_splash_screen/0.1.js\n **/","class Loader extends skoash.Component {\n  constructor() {\n    super();\n\n  }\n\n  render() {\n    return (\n      <div id=\"loader\" className=\"center\">\n        <div className=\"group\">\n          <h2>Loading!</h2>\n          <div className=\"spinner animated\">\n            <div className=\"spinner animated\">\n              <div className=\"spinner animated\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/loader/0.1.js\n **/","import Selectable from '../selectable/0.1.js';\n\nimport classNames from 'classnames';\n\nclass Menu extends Selectable {\n  constructor() {\n    super();\n\n    this.state = {\n      active: false,\n      selectClass: 'SELECTED',\n      classes: {},\n    };\n  }\n\n  deactivate() {\n    var self = this;\n\n    this.setState({\n      active: false,\n    });\n\n    Object.keys(this.refs).map(key => {\n      if (typeof self.refs[key].deactivate === 'function') {\n        self.refs[key].deactivate();\n      }\n    });\n  }\n\n  onClick(e) {\n    var li, ul, dom, message, active = false, classes = [];\n\n    li = e.target.closest('LI');\n\n    if (!li) return;\n\n    ul = li.closest('UL');\n    dom = ReactDOM.findDOMNode(this); // eslint-disable-line no-undef\n\n    if (ul !== dom) return;\n\n    message = li.getAttribute('data-ref');\n\n    if (this.state.classes[message] !== this.state.selectClass) {\n      classes[message] = this.state.selectClass;\n      active = !this.props.inactive;\n    }\n\n    this.setState({\n      classes,\n      active,\n    });\n  }\n\n  renderItems() {\n    var self = this;\n\n    if (typeof this.props.items !== 'object') return;\n\n    return Object.keys(this.props.items).map((key) => {\n      var item, onClick, gotoObj, categories, isFinal;\n\n      categories = this.props.categories ? [].concat(this.props.categories) : [];\n      categories.push(key);\n\n      item = this.props.items[key];\n\n      isFinal = (\n          typeof item.items !== 'object' ||\n          Object.prototype.toString.call(item.items) === '[object Array]'\n        ) || (\n          typeof self.props.lastLevel === 'number' &&\n          self.props.lastLevel === self.props.level\n        );\n\n      if (isFinal) {\n        gotoObj = {\n          index: 'item-drawer',\n          categories,\n        };\n        onClick = skoash.trigger.bind(null, 'goto', gotoObj);\n      }\n\n      return (\n        <skoash.ListItem\n          className={self.getClass(key)}\n          data-ref={key}\n          ref={key}\n          key={key}\n          onClick={onClick}\n        >\n          <span>{key}</span>\n          {(() => {\n            if (isFinal) return;\n            return (\n              <Menu\n                ref={'menu-' + key}\n                categories={categories}\n                items={item.items}\n                inactive={true}\n                level={(self.props.level || 0) + 1}\n                lastLevel={self.props.lastLevel}\n              />\n            );\n          })()}\n        </skoash.ListItem>\n      );\n    });\n  }\n\n  getClass(key) {\n    return classNames({\n      [key.replace(' ', '-')]: true,\n      [this.state.classes[key] || '']: true,\n    });\n  }\n\n  getClassNames() {\n    return classNames({\n      menu: true,\n      ACTIVE: this.state.active,\n    }, this.props.className);\n  }\n\n  render() {\n    return (\n      <ul\n        className={this.getClassNames()}\n        onClick={this.onClick.bind(this)}\n      >\n        {this.renderItems()}\n      </ul>\n    );\n  }\n}\n\nexport default Menu;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/menu/0.1.js\n **/","class QuitScreen extends skoash.Screen {\n  okay() {\n    skoash.trigger('quit');\n  }\n\n  cancel() {\n    this.close();\n    skoash.trigger('menuClose', {\n      id: this.state.id,\n    });\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} className={this.getClassNames()}>\n        <div className=\"center\">\n          <div className=\"frame\">\n            <h2>Are you sure you<br/>want to quit?</h2>\n            <h3>Your game progress will be saved</h3>\n            <button className=\"quit-yes\" onClick={this.okay.bind(this)}></button>\n            <button className=\"quit-no\" onClick={this.cancel.bind(this)}></button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default (\n  <QuitScreen\n    id=\"quit\"\n  />\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/quit_screen/0.1.js\n **/","class Reveal extends skoash.Component {\n  constructor() {\n    super();\n\n    this.list = [\n      <li></li>,\n      <li></li>,\n      <li></li>,\n      <li></li>\n    ];\n\n    this.state = {\n      openReveal: '',\n    };\n  }\n\n  open(message) {\n    this.setState({\n      open: true,\n      openReveal: message,\n    });\n\n    this.playAudio(message);\n\n    this.requireForComplete = this.requireForComplete.filter(item => {\n      return (item !== message) || (this.refs[message] instanceof skoash.Audio);\n    });\n  }\n\n  close() {\n    this.setState({\n      open: false,\n      openReveal: '',\n    });\n\n    if (typeof this.props.closeRespond === 'function') {\n      this.props.closeRespond();\n    }\n  }\n\n  start() {\n    skoash.Component.prototype.start.call(this);\n    this.close();\n\n    if (this.props.openOnStart != null) {\n      this.open(this.props.openOnStart);\n    }\n  }\n\n  playAudio(message) {\n    var messages;\n\n    if (this.audio['open-sound']) {\n      this.audio['open-sound'].play();\n    }\n\n    if (typeof message === 'string') {\n      messages = message.split(' ');\n      messages.map(audio => {\n        if (this.audio[audio]) {\n          this.audio[audio].play();\n        }\n      });\n    } else {\n      if (this.audio.voiceOver[message]) {\n        this.audio.voiceOver[message].play();\n      }\n    }\n  }\n\n  renderAssets() {\n    if (this.props.assets) {\n      return this.props.assets.map((asset, key) => {\n        return (\n          <skoash.Audio\n            {...asset.props}\n            ref={asset.props['data-ref'] || ('asset-' + key)}\n            key={key}\n            data-ref={key}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderList() {\n    var list = this.props.list || this.list;\n\n    return list.map((li, key) => {\n      var ref = li.props['data-ref'] == null ? key : li.props['data-ref'];\n      return (\n        <li\n          {...li.props}\n          className={this.getClass(li, key)}\n          data-ref={ref}\n          ref={key}\n          key={key}\n        ></li>\n      );\n    });\n  }\n\n  getClass(li, key) {\n    var classes = '';\n\n    if (li.props.className) classes += li.props.className;\n    if (this.state.openReveal.indexOf(key) !== -1) classes += ' OPEN';\n    if (this.state.openReveal.indexOf(li.props['data-ref']) !== -1) classes += ' OPEN';\n\n    return classes;\n  }\n\n  getClasses() {\n    var classes = '';\n\n    if (this.state.open) classes += 'OPEN';\n    if (this.state.complete) classes += ' COMPLETE';\n\n    return classes;\n  }\n\n  render() {\n    return (\n      <div className={'reveal ' + this.getClasses()}>\n        {this.renderAssets()}\n        <div>\n          <ul>\n            {this.renderList()}\n          </ul>\n          <button className=\"close-reveal\" onClick={this.close.bind(this)}></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Reveal;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/reveal/0.1.js\n **/","import Selectable from '../selectable/0.1';\n\nimport classNames from 'classnames';\n\nclass SavedMessages extends Selectable {\n  constructor() {\n    super();\n  }\n\n  selectHelper(e) {\n    var li, message, key, classes = [];\n\n    li = e.target.closest('LI');\n\n    if (!li) return;\n\n    key = li.getAttribute('data-ref');\n\n    message = this.refs[key].props.item;\n    classes[key] = this.state.selectClass;\n\n    this.setState({\n      message,\n      classes,\n    }, this.selectRespond.bind(this));\n  }\n\n  selectRespond() {\n    if (typeof this.props.selectRespond === 'function' && this.state.message) {\n      this.props.selectRespond(this.state.message);\n    }\n  }\n\n  getClass(key) {\n    return classNames({\n      [this.state.classes[key] || '']: true,\n      DRAFT: true,\n    });\n  }\n\n  getClassNames() {\n    return classNames({\n      'item-drawer': true,\n      SAVED: true,\n      COMPLETE: this.state.complete,\n    }, this.props.className);\n  }\n\n  renderThumb(item) {\n    var firstImg, background;\n\n    background = item && item.rules && item.rules.background &&\n      item.rules.background.src ? item.rules.background.src :\n      '';\n\n    firstImg = item && item.rules && item.rules.items &&\n      item.rules.items[0] && item.rules.items[0].src ?\n      item.rules.items[0].src : (\n        item && item.rules && item.rules.messages &&\n        item.rules.messages[0] && item.rules.messages[0].src ?\n        item.rules.messages[0].src : ''\n      );\n\n    return (\n      <div\n        className=\"thumbnail\"\n        style={{\n          backgroundImage: `url(${background})`\n        }}\n      >\n        <skoash.Image src={firstImg} />\n      </div>\n    );\n  }\n\n  renderList() {\n    var items, self = this;\n\n    if (!self.props.data || !self.props.data.items) return;\n\n    items = self.props.data.items;\n\n    if (!items.length) {\n      return (\n        <li className=\"empty\">\n          {this.props.emptyMessage}\n        </li>\n      );\n    }\n\n    return items.map((item, key) => {\n      var timestamp = moment.utc(item.updated).local();\n      return (\n        <skoash.ListItem\n          className={self.getClass(key)}\n          ref={key}\n          data-ref={key}\n          item={item}\n          key={key}\n        >\n          {self.renderThumb(item)}\n          <span className=\"timestamp\">\n            <span className=\"date\">{timestamp.format('MM.DD.YY')}</span>\n            <span className=\"time\">{timestamp.format('h:mm a')}</span>\n          </span>\n        </skoash.ListItem>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ul className={this.getClassNames()} onClick={this.state.selectFunction.bind(this)}>\n          {this.renderList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SavedMessages;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/saved_messages/0.1.js\n **/","import Selectable from '../selectable/0.1.js';\nimport Reveal from '../reveal/0.1.js';\n\nclass SelectableReveal extends skoash.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      answers: [],\n    };\n  }\n\n  open(message) {\n    this.refs.reveal.open(message);\n  }\n\n  selectRespond(message) {\n    if (this.state.answers.length) {\n      if (this.state.answers.indexOf(message) === -1) {\n        if (this.audio.incorrect) this.audio.incorrect.play();\n      } else {\n        if (this.audio.correct) this.audio.correct.play();\n        if (typeof this.refs.reveal.open === 'function') {\n          this.open(message);\n        }\n      }\n    } else {\n      if (typeof this.refs.reveal.open === 'function') {\n        this.open(message);\n      }\n    }\n  }\n\n  closeRespond() {\n    if (typeof this.props.closeRespond === 'function') {\n      this.props.closeRespond();\n    }\n  }\n\n  renderAssets() {\n    if (this.props.assets) {\n      return this.props.assets.map((asset, key) => {\n        return (\n          <skoash.Audio\n            {...asset.props}\n            ref={asset.props['data-ref'] || ('asset-' + key)}\n            key={key}\n            data-ref={key}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderSelectable() {\n    return (\n      <Selectable\n        ref=\"selectable\"\n        list={this.props.selectableList}\n        selectRespond={this.selectRespond.bind(this)}\n        selectClass={this.props.selectableSelectClass}\n        selectOnStart={this.props.selectOnStart}\n      />\n    );\n  }\n\n  renderReveal() {\n    return (\n      <Reveal\n        ref=\"reveal\"\n        list={this.props.revealList}\n        assets={this.props.revealAssets}\n        closeRespond={this.closeRespond.bind(this)}\n        openOnStart={this.props.openOnStart}\n      />\n    );\n  }\n\n  getClasses() {\n    var classes = '';\n\n    if (this.state.complete) classes += ' COMPLETE';\n\n    return classes;\n  }\n\n  render() {\n    return (\n      <div className={'selectable-reveal' + this.getClasses()}>\n        {this.renderAssets()}\n        {this.renderSelectable()}\n        {this.renderReveal()}\n      </div>\n    );\n  }\n}\n\nexport default SelectableReveal;\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/components/selectable_reveal/0.1.js\n **/","(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-26000499-1', 'auto');\nga('send', 'pageview');\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/js/google-analytics.js\n **/","(function test() {\n  if (window.parent === window) {\n    window.location.href = 'https://www.changemyworldnow.com/';\n  } else {\n    document.domain = 'changemyworldnow.com';\n  }\n}());\n\n\n\n/** WEBPACK FOOTER **\n ** ./shared/js/test-platform-integration.js\n **/","import _ from 'lodash';\n\nimport Canvas from 'shared/components/canvas/0.1';\nimport Menu from 'shared/components/menu/0.1';\nimport Selectable from 'shared/components/selectable/0.1';\n// import Reveal from 'shared/components/reveal/0.1';\n\nimport classNames from 'classnames';\n\nclass CanvasScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state = {\n      load: true,\n      menu: {},\n      valid: true,\n    };\n\n    this.rightMenuList = [\n      <li className=\"preview\" onClick={this.preview.bind(this)}>\n        <span />\n      </li>,\n      <li className=\"send\" onClick={this.send.bind(this)}>\n        <span />\n      </li>\n    ];\n\n    this.setValid = this.setValid.bind(this);\n    this.closeReveal = this.closeReveal.bind(this);\n    this.setHasAssets = this.setHasAssets.bind(this);\n  }\n\n  getData() {\n    return this.refs.canvas.getItems();\n  }\n\n  reset() {\n    this.refs.canvas.reset();\n    this.setState({\n      background: false,\n      hasAssets: false,\n    });\n  }\n\n  addItem(message) {\n    if (message) {\n      this.setState({\n        hasAssets: true,\n        background: this.state.background ||\n              message.asset_type === 'background',\n      });\n      this.refs.canvas.addItem(message, () => {\n        skoash.trigger('save');\n      });\n    }\n  }\n\n  addItems(message) {\n    var hasAssets, background;\n\n    hasAssets = true;\n    background = !!message.rules.background;\n\n    this.mapRulesStringToNumbers(message.rules);\n\n    this.refs.canvas.setItems(message.rules);\n\n    this.setState({\n      hasAssets,\n      background,\n    });\n\n    if (message.friend_to) {\n      skoash.trigger('passData', {\n        name: 'add-recipient',\n        message: message.friend_to\n      });\n    }\n  }\n\n  setMenu() {\n    var menu, state;\n    state = skoash.trigger('getState');\n\n    if (state && state.data && state.data.menu) {\n      menu = state.data.menu;\n      this.setState({\n        menu,\n      });\n    }\n  }\n\n  mapRulesStringToNumbers(rules) {\n    if (!rules) return;\n\n    if (_.isArray(rules.items)) {\n      rules.items.forEach(item => {\n        item.state.left = parseFloat(item.state.left);\n        item.state.rotation = parseFloat(item.state.rotation);\n        item.state.scale = parseFloat(item.state.scale);\n        item.state.top = parseFloat(item.state.top);\n      });\n    }\n\n    if (_.isArray(rules.messages)) {\n      rules.messages.forEach(message => {\n        message.state.left = parseFloat(message.state.left);\n        message.state.rotation = parseFloat(message.state.rotation);\n        message.state.scale = parseFloat(message.state.scale);\n        message.state.top = parseFloat(message.state.top);\n      });\n    }\n\n    return rules;\n  }\n\n  open(opts = {}) {\n    this.setMenu();\n\n    if (this.refs && this.refs.menu) {\n      this.refs.menu.deactivate();\n    }\n\n    if (!opts.draft) skoash.trigger('save');\n\n    // interval = setInterval(() => {\n    //   skoash.trigger('save');\n    // }, 120000);\n\n    // this.setState({\n    //   interval\n    // });\n\n    super.open();\n  }\n\n  close() {\n    skoash.trigger('save');\n    // clearInterval(this.state.interval);\n    // this.setState({\n    //   interval: null\n    // });\n    super.close();\n  }\n\n  setValid(valid) {\n    this.setState({\n      valid\n    });\n  }\n\n  setHasAssets(hasAssets) {\n    this.setState({\n      hasAssets\n    });\n  }\n\n  send() {\n    if (!this.state.valid) return;\n    this.goto('send');\n  }\n\n  preview() {\n    if (!this.state.valid) return;\n    this.goto('preview');\n  }\n\n  closeReveal() {\n    if (this.refs && this.refs.reveal) {\n      this.refs.reveal.close();\n    }\n  }\n\n  getContainerClasses() {\n    return classNames({\n      'canvas-container': true,\n      BACKGROUND: this.state.background,\n    });\n  }\n\n  getClassNames() {\n    return classNames({\n      'HAS-ASSETS': this.state.hasAssets,\n      'INVALID': !this.state.valid,\n    }, skoash.Screen.prototype.getClassNames.call(this));\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <skoash.Image className=\"hidden\" src=\"media/_Frames/SK_frames_canvas.png\" />\n        <skoash.Image className=\"hidden\" src=\"media/_Buttons/SK_btn_friend.png\" />\n        <Menu\n          ref={'menu'}\n          items={this.state.menu.items}\n          level={0}\n          lastLevel={1}\n        />\n        <div className={this.getContainerClasses()}>\n          <Canvas\n            ref={'canvas'}\n            setValid={this.setValid}\n            setHasAssets={this.setHasAssets}\n            itemMinDim={150}\n          />\n        </div>\n        <Selectable className=\"menu right-menu\" list={this.rightMenuList} />\n      </div>\n    );\n    // move this back up below the Selectable when there is an instructional help video\n    /*\n        <Reveal\n          ref=\"reveal\"\n          openOnStart=\"0\"\n          list={[\n            <li>\n              <skoash.Image className=\"otter\" src={'media/_Otter/Otter_Static_GreetingTwo.png'} />\n              <div className=\"bubble\">\n                Welcome to your canvas!<br/><br/>\n                Would you like me<br/>\n                to show you around?\n                <div className=\"buttons\">\n                  <button\n                    className=\"yes\"\n                    onClick={skoash.trigger.bind(null, 'openMenu', {id: 'help'})}\n                  />\n                  <button\n                    className=\"no\"\n                    onClick={this.closeReveal}\n                  />\n                </div>\n              </div>\n            </li>\n          ]}\n        />\n    */\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <CanvasScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"canvas\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/canvas_screen.js\n **/","import ItemDrawer from '../../shared/components/item_drawer/0.1.js';\n\nconst DEFAULT_PROFILE_IMAGE = 'https://changemyworldnow.com/ff50fa329edc8a1d64add63c839fe541.png';\n\nclass FriendScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state = {\n      load: true,\n      complete: true,\n      recipient: {},\n      opts: {},\n    };\n  }\n\n  selectRespond(message) {\n    skoash.trigger('pass-data', {\n      name: 'add-recipient',\n      goto: this.state.opts.goto,\n      message\n    });\n  }\n\n  updateData(d) {\n    var data = d && d.user ? d.user : skoash.trigger('getState').data.user || [];\n\n    data = data.map(friend => {\n      var src = friend._embedded.image && friend._embedded.image.url ?\n        friend._embedded.image.url :\n        DEFAULT_PROFILE_IMAGE;\n      return {\n        'user_id': friend.friend_id,\n        name: friend.username,\n        src,\n        // I need to get the flips earned back from the backend to do this.\n        description: '',\n        // description: friend.flips_earned + ' Flips Earned',\n        'asset_type': 'friend',\n      };\n    });\n\n    this.setState({\n      data,\n    });\n  }\n\n  open(opts) {\n    var recipient, self = this;\n\n    self.updateData();\n\n    skoash.trigger('getData', {\n      name: 'getFriends'\n    }).then(data => {\n      self.updateData.call(self, data);\n    });\n\n    recipient = skoash.trigger('getState').recipient;\n\n    self.setState({\n      load: true,\n      open: true,\n      leave: false,\n      close: false,\n      recipient,\n      opts,\n    }, () => {\n      self.refs.drawer && self.refs.drawer.start();\n    });\n\n    if (!self.state.started) {\n      self.start();\n    }\n  }\n\n  suggestFriends() {\n    window.open(window.location.origin.replace('games-', '') + '/friends/suggested');\n  }\n\n  save() {\n    skoash.trigger('goto', {\n      index: 'canvas',\n    });\n    skoash.trigger('openMenu', {id: 'save'});\n  }\n\n  renderOtter() {\n    var copy, src;\n\n    src = 'One';\n    copy = (\n      <span>\n        Don't have<br/> friends yet?<br/><br/> Let me suggest<br/> some for you.\n      </span>\n    );\n\n    if (this.state.data && this.state.data.length) {\n      src = 'Two';\n      copy = (\n        <span>\n          Let me find a friend<br/> to send your message to.\n        </span>\n      );\n    }\n\n    return (\n      <div className={'otter-container ' + src}>\n        <skoash.Image className=\"otter\" src={`media/_Otter/Otter_Static_Greeting${src}.png`} />\n        <div className=\"bubble\">\n          {copy}\n        </div>\n      </div>\n    );\n  }\n\n  renderFriends() {\n    if (this.state.data && this.state.data.length) {\n      return (\n        <ItemDrawer\n          ref=\"drawer\"\n          selectRespond={this.selectRespond.bind(this)}\n          cancelRespond={this.back}\n          categories={this.state.opts.categories}\n          data={this.state.data}\n          selectedItem={this.state.recipient}\n          buttons={this.buttons}\n          complete={true}\n          className={this.state.opts.goto}\n        />\n      );\n    }\n\n    return (\n      <div className={this.state.opts.goto}>\n        <div className=\"item-drawer-container\">\n          <div className=\"suggest-friends-buttons\">\n            <button className=\"continue\" onClick={this.selectRespond.bind(this, {})} />\n            <button className=\"suggest\" onClick={this.suggestFriends} />\n            <button className=\"save-to-drafts\" onClick={this.save} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <div className=\"header\" />\n        {this.renderOtter()}\n        {this.renderFriends()}\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <FriendScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"friends\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/friend_screen.js\n **/","import SelectableReveal from '../../shared/components/selectable_reveal/0.1.js';\nimport Inbox from '../../shared/components/inbox/0.1.js';\nimport SavedMessages from '../../shared/components/saved_messages/0.1.js';\n\nconst inboxEmptyMessage = (\n  <span>\n    You haven't received any Skribbles!<br/>\n    Get started by sending some!\n  </span>\n  );\nconst unreadEmptyMessage = (\n  <span>\n    You don't have any<br/>\n    unread Skribbles!\n  </span>\n  );\nconst readEmptyMessage = (\n  <span>\n    You don't have any<br/>\n    read Skribbles!\n  </span>\n  );\nconst sentEmptyMessage = (\n  <span>\n    You haven't sent any Skribbles.<br/>\n    Let's get started!\n  </span>\n  );\nconst draftsEmptyMessage = (\n  <span>\n    You don't have any drafts.<br/>\n    Start Skribbling!\n  </span>\n  );\n\n\nclass InboxScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state = {\n      load: true,\n    };\n\n    this.selectableList = [\n      <li />,\n      <li />,\n      <li />,\n      <li />,\n      <li />,\n    ];\n\n    this.revealList = this.getRevealList();\n\n    this.readMessage = this.readMessage.bind(this);\n    this.editMessage = this.editMessage.bind(this);\n  }\n\n  getRevealList(inbox, outbox, saved) {\n    var read, unread;\n\n    inbox = inbox || [];\n\n    read = inbox.filter(item => {\n      return item.read;\n    });\n\n    unread = inbox.filter((item) => {\n      return !item.read;\n    });\n\n    return [\n      <li>\n        <Inbox\n          data-ref=\"inbox\"\n          data={{\n            items: inbox || [],\n          }}\n          emptyMessage={inboxEmptyMessage}\n          selectRespond={this.readMessage}\n        />\n      </li>,\n      <li>\n        <Inbox\n          data-ref=\"unread\"\n          data={{\n            items: unread || [],\n          }}\n          emptyMessage={unreadEmptyMessage}\n          selectRespond={this.readMessage}\n        />\n      </li>,\n      <li>\n        <Inbox\n          data-ref=\"read\"\n          data={{\n            items: read || [],\n          }}\n          emptyMessage={readEmptyMessage}\n          selectRespond={this.readMessage}\n        />\n      </li>,\n      <li>\n        <Inbox\n          data-ref=\"outbox\"\n          data={{\n            items: outbox || [],\n          }}\n          emptyMessage={sentEmptyMessage}\n          friendKey=\"friend_to\"\n          selectRespond={this.readMessage}\n        />\n      </li>,\n      <li>\n        <SavedMessages\n          data-ref=\"saved\"\n          data={{\n            items: saved || [],\n          }}\n          emptyMessage={draftsEmptyMessage}\n          selectRespond={this.editMessage}\n        />\n      </li>,\n    ];\n  }\n\n  editMessage(message) {\n    skoash.trigger('loadSkribble', {\n      message,\n    });\n  }\n\n  readMessage(message) {\n    skoash.trigger('goto', {\n      index: 'read',\n      message,\n    });\n  }\n\n  updateData() {\n    var data, inbox, outbox, saved;\n\n    data = skoash.trigger('getState').data;\n    inbox = data.received;\n    outbox = data.sent;\n    saved = data.draft;\n\n    this.revealList = this.getRevealList(inbox, outbox, saved);\n\n    this.setState({\n      inbox,\n      outbox,\n      saved,\n    });\n  }\n\n  open() {\n    var self = this;\n\n    skoash.trigger('getData', {\n      status: 'received',\n    }).then(() => {\n      self.updateData();\n    });\n\n    skoash.trigger('getData', {\n      status: 'sent',\n    }).then(() => {\n      self.updateData();\n    });\n\n    skoash.trigger('getData', {\n      status: 'draft',\n    }).then(() => {\n      self.updateData();\n    });\n\n    self.setState({\n      load: true,\n      open: true,\n      leave: false,\n      close: false,\n    });\n\n    setTimeout(() => {\n      if (!self.state.started) {\n        self.start();\n      }\n    }, 250);\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <div className=\"center\">\n          <div className=\"frame\">\n            <SelectableReveal\n              ref={'selectableReveal'}\n              selectableList={this.selectableList}\n              revealList={this.revealList}\n              selectOnStart={'0'}\n              openOnStart={'0'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <InboxScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"inbox\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/inbox_screen.js\n **/","import _ from 'lodash';\n\nimport ItemDrawer from '../../shared/components/item_drawer/0.1.js';\n\nclass ItemDrawerScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state = {\n      opts: {\n        categories: [],\n      },\n    };\n\n  }\n\n  selectRespond(message) {\n    skoash.trigger('pass-data', {\n      name: 'add-item',\n      message\n    });\n  }\n\n  updateData(d) {\n    var data = d ? d : skoash.trigger('getState').data.menu.items;\n\n    this.state.opts.categories.forEach(key => {\n      if (data[key]) data = data[key];\n      if (data.items) data = data.items;\n    });\n\n    data = _.values(data);\n\n    this.setState({\n      data,\n    });\n  }\n\n  open(opts) {\n    var self = this;\n\n    skoash.trigger('getMedia', {\n      path: 'skribble/menu/' + opts.categories.join('/')\n    }).then(data => {\n      self.updateData(data);\n    });\n\n    self.setState({\n      load: true,\n      open: true,\n      leave: false,\n      close: false,\n      opts,\n      data: null\n    }, () => {\n      self.updateData();\n    });\n\n    setTimeout(() => {\n      if (!self.state.started) {\n        self.start();\n      }\n    }, 250);\n  }\n\n  cancelRespond() {\n    if (this.state.category) {\n      this.setState({\n        category: '',\n        categoryName: '',\n      });\n    } else {\n      skoash.trigger('goto', {index: 'canvas'});\n    }\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <ItemDrawer\n          ref=\"drawer\"\n          selectRespond={this.selectRespond.bind(this)}\n          cancelRespond={this.cancelRespond}\n          categories={this.state.opts.categories}\n          data={this.state.data}\n        />\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <ItemDrawerScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"item-drawer\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/item_drawer_screen.js\n **/","class MenuScreen extends skoash.Screen {\n  renderContent() {\n    return (\n      <div>\n        <skoash.Image className=\"hidden\" src=\"media/_Background/SK_BKG_1.png\" />\n        <skoash.Image className=\"otter\" src=\"media/_Otter/Otter_Static_GreetingOne.png\" />\n        <div className=\"bubble\">\n          Hi there!<br/>\n          What would you<br/>\n          like to do today?\n        </div>\n        <div className=\"buttons\">\n          <button className=\"make\" onClick={this.goto.bind(this, 'friend')} />\n          <button className=\"read\" onClick={this.goto.bind(this, 'inbox')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <MenuScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"menu\"\n      hidePrev\n      hideNext\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/menu_screen.js\n **/","import Canvas from 'shared/components/canvas/0.1';\nimport Selectable from '../../shared/components/selectable/0.1.js';\n\nconst classNameText = {\n  skribbleBox: 'skribble-box',\n  box: 'box',\n  leftMenu: 'menu left-menu',\n  rightMenu: 'menu right-menu',\n};\n\nconst refs = {\n  box: 'box',\n  canvas: 'canvas'\n};\n\nclass PreviewScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state = {\n      load: true,\n      opts: {},\n    };\n\n    this.leftMenuList = [\n      <li className=\"edit\" onClick={this.goto.bind(this, 'canvas')}>\n        <span />\n      </li>,\n    ];\n\n    this.rightMenuList = [\n      <li className=\"send\" onClick={this.goto.bind(this, 'send')}>\n        <span />\n      </li>\n    ];\n  }\n\n  open(opts) {\n    var rules = skoash.trigger('getRules');\n    this.refs[refs.box].refs[refs.canvas].setItems(rules);\n\n    skoash.Screen.prototype.open.call(this, opts);\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <skoash.Component ref={refs.box} className={classNameText.skribbleBox}>\n          <Canvas ref={refs.canvas} preview />\n          <div className={classNameText.box} />\n        </skoash.Component>\n        <Selectable className={classNameText.leftMenu} list={this.leftMenuList} />\n        <Selectable className={classNameText.rightMenu} list={this.rightMenuList} />\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <PreviewScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"preview\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/preview_screen.js\n **/","import classNames from 'classnames';\n\nimport Selectable from '../../shared/components/selectable/0.1.js';\n\nconst classNameText = {\n  skribbleBox: 'skribble-box',\n  box: 'box',\n  leftMenu: 'menu left-menu',\n  rightMenu: 'menu right-menu',\n  sender: 'menu recipient sender',\n};\n\nconst refs = {\n  box: 'box',\n};\n\nclass ReadScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state.load = true;\n    this.state.message = {user: {}};\n\n    this.leftMenuList = [\n      <li className=\"inbox\" onClick={this.goto.bind(this, 'inbox')}>\n        <span />\n      </li>\n    ];\n\n    this.rightMenuList = [\n      <li className=\"reply\" onClick={this.reply.bind(this)}>\n        <span />\n      </li>\n    ];\n  }\n\n  reply() {\n    skoash.trigger('passData', {\n      name: 'add-recipient',\n      message: this.state.message.created_by,\n    });\n  }\n\n  open(opts) {\n    var message, friends, creater;\n\n    message = opts.message || {};\n\n    friends = skoash.trigger('getState').data.user || [];\n    friends.forEach(friend => {\n      if (message.created_by === friend.friend_id) {\n        creater = friend;\n      }\n    });\n\n    this.setState({\n      load: true,\n      open: true,\n      leave: false,\n      close: false,\n      message,\n      creater\n    });\n\n    this.start();\n\n    skoash.trigger('getData', {\n      name: 'markAsRead',\n      'skribble_id': message.skribble_id,\n    });\n  }\n\n  getSenderClassNames() {\n    return classNames(\n      classNameText.sender, {\n        HIDE: !this.state.creater || this.state.message.sent\n      }\n    );\n  }\n\n  renderSender() {\n    var creater, content = [];\n\n    creater = this.state.creater;\n\n    if (!creater) return;\n\n    if (creater.username) {\n      content.push(<span className=\"name\">{creater.username}</span>);\n    }\n\n    if (creater._embedded.image) {\n      content.push(<img className=\"profile-image\" src={creater._embedded.image.url} />);\n    }\n\n    return content;\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <ul className={this.getSenderClassNames()}>\n          <li>\n            <span>\n              {this.renderSender()}\n            </span>\n          </li>\n        </ul>\n        <skoash.Component ref={refs.box} className={classNameText.skribbleBox}>\n          <skoash.Image src={this.state.message.url} />\n          <div className={classNameText.box} />\n        </skoash.Component>\n        <Selectable className={classNameText.leftMenu} list={this.leftMenuList} />\n        <Selectable className={classNameText.rightMenu} list={this.rightMenuList} />\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <ReadScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"read\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/read_screen.js\n **/","class SaveMenu extends skoash.Screen {\n  cancel() {\n    this.close();\n    skoash.trigger('menuClose', {\n      id: this.state.id,\n    });\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} className={this.getClassNames()}>\n        <div className=\"center\">\n          <div className=\"frame\">\n            <button className=\"quit-saved\" onClick={this.cancel.bind(this)}></button>\n            <h2>Your progress</h2>\n            <h2>has been saved</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default (\n  <SaveMenu\n    id=\"save\"\n  />\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/save_menu.js\n **/","import Selectable from '../../shared/components/selectable/0.1.js';\n\nconst classNameText = {\n  yourMessageTo: 'your-message-to',\n  isReady: 'is-ready',\n  changeFriend: 'change-friend',\n  character: 'character',\n  gift: 'gift',\n  header: 'header',\n  username: 'username',\n};\n\nclass SendScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state.load = true;\n    this.state.recipient = {};\n\n    this.rightMenuList = [\n      <li className=\"edit-right\" onClick={this.goto.bind(this, 'canvas')}>\n        <span />\n      </li>,\n      <li className=\"send\" onClick={this.send}>\n        <span />\n      </li>\n    ];\n  }\n\n  open() {\n    var recipient = skoash.trigger('getState').recipient || {};\n\n    this.setState({\n      load: true,\n      open: true,\n      leave: false,\n      close: false,\n      recipient\n    });\n\n    this.start();\n  }\n\n  send() {\n    skoash.trigger('pass-data', {\n      name: 'send',\n    });\n  }\n\n  renderContent() {\n    var changeFriendClick = this.goto.bind(this, {\n      index: 'friend',\n      goto: 'send',\n    });\n\n    return (\n      <div>\n        <div className={classNameText.header}>\n          <span className={classNameText.yourMessageTo} />\n          <span className={classNameText.username}>{this.state.recipient.name}</span>\n          <br/>\n          <span className={classNameText.isReady} />\n          <button className={classNameText.changeFriend} onClick={changeFriendClick} />\n        </div>\n        <div className={classNameText.character}>\n          <skoash.Image className=\"otter\" src=\"media/_Otter/Otter_Static_GreetingTwo.png\" />\n          <div className=\"bubble\">\n            Are you sure<br/>\n            you are ready to<br/>\n            send your message?\n          </div>\n        </div>\n        <div className={classNameText.gift} />\n        <Selectable className=\"menu right-menu\" list={this.rightMenuList} />\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <SendScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"send\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/send_screen.js\n **/","const classNameText = {\n  character: 'character',\n  header: 'header',\n  yourMessageTo: 'your-message-to',\n  username: 'username',\n  isReady: 'is-ready',\n  buttons: 'buttons',\n  createAnother: 'create-another',\n  inbox: 'inbox',\n};\n\nconst text = {\n  yourMessageTo: 'YOUR MESSAGE TO:',\n  hasBeenSent: 'IS BEING SENT!',\n};\n\nclass SentScreen extends skoash.Screen {\n  constructor() {\n    super();\n\n    this.state = {\n      load: true,\n      opts: {\n        recipient: {}\n      },\n    };\n  }\n\n  renderContent() {\n    return (\n      <div>\n        <div className={classNameText.character} />\n        <div className={classNameText.header}>\n          <span className={classNameText.yourMessageTo}>{text.yourMessageTo}</span>\n          <span className={classNameText.username}>{this.state.opts.recipient.name}</span>\n          <br/>\n          <span className={classNameText.isReady}>{text.hasBeenSent}</span>\n        </div>\n        <div className={classNameText.buttons}>\n          <button className={classNameText.createAnother} onClick={this.goto.bind(this, 'friend')} />\n          <button className={classNameText.inbox} onClick={this.goto.bind(this, 'inbox')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function (props, ref, key) {\n  return (\n    <SentScreen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"sent\"\n      hideNext\n      hidePrev\n    />\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/sent_screen.js\n **/","export default function (props, ref, key) {\n  return (\n    <skoash.Screen\n      {...props}\n      ref={ref}\n      key={key}\n      id=\"title\"\n      hidePrev\n      nextDelay={1000}\n      nextIndex=\"menu\"\n    >\n      <skoash.Image\n        ref=\"title\"\n        className=\"title animated\"\n        src=\"media/_Title/SKribble_title.png\"\n      />\n      <skoash.Image\n        ref=\"play\"\n        className=\"hidden\"\n        src=\"media/_Buttons/skribble-play-01.png\"\n      />\n      <skoash.Image\n        ref=\"play-hover\"\n        className=\"hidden\"\n        src=\"media/_Buttons/skribble-hover.png\"\n      />\n    </skoash.Screen>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/components/title_screen.js\n **/","var config = {\n  id: 'skribble',\n  version: 1,\n  dimensions: {\n    width: 1600,\n    ratio: 16 / 9\n  },\n};\n\nexport default config;\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/config.game.js\n **/","/**\n * Index script\n * @module\n */\n\nimport _ from 'lodash';\n\nimport config from './config.game';\n\nimport Loader from 'shared/components/loader/0.1';\n\nimport iOSScreen from 'shared/components/ios_splash_screen/0.1';\nimport TitleScreen from './components/title_screen';\nimport MenuScreen from './components/menu_screen';\nimport FriendScreen from './components/friend_screen';\nimport CanvasScreen from './components/canvas_screen';\nimport ItemDrawerScreen from './components/item_drawer_screen';\nimport InboxScreen from './components/inbox_screen';\nimport PreviewScreen from './components/preview_screen';\nimport SendScreen from './components/send_screen';\nimport SentScreen from './components/sent_screen';\nimport ReadScreen from './components/read_screen';\n\nimport QuitScreen from 'shared/components/quit_screen/0.1';\nimport SaveMenu from './components/save_menu';\n\nimport 'shared/js/test-platform-integration';\n\nconst DEFAULT_PROFILE_IMAGE = 'https://changemyworldnow.com/ff50fa329edc8a1d64add63c839fe541.png';\n\nclass Skribble extends skoash.Game {\n  constructor() {\n    super(config);\n\n    this.screens = {\n      0: iOSScreen,\n      1: TitleScreen,\n      'menu': MenuScreen,\n      friend: FriendScreen,\n      canvas: CanvasScreen,\n      'item-drawer': ItemDrawerScreen,\n      inbox: InboxScreen,\n      preview: PreviewScreen,\n      send: SendScreen,\n      sent: SentScreen,\n      read: ReadScreen,\n    };\n\n    this.menus = {\n      quit: QuitScreen,\n      save: SaveMenu,\n    };\n\n    this.state.data.screens = _.map(this.screens, () => ({}));\n  }\n\n  goto(opts) {\n    if (opts.index === 'send') {\n      if (!this.state.recipient || !this.state.recipient.name) {\n        opts.index = 'friend';\n        opts.goto = 'send';\n      }\n    }\n\n    skoash.Game.prototype.goto.call(this, opts);\n  }\n\n  ready() {\n    if (!this.state.ready) {\n      this.getMedia();\n      this.getData({name: 'getFriends'});\n    }\n\n    skoash.Game.prototype.ready.call(this);\n  }\n\n  getRules() {\n    return this.refs['screen-canvas'].getData();\n  }\n\n  save(e, skramble) {\n    /* eslint-disable camelcase */\n    var friend_to, self = this;\n    friend_to = self.state.recipient && self.state.recipient.user_id ? self.state.recipient.user_id : null;\n    var skribble = {\n      'version': config.version,\n      ...self.state.skribbleData,\n      friend_to,\n      skramble,\n      rules: self.getRules()\n    };\n\n    if (JSON.stringify(skribble) !== JSON.stringify(this.state.skribble)) {\n      self.emit({\n        name: 'saveSkribble',\n        game: self.config.id,\n        skribble,\n      }).then(skribbleData => {\n        self.setState({\n          skribbleData,\n          skribble\n        });\n      });\n    }\n    /* eslint-enable camelcase */\n  }\n\n  send() {\n    this.save(null, true);\n\n    this.refs['screen-canvas'].reset();\n    this.goto({\n      index: 'sent',\n      recipient: this.state.recipient,\n    });\n\n    this.setState({\n      recipient: null,\n      skribbleData: null,\n    });\n  }\n\n  trigger(event, opts) {\n    switch (event) {\n    case 'save':\n      return this.save();\n    case 'getMedia':\n      return this.getMedia(opts.path);\n    case 'getRules':\n      return this.getRules();\n    case 'loadSkribble':\n      return this.loadSkribble(opts);\n    }\n\n    return super.trigger(event, opts);\n  }\n\n  loadSkribble(opts) {\n    this.setState({\n      skribbleData: opts.message\n    }, () => {\n      this.refs['screen-canvas'].addItems(opts.message);\n      this.goto({\n        index: 'canvas',\n        draft: true,\n      });\n    });\n  }\n\n  getMedia(path) {\n    var pathArray, self = this;\n\n    path = path || 'skribble/menu';\n    pathArray = path.split('/');\n    pathArray.shift();\n\n    return self.emit({\n      name: 'getMedia',\n      path\n    }).then(d => {\n      var opts, currentOpts;\n      opts = {\n        data: {},\n        callback: () => {\n          this.refs['screen-canvas'].setMenu();\n          this.refs['screen-item-drawer'].updateData();\n        }\n      };\n      currentOpts = opts.data;\n\n      pathArray.forEach((key, index) => {\n        currentOpts[key] = {\n          items: {}\n        };\n        if (index !== pathArray.length - 1) {\n          currentOpts = currentOpts[key].items;\n        }\n      });\n\n      currentOpts[pathArray[pathArray.length - 1]] = _.clone(d);\n      currentOpts[pathArray[pathArray.length - 1]].items = {};\n\n      if (d.items) {\n        d.items.forEach(item => {\n          if (item.asset_type === 'folder' && item.name) {\n            self.getMedia(path + '/' + item.name);\n          } else {\n            currentOpts[pathArray[pathArray.length - 1]].items[item.name] = item;\n          }\n        });\n      }\n\n      self.updateData(opts);\n    });\n  }\n\n  getData(opts) {\n    var names = [\n      'getFriends',\n      'getFriend',\n      'markAsRead',\n    ];\n\n    if (names.indexOf(opts.name) === -1) {\n      opts.name = 'getData';\n    }\n\n    return this.emit(opts).then(data => {\n      if (opts.status) {\n        data[opts.status] = data.skribble;\n        delete data.skribble;\n        this.updateData({\n          data\n        });\n      } else {\n        if (opts.name === 'getFriend') {\n          data = {\n            user: [\n              data\n            ]\n          };\n        }\n        this.updateData({\n          data,\n          callback: opts.callback,\n        });\n      }\n    });\n  }\n\n  passData(opts) {\n    if (opts.name === 'add-item') {\n      this.refs['screen-canvas'].addItem(opts.message);\n      this.goto({ index: 'canvas' });\n    } else if (opts.name === 'add-recipient') {\n      this.addRecipient(opts.message, this.goto.bind(this, { index: opts.goto || 'canvas' }));\n    } else if (opts.name === 'send') {\n      this.send();\n    }\n  }\n\n  addRecipient(recipient, cb) {\n    var src;\n\n    if (recipient.src) {\n      recipient.profile_image = recipient.src; // eslint-disable-line camelcase\n      delete recipient.src;\n    } else if (typeof recipient === 'string') {\n      if (this.state.data && this.state.data.user) {\n        this.state.data.user.some(friend => {\n          if (friend.friend_id === recipient) {\n            recipient = friend;\n            return true;\n          }\n          return false;\n        });\n      }\n    }\n\n    if (typeof recipient === 'string') {\n      this.getData({\n        name: 'getFriend',\n        'friend_id': recipient,\n        callback: () => {\n          this.addRecipient(recipient, cb);\n        }\n      });\n    } else {\n      src = recipient && recipient._embedded && recipient._embedded.image && recipient._embedded.image.url ?\n        recipient._embedded.image.url :\n        DEFAULT_PROFILE_IMAGE;\n      this.setState({\n        recipient: {\n          'user_id': recipient.friend_id,\n          name: recipient.username,\n          src,\n          // I need to get the flips earned back from the backend to do this.\n          description: '',\n          // description: friend.flips_earned + ' Flips Earned',\n          'asset_type': 'friend',\n        }\n      }, cb);\n    }\n  }\n\n  clickRecipient() {\n    this.goto({\n      index: 'friend'\n    });\n  }\n\n  create() {\n    if (this.state.recipient) {\n      this.goto({index: 'canvas'});\n    } else {\n      this.goto({index: 'friend'});\n    }\n  }\n\n  saveButton() {\n    this.save();\n    this.openMenu({id: 'save'});\n  }\n\n  renderLoader() {\n    return (\n      <Loader />\n    );\n  }\n\n  renderAssets() {\n    return (\n      <div>\n        <div className=\"background-1\" />\n        <div className=\"background-2\" />\n        <div className=\"background-3\" />\n        <div className=\"background-4\" />\n        <div className=\"background-5\" />\n        <div className=\"background-6\" />\n      </div>\n    );\n  }\n\n  renderRecipient() {\n    var recipient = this.state.recipient, content = [];\n\n    if (!recipient) return;\n\n    if (recipient.name) {\n      content.push(<span className=\"name\">{recipient.name}</span>);\n    }\n\n    if (recipient.profile_image) {\n      content.push(<img className=\"profile-image\" src={recipient.profile_image} />);\n    }\n\n    return content;\n  }\n\n  renderMenu() {\n    return (\n      <div>\n        <div className=\"game-menu\">\n          <button className=\"save\" onClick={this.saveButton.bind(this)} />\n          <button className=\"inbox\" onClick={this.goto.bind(this, {index: 'inbox'})} />\n          <button className=\"create\" onClick={this.create.bind(this)} />\n          <button className=\"help\" onClick={this.openMenu.bind(this, {id: 'help'})} />\n          <button className=\"close\" onClick={this.openMenu.bind(this, {id: 'quit'})} />\n        </div>\n        <ul className=\"menu recipient\">\n          <li onClick={this.clickRecipient.bind(this)}>\n            <span>\n              {this.renderRecipient()}\n            </span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n}\n\nskoash.start(Skribble, config.id);\n\nimport 'shared/js/google-analytics';\n\n\n\n/** WEBPACK FOOTER **\n ** ./skribble/index.js\n **/","'use strict';\nmodule.exports = require('./lib/index');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/index.js\n ** module id = 32\n ** module chunks = 0\n **/","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/decode.js\n ** module id = 33\n ** module chunks = 0\n **/","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/encode.js\n ** module id = 34\n ** module chunks = 0\n **/","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar isValid = require('./is-valid');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/index.js\n ** module id = 35\n ** module chunks = 0\n **/","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/is-valid.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/random/random-byte-browser.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/random/random-from-seed.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = 0;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/shortid/lib/util/cluster-worker-id-browser.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 40\n ** module chunks = 0\n **/"],"sourceRoot":""}