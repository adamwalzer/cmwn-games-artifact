{"version":3,"sources":["webpack:///fire/ai.js","webpack:///webpack/bootstrap 21af3206c93418cc50b2","webpack:///../~/classnames/index.js","webpack:///./shared/components/draggable/0.1.js","webpack:///../~/lodash/lodash.js","webpack:///./shared/components/dropzone_reveal/0.1.js","webpack:///./shared/components/reveal/0.1.js","webpack:///./shared/components/selectable/0.1.js","webpack:///./shared/components/selectable_audio/0.1.js","webpack:///./fire/components/alarm_screen.js","webpack:///./fire/components/break_triangle_screen.js","webpack:///./fire/components/choose_screen.js","webpack:///./fire/components/flip_screen.js","webpack:///./fire/components/info_chemical_screen.js","webpack:///./fire/components/info_forrest_screen.js","webpack:///./fire/components/info_fuel_oxygen_screen.js","webpack:///./fire/components/ladder_screen.js","webpack:///./fire/components/men_and_women_screen.js","webpack:///./fire/components/need_screen.js","webpack:///./fire/components/title_screen.js","webpack:///./fire/components/triangle_screen.js","webpack:///./fire/components/who_screen.js","webpack:///./fire/config.game.js","webpack:///./fire/index.js","webpack:///./shared/components/cursor_canvas/0.1.js","webpack:///./shared/components/dropzone/0.1.js","webpack:///./shared/components/ios_splash_screen/0.1.js","webpack:///./shared/components/loader/0.1.js","webpack:///./shared/components/media_collection/0.1.js","webpack:///./shared/components/particle/0.1.js","webpack:///./shared/components/quit_screen/0.1.js","webpack:///./shared/js/google-analytics.js","webpack:///./shared/js/prod-variables.js","webpack:///./shared/js/test-platform-integration.js","webpack:///../~/webpack/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","hasOwn","join","hasOwnProperty","undefined","_interopRequireDefault","obj","__esModule","default","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_classnames","_classnames2","Draggable","_skoash$Component","this","_this","state","startX","startY","endX","endY","zoom","mouseDown","bind","mouseUp","moveEvent","touchStart","touchEnd","shouldDrag","incomplete","markIncorrect","returnToStart","markCorrect","setState","correct","startEvent","e","cb","pageX","pageY","rect","grabX","grabY","refs","el","targetTouches","getBoundingClientRect","offsetX","left","offsetY","top","firstX","firstY","return","_","isFinite","dragging","dragRespond","message","attachMouseEvents","window","addEventListener","attachTouchEvents","endEvent","dropRespond","detachMouseEvents","removeEventListener","detachTouchEvents","corners","setCorners","width","height","offsetWidth","offsetHeight","className","indexOf","offsetLeft","offsetTop","offsetParent","x","y","componentDidMount","bootstrap","setZoom","_this2","skoash","trigger","then","scale","getStyle","transform","WebkitTransform","getClassNames","_classNames","draggable","render","React","createElement","ref","style","renderContentList","Component","global","addMapEntry","map","pair","set","addSetEntry","add","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","done","mapToArray","size","forEach","overArg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","root","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","type","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","baseAssignValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","toString","castSlice","buffer","slice","allocUnsafe","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","Ctor","isBind","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","name","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","proto","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","mergeDefaults","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","sign","remainder","valueOf","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","imports","importsKeys","importsValues","isEscaping","isEvaluating","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","filtered","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","_extends","_2","_3","_4","DropzoneReveal","correctRespond","dropzoneKey","incorrectRespond","reveal","open","closeRespond","revealComplete","playMedia","renderAssets","assets","asset","data-ref","renderDropzone","dropzones","draggables","dropzoneDraggables","draggablesLeft","dropzoneDraggablesLeft","draggablesRight","dropzoneDraggablesRight","dropzoneAssets","onComplete","onDropzoneComplete","renderReveal","list","revealList","revealAssets","onOpen","openOnStart","openReveal","closeReveal","console","warn","Reveal","currentlyOpen","openMultiple","playAudio","completeOnOpen","complete","autoClose","close","openTarget","updateGameState","opts","prevMessage","silent","onClose","messages","audio","renderList","_this3","li","getClass","componentWillReceiveProps","Number","onClick","defaultProps","Selectable","selectFunction","select","selectClass","highlight","selectOnStart","started","bin","getAll","selectHelper","dataRef","isCorrect","closest","getAttribute","answers","allowDeselect","selectRespond","onSelect","chooseOne","dataTarget","completeListOnClick","r","k","renderBin","data-message","SelectableAudio","checkComplete","component","selectable","audioAssets","Audio","renderSelectable","selectableList","currentScreenIndex","Screen","MediaSequence","src","Image","animate","ChooseScreenComponent","hideNext","silentComplete","_skoash$Screen","slideToggle","getRefs","currentRef","val","updateGender","gender","updateSkin","skin","prevSlide","prev","nextSlide","renderFemaleMale","ListItem","renderSkinColor","character","GENDER","SKIN","renderContent","playOnStart","play","STATES","interval","init","_lodash2","_lodash","NeedScreenComponent","_5","incompleteRefs","particleGenerator","particle","amount","velocityY","velocityX","alpha","delta","vy","vx","completeDelay","completeOnStart","TriangleScreenComponent","revealOpen","WhoScreenComponent","REVEAL_MSG","config","version","dimensions","ratio","_config","_config2","_title_screen","_title_screen2","_info_chemical_screen","_info_chemical_screen2","_info_fuel_oxygen_screen","_info_fuel_oxygen_screen2","_info_forrest_screen","_info_forrest_screen2","_alarm_screen","_alarm_screen2","_who_screen","_who_screen2","_men_and_women_screen","_men_and_women_screen2","_triangle_screen","_triangle_screen2","_break_triangle_screen","_break_triangle_screen2","_ladder_screen","_ladder_screen2","_choose_screen","_choose_screen2","_need_screen","_need_screen2","_flip_screen","_flip_screen2","_6","_7","Fire","_skoash$Game","screens","0","1","2","3","4","5","6","7","8","9","10","11","12","13","menus","quit","renderLoader","loop","Game","CursorCanvas","cursorX","cursorY","particles","updateCanvas","image","canvas","getContext","ReactDOM","findDOMNode","setInterval","draw","moveCursor","componentWillUnmount","clearInterval","clientX","clientY","gameWidth","gameHeight","innerWidth","innerHeight","shift","globalAlpha","clearRect","hidden","Dropzone","moreDraggables","contains","dropped","answerRefs","item","answer","requireForComplete","prepareDropzones","dropzone","dropzoneRef","dropzoneDOM","getCorners","componentWillMount","isInBounds","util","doIntersect","inBounds","outOfBounds","incorrect","renderDropzones","_this4","renderDraggables","_this5","getDraggableClass","renderMoreDraggables","_this6","nextDelay","hidePrev","Loader","MediaCollection","onPlay","Particle","save","translate","drawImage","restore","QuitScreen","okay","s","o","g","a","GoogleAnalyticsObject","q","l","getElementsByTagName","async","parentNode","insertBefore","document","ga","ENVIRONMENT","MEDIA","location","href","domain","webpackPolyfill","deprecate","children"],"mappings":"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","file":"fire/ai.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(31);\n\tmodule.exports = __webpack_require__(22);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar hasOwn = {}.hasOwnProperty;\n\t\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\t\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\t\n\t\t\t\tvar argType = typeof arg;\n\t\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn classes.join(' ');\n\t\t}\n\t\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (true) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn classNames;\n\t\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Draggable = function (_skoash$Component) {\n\t    _inherits(Draggable, _skoash$Component);\n\t\n\t    function Draggable() {\n\t        _classCallCheck(this, Draggable);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this));\n\t\n\t        _this.state = {\n\t            startX: 0,\n\t            startY: 0,\n\t            endX: 0,\n\t            endY: 0,\n\t            zoom: 1\n\t        };\n\t\n\t        _this.mouseDown = _this.mouseDown.bind(_this);\n\t        _this.mouseUp = _this.mouseUp.bind(_this);\n\t\n\t        _this.moveEvent = _this.moveEvent.bind(_this);\n\t\n\t        _this.touchStart = _this.touchStart.bind(_this);\n\t        _this.touchEnd = _this.touchEnd.bind(_this);\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Draggable, [{\n\t        key: 'shouldDrag',\n\t        value: function shouldDrag() {\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'incomplete',\n\t        value: function incomplete() {\n\t            this.markIncorrect();\n\t            this.returnToStart();\n\t\n\t            _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'incomplete', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'markCorrect',\n\t        value: function markCorrect() {\n\t            this.setState({\n\t                correct: true\n\t            });\n\t        }\n\t    }, {\n\t        key: 'markIncorrect',\n\t        value: function markIncorrect() {\n\t            this.setState({\n\t                correct: false\n\t            });\n\t        }\n\t    }, {\n\t        key: 'startEvent',\n\t        value: function startEvent(e, cb) {\n\t            var pageX;\n\t            var pageY;\n\t            var rect;\n\t            var startX;\n\t            var startY;\n\t            var endX;\n\t            var endY;\n\t            var grabX;\n\t            var grabY;\n\t\n\t            if (e.target !== this.refs.el) return;\n\t            if (!this.shouldDrag()) return;\n\t\n\t            if (e.targetTouches && e.targetTouches[0]) {\n\t                pageX = e.targetTouches[0].pageX;\n\t                pageY = e.targetTouches[0].pageY;\n\t                rect = e.target.getBoundingClientRect();\n\t                e = e.targetTouches[0];\n\t                e.offsetX = pageX - rect.left;\n\t                e.offsetY = pageY - rect.top;\n\t            }\n\t\n\t            grabX = e.offsetX;\n\t            grabY = e.offsetY;\n\t\n\t            startX = endX = e.pageX - grabX;\n\t            startY = endY = e.pageY - grabY;\n\t\n\t            if (!this.state.firstX) {\n\t                this.setState({\n\t                    firstX: startX,\n\t                    firstY: startY\n\t                });\n\t            }\n\t\n\t            if (!this.props.return) {\n\t                startX = _.isFinite(this.state.grabX) ? this.state.startX + this.state.grabX - grabX : startX;\n\t                startY = _.isFinite(this.state.grabY) ? this.state.startY + this.state.grabY - grabY : startY;\n\t            }\n\t\n\t            this.setState({\n\t                dragging: true,\n\t                return: false,\n\t                startX: startX,\n\t                startY: startY,\n\t                grabX: grabX,\n\t                grabY: grabY,\n\t                endX: endX,\n\t                endY: endY\n\t            });\n\t\n\t            if (typeof this.props.dragRespond === 'function') {\n\t                this.props.dragRespond(this.props.message);\n\t            }\n\t\n\t            if (typeof cb === 'function') {\n\t                cb.call(this);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'attachMouseEvents',\n\t        value: function attachMouseEvents() {\n\t            window.addEventListener('mousemove', this.moveEvent);\n\t            window.addEventListener('mouseup', this.mouseUp);\n\t        }\n\t    }, {\n\t        key: 'attachTouchEvents',\n\t        value: function attachTouchEvents() {\n\t            window.addEventListener('touchmove', this.moveEvent);\n\t            window.addEventListener('touchend', this.touchEnd);\n\t        }\n\t    }, {\n\t        key: 'mouseDown',\n\t        value: function mouseDown(e) {\n\t            this.startEvent(e, this.attachMouseEvents);\n\t        }\n\t    }, {\n\t        key: 'touchStart',\n\t        value: function touchStart(e) {\n\t            this.startEvent(e, this.attachTouchEvents);\n\t        }\n\t    }, {\n\t        key: 'moveEvent',\n\t        value: function moveEvent(e) {\n\t            if (e.targetTouches && e.targetTouches[0]) {\n\t                e.pageX = e.targetTouches[0].pageX;\n\t                e.pageY = e.targetTouches[0].pageY;\n\t            }\n\t\n\t            this.setState({\n\t                endX: e.pageX - this.state.grabX,\n\t                endY: e.pageY - this.state.grabY\n\t            });\n\t        }\n\t    }, {\n\t        key: 'returnToStart',\n\t        value: function returnToStart() {\n\t            if (this.state.firstX) {\n\t                this.setState({\n\t                    dragging: false,\n\t                    return: true,\n\t                    endX: this.state.firstX,\n\t                    endY: this.state.firstY\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'endEvent',\n\t        value: function endEvent(cb) {\n\t            this.dropRespond();\n\t\n\t            if (this.props.return) {\n\t                this.returnToStart();\n\t            } else {\n\t                this.setState({\n\t                    dragging: false,\n\t                    return: this.state.return\n\t                });\n\t            }\n\t\n\t            if (typeof cb === 'function') {\n\t                cb.call(this);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'detachMouseEvents',\n\t        value: function detachMouseEvents() {\n\t            window.removeEventListener('mousemove', this.moveEvent);\n\t            window.removeEventListener('mouseup', this.mouseUp);\n\t        }\n\t    }, {\n\t        key: 'detachTouchEvents',\n\t        value: function detachTouchEvents() {\n\t            window.removeEventListener('touchmove', this.moveEvent);\n\t            window.removeEventListener('touchend', this.touchEnd);\n\t        }\n\t    }, {\n\t        key: 'mouseUp',\n\t        value: function mouseUp() {\n\t            this.endEvent(this.detachMouseEvents);\n\t        }\n\t    }, {\n\t        key: 'touchEnd',\n\t        value: function touchEnd() {\n\t            this.endEvent(this.detachTouchEvents);\n\t        }\n\t    }, {\n\t        key: 'dropRespond',\n\t        value: function dropRespond() {\n\t            var corners;\n\t\n\t            corners = this.setCorners();\n\t\n\t            if (typeof this.props.dropRespond === 'function') {\n\t                this.props.dropRespond(this.props.message, corners);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setCorners',\n\t        value: function setCorners() {\n\t            var top;\n\t            var left;\n\t            var width;\n\t            var height;\n\t            var el;\n\t            var corners = [];\n\t\n\t            left = 0;\n\t            top = 0;\n\t            el = this.refs.el;\n\t            width = el.offsetWidth;\n\t            height = el.offsetHeight;\n\t\n\t            while (el) {\n\t                if (el.className.indexOf('screen') !== -1) {\n\t                    break;\n\t                }\n\t\n\t                left += el.offsetLeft || 0;\n\t                top += el.offsetTop || 0;\n\t                el = el.offsetParent;\n\t            }\n\t\n\t            left += (this.state.endX - this.state.startX) / this.state.zoom;\n\t            top += (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t            for (var i = 0; i < 4; i++) {\n\t                corners.push({\n\t                    x: left + width * (i === 1 || i === 2 ? 1 : 0),\n\t                    y: top + height * (i > 1 ? 1 : 0)\n\t                });\n\t            }\n\t\n\t            this.setState({\n\t                corners: corners\n\t            });\n\t\n\t            return corners;\n\t        }\n\t    }, {\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.bootstrap();\n\t        }\n\t    }, {\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'bootstrap', this).call(this);\n\t\n\t            this.setZoom();\n\t\n\t            this.refs.el.addEventListener('mousedown', this.mouseDown);\n\t            this.refs.el.addEventListener('touchstart', this.touchStart);\n\t\n\t            window.addEventListener('resize', this.setZoom.bind(this));\n\t        }\n\t    }, {\n\t        key: 'setZoom',\n\t        value: function setZoom() {\n\t            var _this2 = this;\n\t\n\t            skoash.trigger('getState').then(function (state) {\n\t                _this2.setState({\n\t                    zoom: state.scale\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getStyle',\n\t        value: function getStyle() {\n\t            var x;\n\t            var y;\n\t\n\t            x = (this.state.endX - this.state.startX) / this.state.zoom;\n\t            y = (this.state.endY - this.state.startY) / this.state.zoom;\n\t\n\t            return {\n\t                transform: 'translateX(' + x + 'px) translateY(' + y + 'px)',\n\t                WebkitTransform: 'translateX(' + x + 'px) translateY(' + y + 'px)'\n\t            };\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            var _classNames;\n\t\n\t            return (0, _classnames2.default)((_classNames = {\n\t                draggable: true\n\t            }, _defineProperty(_classNames, this.props.className, this.props.className), _defineProperty(_classNames, this.props.message, this.props.message), _defineProperty(_classNames, 'DRAGGING', this.state.dragging), _defineProperty(_classNames, 'RETURN', this.state.return), _defineProperty(_classNames, 'CORRECT', this.state.correct), _classNames), _get(Draggable.prototype.__proto__ || Object.getPrototypeOf(Draggable.prototype), 'getClassNames', this).call(this));\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                {\n\t                    ref: 'el',\n\t                    className: this.getClassNames(),\n\t                    style: this.getStyle()\n\t                },\n\t                this.renderContentList()\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Draggable;\n\t}(skoash.Component);\n\t\n\texports.default = Draggable;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * Lodash <https://lodash.com/>\n\t * Copyright JS Foundation and other contributors <https://js.foundation/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.17.2';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Error message constants. */\n\t  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n\t      FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the maximum memoize cache size. */\n\t  var MAX_MEMOIZE_SIZE = 500;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for cloning. */\n\t  var CLONE_DEEP_FLAG = 1,\n\t      CLONE_FLAT_FLAG = 2,\n\t      CLONE_SYMBOLS_FLAG = 4;\n\t\n\t  /** Used to compose bitmasks for value comparisons. */\n\t  var COMPARE_PARTIAL_FLAG = 1,\n\t      COMPARE_UNORDERED_FLAG = 2;\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var WRAP_BIND_FLAG = 1,\n\t      WRAP_BIND_KEY_FLAG = 2,\n\t      WRAP_CURRY_BOUND_FLAG = 4,\n\t      WRAP_CURRY_FLAG = 8,\n\t      WRAP_CURRY_RIGHT_FLAG = 16,\n\t      WRAP_PARTIAL_FLAG = 32,\n\t      WRAP_PARTIAL_RIGHT_FLAG = 64,\n\t      WRAP_ARY_FLAG = 128,\n\t      WRAP_REARG_FLAG = 256,\n\t      WRAP_FLIP_FLAG = 512;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 800,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', WRAP_ARY_FLAG],\n\t    ['bind', WRAP_BIND_FLAG],\n\t    ['bindKey', WRAP_BIND_KEY_FLAG],\n\t    ['curry', WRAP_CURRY_FLAG],\n\t    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n\t    ['flip', WRAP_FLIP_FLAG],\n\t    ['partial', WRAP_PARTIAL_FLAG],\n\t    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n\t    ['rearg', WRAP_REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      asyncTag = '[object AsyncFunction]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      domExcTag = '[object DOMException]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      nullTag = '[object Null]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      proxyTag = '[object Proxy]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      undefinedTag = '[object Undefined]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n\t      reUnescapedHtml = /[&<>\"']/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match words composed of alphanumeric characters. */\n\t  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n\t  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n\t      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n\t      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n\t      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reUnicodeWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n\t    rsUpper + '+' + rsOptContrUpper,\n\t    rsOrdUpper,\n\t    rsOrdLower,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map Latin Unicode letters to basic Latin letters. */\n\t  var deburredLetters = {\n\t    // Latin-1 Supplement block.\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss',\n\t    // Latin Extended-A block.\n\t    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n\t    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n\t    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n\t    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n\t    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n\t    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n\t    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n\t    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n\t    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n\t    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n\t    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n\t    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n\t    '\\u0134': 'J',  '\\u0135': 'j',\n\t    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n\t    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n\t    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n\t    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n\t    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n\t    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n\t    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n\t    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n\t    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n\t    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n\t    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n\t    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n\t    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n\t    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n\t    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n\t    '\\u0174': 'W',  '\\u0175': 'w',\n\t    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n\t    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n\t    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n\t    '\\u0132': 'IJ', '\\u0133': 'ij',\n\t    '\\u0152': 'Oe', '\\u0153': 'oe',\n\t    '\\u0149': \"'n\", '\\u017f': 's'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\"\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array == null ? 0 : array.length;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array == null ? 0 : array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Gets the size of an ASCII `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  var asciiSize = baseProperty('length');\n\t\n\t  /**\n\t   * Converts an ASCII `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function asciiToArray(string) {\n\t    return string.split('');\n\t  }\n\t\n\t  /**\n\t   * Splits an ASCII `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function asciiWords(string) {\n\t    return string.match(reAsciiWord) || [];\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    return value === value\n\t      ? strictIndexOf(array, value, fromIndex)\n\t      : baseFindIndex(array, baseIsNaN, fromIndex);\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a `cache` value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        ++result;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n\t   * letters to basic Latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n\t   */\n\t  function hasUnicode(string) {\n\t    return reHasUnicode.test(string);\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains a word composed of Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a word is found, else `false`.\n\t   */\n\t  function hasUnicodeWord(string) {\n\t    return reHasUnicodeWord.test(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a unary function that invokes `func` with its argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.indexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.lastIndexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictLastIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex + 1;\n\t    while (index--) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeSize(string)\n\t      : asciiSize(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeToArray(string)\n\t      : asciiToArray(string);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /**\n\t   * Gets the size of a Unicode `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function unicodeSize(string) {\n\t    var result = reUnicode.lastIndex = 0;\n\t    while (reUnicode.test(string)) {\n\t      ++result;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts a Unicode `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function unicodeToArray(string) {\n\t    return string.match(reUnicode) || [];\n\t  }\n\t\n\t  /**\n\t   * Splits a Unicode `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function unicodeWords(string) {\n\t    return string.match(reUnicodeWord) || [];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  var runInContext = (function runInContext(context) {\n\t    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = Array.prototype,\n\t        funcProto = Function.prototype,\n\t        objectProto = Object.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = funcProto.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var nativeObjectToString = objectProto.toString;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n\t        getPrototype = overArg(Object.getPrototypeOf, Object),\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n\t        symIterator = Symbol ? Symbol.iterator : undefined,\n\t        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t    var defineProperty = (function() {\n\t      try {\n\t        var func = getNative(Object, 'defineProperty');\n\t        func({}, '', {});\n\t        return func;\n\t      } catch (e) {}\n\t    }());\n\t\n\t    /** Mocked built-ins. */\n\t    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n\t        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n\t        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = overArg(Object.keys, Object),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = Date.now,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} proto The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(proto) {\n\t        if (!isObject(proto)) {\n\t          return {};\n\t        }\n\t        if (objectCreate) {\n\t          return objectCreate(proto);\n\t        }\n\t        object.prototype = proto;\n\t        var result = new object;\n\t        object.prototype = undefined;\n\t        return result;\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      var result = this.has(key) && delete this.__data__[key];\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      this.size += this.has(key) ? 0 : 1;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      --this.size;\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        ++this.size;\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.size = 0;\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      var result = getMapData(this, key)['delete'](key);\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      var data = getMapData(this, key),\n\t          size = data.size;\n\t\n\t      data.set(key, value);\n\t      this.size += data.size == size ? 0 : 1;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values == null ? 0 : values.length;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      var data = this.__data__ = new ListCache(entries);\n\t      this.size = data.size;\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          result = data['delete'](key);\n\t\n\t      this.size = data.size;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__;\n\t      if (data instanceof ListCache) {\n\t        var pairs = data.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          this.size = ++data.size;\n\t          return this;\n\t        }\n\t        data = this.__data__ = new MapCache(pairs);\n\t      }\n\t      data.set(key, value);\n\t      this.size = data.size;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of the enumerable property names of the array-like `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @param {boolean} inherited Specify returning inherited property names.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function arrayLikeKeys(value, inherited) {\n\t      var isArr = isArray(value),\n\t          isArg = !isArr && isArguments(value),\n\t          isBuff = !isArr && !isArg && isBuffer(value),\n\t          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t          skipIndexes = isArr || isArg || isBuff || isType,\n\t          result = skipIndexes ? baseTimes(value.length, String) : [],\n\t          length = result.length;\n\t\n\t      for (var key in value) {\n\t        if ((inherited || hasOwnProperty.call(value, key)) &&\n\t            !(skipIndexes && (\n\t               // Safari 9 has enumerable `arguments.length` in strict mode.\n\t               key == 'length' ||\n\t               // Node.js 0.10 has enumerable non-index properties on buffers.\n\t               (isBuff && (key == 'offset' || key == 'parent')) ||\n\t               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t               // Skip index properties.\n\t               isIndex(key, length)\n\t            ))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sample` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function arraySample(array) {\n\t      var length = array.length;\n\t      return length ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sampleSize` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function arraySampleSize(array, n) {\n\t      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function arrayShuffle(array) {\n\t      return shuffleSelf(copyArray(array));\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assignIn` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssignIn(object, source) {\n\t      return object && copyObject(source, keysIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `assignValue` and `assignMergeValue` without\n\t     * value checks.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function baseAssignValue(object, key, value) {\n\t      if (key == '__proto__' && defineProperty) {\n\t        defineProperty(object, key, {\n\t          'configurable': true,\n\t          'enumerable': true,\n\t          'value': value,\n\t          'writable': true\n\t        });\n\t      } else {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = Array(length),\n\t          skip = object == null;\n\t\n\t      while (++index < length) {\n\t        result[index] = skip ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Deep clone\n\t     *  2 - Flatten inherited properties\n\t     *  4 - Clone symbols\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, bitmask, customizer, key, object, stack) {\n\t      var result,\n\t          isDeep = bitmask & CLONE_DEEP_FLAG,\n\t          isFlat = bitmask & CLONE_FLAT_FLAG,\n\t          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t          if (!isDeep) {\n\t            return isFlat\n\t              ? copySymbolsIn(value, baseAssignIn(result, value))\n\t              : copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      var keysFunc = isFull\n\t        ? (isFlat ? getAllKeysIn : getAllKeys)\n\t        : (isFlat ? keysIn : keys);\n\t\n\t      var props = isArr ? undefined : keysFunc(value);\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (length--) {\n\t        var key = props[length],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined && !(key in object)) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee == null ? value : iteratee(value);\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = castPath(path, object);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag` without fallbacks for buggy environments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      if (value == null) {\n\t        return value === undefined ? undefinedTag : nullTag;\n\t      }\n\t      value = Object(value);\n\t      return (symToStringTag && symToStringTag in value)\n\t        ? getRawTag(value)\n\t        : objectToString(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      return object != null && hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      var func = object == null ? object : object[toKey(last(path))];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArguments`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     */\n\t    function baseIsArguments(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Unordered comparison\n\t     *  2 - Partial comparison\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, bitmask, customizer, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && isBuffer(object)) {\n\t        if (!isBuffer(other)) {\n\t          return false;\n\t        }\n\t        objIsArr = true;\n\t        objIsObj = false;\n\t      }\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n\t          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n\t      }\n\t      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      if (!isPrototype(object)) {\n\t        return nativeKeys(object);\n\t      }\n\t      var result = [];\n\t      for (var key in Object(object)) {\n\t        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      if (!isObject(object)) {\n\t        return nativeKeysIn(object);\n\t      }\n\t      var isProto = isPrototype(object),\n\t          result = [];\n\t\n\t      for (var key in object) {\n\t        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      baseFor(source, function(srcValue, key) {\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      }, keysIn);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        var isArr = isArray(srcValue),\n\t            isBuff = !isArr && isBuffer(srcValue),\n\t            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\t\n\t        newValue = srcValue;\n\t        if (isArr || isBuff || isTyped) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else if (isBuff) {\n\t            isCommon = false;\n\t            newValue = cloneBuffer(srcValue, true);\n\t          }\n\t          else if (isTyped) {\n\t            isCommon = false;\n\t            newValue = cloneTypedArray(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = [];\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          newValue = objValue;\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            newValue = initCloneObject(srcValue);\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, paths) {\n\t      object = Object(object);\n\t      return basePickBy(object, paths, function(value, path) {\n\t        return hasIn(object, path);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, paths, predicate) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var path = paths[index],\n\t            value = baseGet(object, path);\n\t\n\t        if (predicate(value, path)) {\n\t          baseSet(result, castPath(path, object), value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          } else {\n\t            baseUnset(array, index);\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      return setToString(overRest(func, start, identity), func + '');\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sample`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function baseSample(collection) {\n\t      return arraySample(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sampleSize` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function baseSampleSize(collection, n) {\n\t      var array = values(collection);\n\t      return shuffleSelf(array, baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]),\n\t            newValue = value;\n\t\n\t        if (index != lastIndex) {\n\t          var objValue = nested[key];\n\t          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = isObject(objValue)\n\t              ? objValue\n\t              : (isIndex(path[index + 1]) ? [] : {});\n\t          }\n\t        }\n\t        assignValue(nested, key, newValue);\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `setToString` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetToString = !defineProperty ? identity : function(func, string) {\n\t      return defineProperty(func, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(string),\n\t        'writable': true\n\t      });\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.shuffle`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function baseShuffle(collection) {\n\t      return shuffleSelf(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array == null ? low : array.length;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array == null ? 0 : array.length,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isArray(value)) {\n\t        // Recursively convert values (susceptible to call stack limits).\n\t        return arrayMap(value, baseToString) + '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The property path to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      return object == null || delete object[toKey(last(path))];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var length = arrays.length;\n\t      if (length < 2) {\n\t        return length ? baseUniq(arrays[0]) : [];\n\t      }\n\t      var index = -1,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var array = arrays[index],\n\t            othIndex = -1;\n\t\n\t        while (++othIndex < length) {\n\t          if (othIndex != index) {\n\t            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n\t          }\n\t        }\n\t      }\n\t      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value, object) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      return isKey(value, object) ? [value] : stringToPath(toString(value));\n\t    }\n\t\n\t    /**\n\t     * A `baseRest` alias which can be replaced with `identity` by module\n\t     * replacement plugins.\n\t     *\n\t     * @private\n\t     * @type {Function}\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    var castRest = baseRest;\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n\t     *\n\t     * @private\n\t     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n\t     */\n\t    var clearTimeout = ctxClearTimeout || function(id) {\n\t      return root.clearTimeout(id);\n\t    };\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var length = buffer.length,\n\t          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      var isNew = !object;\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        if (newValue === undefined) {\n\t          newValue = source[key];\n\t        }\n\t        if (isNew) {\n\t          baseAssignValue(object, key, newValue);\n\t        } else {\n\t          assignValue(object, key, newValue);\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Copies own and inherited symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbolsIn(source, object) {\n\t      return copyObject(source, getSymbolsIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = hasUnicode(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return flatRest(function(funcs) {\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & WRAP_ARY_FLAG,\n\t          isBind = bitmask & WRAP_BIND_FLAG,\n\t          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n\t          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & WRAP_FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return flatRest(function(iteratees) {\n\t        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return hasUnicode(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & WRAP_CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *    1 - `_.bind`\n\t     *    2 - `_.bindKey`\n\t     *    4 - `_.curry` or `_.curryRight` of a bound function\n\t     *    8 - `_.curry`\n\t     *   16 - `_.curryRight`\n\t     *   32 - `_.partial`\n\t     *   64 - `_.partialRight`\n\t     *  128 - `_.rearg`\n\t     *  256 - `_.ary`\n\t     *  512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!cacheHas(seen, othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n\t                  return seen.push(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= COMPARE_UNORDERED_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which flattens the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function flatRest(func) {\n\t      return setToString(overRest(func, undefined, flatten), func + '');\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the raw `toStringTag`.\n\t     */\n\t    function getRawTag(value) {\n\t      var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t          tag = value[symToStringTag];\n\t\n\t      try {\n\t        value[symToStringTag] = undefined;\n\t        var unmasked = true;\n\t      } catch (e) {}\n\t\n\t      var result = nativeObjectToString.call(value);\n\t      if (unmasked) {\n\t        if (isOwn) {\n\t          value[symToStringTag] = tag;\n\t        } else {\n\t          delete value[symToStringTag];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = baseGetTag(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          result = false;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result || ++index != length) {\n\t        return result;\n\t      }\n\t      length = object == null ? 0 : object.length;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length;\n\t      if (!length) {\n\t        return source;\n\t      }\n\t      var lastIndex = length - 1;\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.memoize` which clears the memoized function's\n\t     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @returns {Function} Returns the new memoized function.\n\t     */\n\t    function memoizeCapped(func) {\n\t      var result = memoize(func, function(key) {\n\t        if (cache.size === MAX_MEMOIZE_SIZE) {\n\t          cache.clear();\n\t        }\n\t        return key;\n\t      });\n\t\n\t      var cache = result.cache;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & WRAP_BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & WRAP_ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like\n\t     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * except that it includes inherited enumerable properties.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function nativeKeysIn(object) {\n\t      var result = [];\n\t      if (object != null) {\n\t        for (var key in Object(object)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string using `Object.prototype.toString`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     */\n\t    function objectToString(value) {\n\t      return nativeObjectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which transforms the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @param {Function} transform The rest array transform.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function overRest(func, start, transform) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = transform(array);\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = shortOut(baseSetData);\n\t\n\t    /**\n\t     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    var setTimeout = ctxSetTimeout || function(func, wait) {\n\t      return root.setTimeout(func, wait);\n\t    };\n\t\n\t    /**\n\t     * Sets the `toString` method of `func` to return `string`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setToString = shortOut(baseSetToString);\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    function setWrapToString(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that'll short out and invoke `identity` instead\n\t     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t     * milliseconds.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new shortable function.\n\t     */\n\t    function shortOut(func) {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function() {\n\t        var stamp = nativeNow(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return arguments[0];\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return func.apply(undefined, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @param {number} [size=array.length] The size of `array`.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function shuffleSelf(array, size) {\n\t      var index = -1,\n\t          length = array.length,\n\t          lastIndex = length - 1;\n\t\n\t      size = size === undefined ? length : size;\n\t      while (++index < size) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = array[rand];\n\t\n\t        array[rand] = array[index];\n\t        array[index] = value;\n\t      }\n\t      array.length = size;\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoizeCapped(function(string) {\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to convert.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array == null ? 0 : array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var args = Array(length - 1),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The order and\n\t     * references of result values are determined by the first array. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs == null ? 0 : pairs.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 0, -1) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The order and references\n\t     * of result values are determined by the first array. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      if (comparator) {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array == null ? '' : nativeJoin.call(array, separator);\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n\t      }\n\t      return value === value\n\t        ? strictLastIndexOf(array, value, index)\n\t        : baseFindIndex(array, baseIsNaN, index, true);\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = flatRest(function(array, indexes) {\n\t      var length = array == null ? 0 : array.length,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array == null ? array : nativeReverse.call(array);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 1, length) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept. The order of result values is determined by the order they occur\n\t     * in the array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length) ? baseUniq(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The order of result values is determined by the\n\t     * order they occur in the array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The order of result values is\n\t     * determined by the order they occur in the array.The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The order of result values is determined\n\t     * by the order they occur in the arrays. The iteratee is invoked with one\n\t     * argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The order of result values is\n\t     * determined by the order they occur in the arrays. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = flatRest(function(paths) {\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        ++result[key];\n\t      } else {\n\t        baseAssignValue(result, key, 1);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** This method returns `true` for\n\t     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n\t     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n\t     * elements of empty collections.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _.forEach([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        baseAssignValue(result, key, [value]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      baseAssignValue(result, key, value);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var func = isArray(collection) ? arraySample : baseSample;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n\t      return func(collection, n);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        return isString(collection) ? stringSize(collection) : collection.length;\n\t      }\n\t      var tag = getTag(collection);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return collection.size;\n\t      }\n\t      return baseKeys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, [function(o) { return o.user; }]);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    var now = ctxNow || function() {\n\t      return root.Date.now();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = WRAP_BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one millisecond.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, WRAP_FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result) || cache;\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Expose `MapCache`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = castRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = flatRest(function(func, indexes) {\n\t      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      return partial(castFunction(wrapper), value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t        !propertyIsEnumerable.call(value, 'callee');\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(value.length) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && baseGetTag(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n\t            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      var tag = getTag(value);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return !value.size;\n\t      }\n\t      if (isPrototype(value)) {\n\t        return !baseKeys(value).length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      var tag = baseGetTag(value);\n\t      return tag == errorTag || tag == domExcTag ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      if (!isObject(value)) {\n\t        return false;\n\t      }\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t      var tag = baseGetTag(value);\n\t      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return value != null && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return value != null && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method is equivalent to `_.matches` when `source` is\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error(CORE_ERROR_TEXT);\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && baseGetTag(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t        funcToString.call(Ctor) == objectCtorString;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (symIterator && value[symIterator]) {\n\t        return iteratorToArray(value[symIterator]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = flatRest(baseAt);\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties == null ? result : baseAssign(result, properties);\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, iteratee(value, key, object), value);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, key, iteratee(value, key, object));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with six arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable property paths of `object` that are not omitted.\n\t     *\n\t     * **Note:** This method is considerably slower than `_.pick`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = flatRest(function(object, paths) {\n\t      var result = {};\n\t      if (object == null) {\n\t        return result;\n\t      }\n\t      var isDeep = false;\n\t      paths = arrayMap(paths, function(path) {\n\t        path = castPath(path, object);\n\t        isDeep || (isDeep = path.length > 1);\n\t        return path;\n\t      });\n\t      copyObject(object, getAllKeysIn(object), result);\n\t      if (isDeep) {\n\t        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);\n\t      }\n\t      var length = paths.length;\n\t      while (length--) {\n\t        baseUnset(result, paths[length]);\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = flatRest(function(object, paths) {\n\t      return object == null ? {} : basePick(object, paths);\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      var props = arrayMap(getAllKeysIn(object), function(prop) {\n\t        return [prop];\n\t      });\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, props, function(value, path) {\n\t        return predicate(value, path[0]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        length = 1;\n\t        object = undefined;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object),\n\t          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\t\n\t      iteratee = getIteratee(iteratee, 4);\n\t      if (accumulator == null) {\n\t        var Ctor = object && object.constructor;\n\t        if (isArrLike) {\n\t          accumulator = isArr ? new Ctor : [];\n\t        }\n\t        else if (isObject(object)) {\n\t          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t        }\n\t        else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object == null ? [] : baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n\t     * letters to basic Latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n\t     * corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (!separator && hasUnicode(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return string.split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n\t     * // Disable support by replacing the \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (hasUnicode(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = flatRest(function(object, methodNames) {\n\t      arrayEach(methodNames, function(key) {\n\t        key = toKey(key);\n\t        baseAssignValue(object, key, bind(object[key], object));\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs == null ? 0 : pairs.length,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** Partial comparisons will match empty array and empty object\n\t     * `srcValue` values against any array or object value, respectively. See\n\t     * `_.isEqual` for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (symIterator) {\n\t      lodash.prototype[symIterator] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  });\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(33)(module)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _ = __webpack_require__(24);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tvar _3 = __webpack_require__(5);\n\t\n\tvar _4 = _interopRequireDefault(_3);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DropzoneReveal = function (_skoash$Component) {\n\t    _inherits(DropzoneReveal, _skoash$Component);\n\t\n\t    function DropzoneReveal() {\n\t        _classCallCheck(this, DropzoneReveal);\n\t\n\t        return _possibleConstructorReturn(this, (DropzoneReveal.__proto__ || Object.getPrototypeOf(DropzoneReveal)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(DropzoneReveal, [{\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            _get(DropzoneReveal.prototype.__proto__ || Object.getPrototypeOf(DropzoneReveal.prototype), 'bootstrap', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'correctRespond',\n\t        value: function correctRespond(message, dropzoneKey) {\n\t            this.dropRespond(message);\n\t\n\t            if (typeof this.props.correctRespond === 'function') {\n\t                this.props.correctRespond.call(this, message, dropzoneKey);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'incorrectRespond',\n\t        value: function incorrectRespond(message) {\n\t            this.dropRespond(message);\n\t        }\n\t    }, {\n\t        key: 'dropRespond',\n\t        value: function dropRespond(message) {\n\t            if (typeof this.refs.reveal.open === 'function') {\n\t                this.refs.reveal.open(message);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'closeRespond',\n\t        value: function closeRespond() {\n\t            if (typeof this.props.closeRespond === 'function') {\n\t                this.props.closeRespond();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'revealComplete',\n\t        value: function revealComplete() {\n\t            this.playMedia('complete');\n\t        }\n\t    }, {\n\t        key: 'renderAssets',\n\t        value: function renderAssets() {\n\t            if (this.props.assets) {\n\t                return this.props.assets.map(function (asset, key) {\n\t                    return React.createElement(asset.type, _extends({}, asset.props, {\n\t                        ref: asset.props['data-ref'] || 'asset-' + key,\n\t                        key: key,\n\t                        'data-ref': key\n\t                    }));\n\t                });\n\t            }\n\t\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'renderDropzone',\n\t        value: function renderDropzone() {\n\t            return React.createElement(_2.default, {\n\t                ref: 'dropzone',\n\t                dropzones: this.props.dropzones,\n\t                draggables: this.props.dropzoneDraggables,\n\t                draggablesLeft: this.props.dropzoneDraggablesLeft,\n\t                draggablesRight: this.props.dropzoneDraggablesRight,\n\t                assets: this.props.dropzoneAssets,\n\t                correctRespond: this.correctRespond.bind(this),\n\t                incorrectRespond: this.incorrectRespond.bind(this),\n\t                onComplete: this.props.onDropzoneComplete\n\t            });\n\t        }\n\t    }, {\n\t        key: 'renderReveal',\n\t        value: function renderReveal() {\n\t            return React.createElement(_4.default, {\n\t                ref: 'reveal',\n\t                list: this.props.revealList,\n\t                assets: this.props.revealAssets,\n\t                closeRespond: this.closeRespond.bind(this),\n\t                onComplete: this.revealComplete.bind(this),\n\t                onOpen: this.props.onOpen,\n\t                openOnStart: this.props.openOnStart,\n\t                openReveal: this.props.openReveal,\n\t                closeReveal: this.props.closeReveal\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            return (0, _classnames2.default)('dropzone-reveal', _get(DropzoneReveal.prototype.__proto__ || Object.getPrototypeOf(DropzoneReveal.prototype), 'getClassNames', this).call(this));\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                { className: this.getClassNames() },\n\t                this.renderAssets(),\n\t                this.renderReveal(),\n\t                this.renderDropzone()\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return DropzoneReveal;\n\t}(skoash.Component);\n\t\n\texports.default = DropzoneReveal;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// As of skoash 1.1.0 this component can be found at skoash.Reveal\n\t/* eslint-disable no-console */\n\tconsole.warn('As of skoash 1.1.0 this component can be found at skoash.Reveal');\n\t/* eslint-enable no-console */\n\t\n\tvar Reveal = function (_skoash$Component) {\n\t    _inherits(Reveal, _skoash$Component);\n\t\n\t    function Reveal() {\n\t        _classCallCheck(this, Reveal);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Reveal.__proto__ || Object.getPrototypeOf(Reveal)).call(this));\n\t\n\t        _this.state = {\n\t            openReveal: '',\n\t            currentlyOpen: []\n\t        };\n\t\n\t        _this.index = 0;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Reveal, [{\n\t        key: 'incomplete',\n\t        value: function incomplete() {\n\t            this.setState({\n\t                openReveal: '',\n\t                currentlyOpen: []\n\t            });\n\t\n\t            _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'incomplete', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'open',\n\t        value: function open(message) {\n\t            var self = this;\n\t            var currentlyOpen = this.props.openMultiple ? this.state.currentlyOpen.concat(message) : [message];\n\t\n\t            self.setState({\n\t                open: true,\n\t                openReveal: message,\n\t                currentlyOpen: currentlyOpen\n\t            });\n\t\n\t            self.playAudio(message);\n\t\n\t            if (self.props.completeOnOpen) {\n\t                self.complete();\n\t            } else {\n\t                _.each(self.refs, function (ref, key) {\n\t                    if (ref && key === message) ref.complete();\n\t                });\n\t            }\n\t\n\t            if (self.props.autoClose) {\n\t                setTimeout(function () {\n\t                    self.close();\n\t                }, 2000);\n\t            }\n\t\n\t            if (self.props.openTarget) {\n\t                self.updateGameState({\n\t                    path: self.props.openTarget,\n\t                    data: {\n\t                        open: '' + message,\n\t                        close: false\n\t                    }\n\t                });\n\t            }\n\t\n\t            self.props.onOpen.call(self, message);\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close() {\n\t            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t            var prevMessage;\n\t            var currentlyOpen;\n\t            var openReveal;\n\t            var open;\n\t\n\t            prevMessage = this.state.openReveal;\n\t            currentlyOpen = this.state.currentlyOpen;\n\t            currentlyOpen.splice(currentlyOpen.indexOf(prevMessage), 1);\n\t            open = currentlyOpen.length > 0;\n\t            openReveal = open ? currentlyOpen[currentlyOpen.length - 1] : '';\n\t\n\t            this.setState({\n\t                open: open,\n\t                openReveal: openReveal,\n\t                currentlyOpen: currentlyOpen\n\t            });\n\t\n\t            if (!opts.silent) this.playMedia('close-sound');\n\t\n\t            this.props.onClose.call(this, prevMessage);\n\t\n\t            if (typeof this.props.closeRespond === 'function') {\n\t                this.props.closeRespond(prevMessage);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'start',\n\t        value: function start() {\n\t            _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'start', this).call(this);\n\t            if (this.props.openOnStart != null) {\n\t                this.open(this.props.openOnStart);\n\t            } else if (this.props.start && typeof this.props.start === 'function') {\n\t                this.props.start.call(this);\n\t            } else {\n\t                this.close({ silent: true });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'playAudio',\n\t        value: function playAudio(message) {\n\t            var _this2 = this;\n\t\n\t            var messages;\n\t\n\t            message += '';\n\t\n\t            this.playMedia('open-sound');\n\t\n\t            messages = message.split(' ');\n\t            messages.map(function (audio) {\n\t                _this2.playMedia(audio);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'renderAssets',\n\t        value: function renderAssets() {\n\t            if (this.props.assets) {\n\t                return this.props.assets.map(function (asset, key) {\n\t                    var ref = asset.ref || asset.props['data-ref'] || 'asset-' + key;\n\t                    return React.createElement(asset.type, _extends({}, asset.props, {\n\t                        'data-ref': key,\n\t                        ref: ref,\n\t                        key: key\n\t                    }));\n\t                });\n\t            }\n\t\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'renderList',\n\t        value: function renderList() {\n\t            var _this3 = this;\n\t\n\t            var list = this.props.list;\n\t\n\t            return list.map(function (li, key) {\n\t                var ref = li.ref || li.props['data-ref'] || key;\n\t                return React.createElement(li.type, _extends({}, li.props, {\n\t                    type: 'li',\n\t                    className: _this3.getClass(li, key),\n\t                    'data-ref': ref,\n\t                    ref: ref,\n\t                    key: key\n\t                }));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(props) {\n\t            _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t            if (props.openReveal != null && props.openReveal !== this.props.openReveal) {\n\t                this.open(props.openReveal);\n\t            }\n\t\n\t            if (props.closeReveal !== this.props.closeReveal) {\n\t                if (props.closeReveal === true) {\n\t                    this.close();\n\t                } else if (Number.isInteger(props.closeReveal)) {\n\t                    for (var i = 0; i < props.closeReveal; i++) {\n\t                        this.close();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getClass',\n\t        value: function getClass(li, key) {\n\t            var classes = '';\n\t\n\t            if (li.props.className) classes = li.props.className;\n\t\n\t            if (this.state.currentlyOpen.indexOf(key) !== -1 || this.state.currentlyOpen.indexOf('' + key) !== -1 || this.state.currentlyOpen.indexOf(li.props['data-ref']) !== -1 || this.state.currentlyOpen.indexOf(li.ref) !== -1) {\n\t                classes = (0, _classnames2.default)(classes, 'OPEN');\n\t            }\n\t\n\t            return classes;\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            var classes;\n\t            var open = 'open-none';\n\t\n\t            if (this.state.open) {\n\t                open = '';\n\t                this.state.currentlyOpen.forEach(function (ref) {\n\t                    open += 'open-' + ref;\n\t                });\n\t            }\n\t\n\t            classes = (0, _classnames2.default)('reveal', open, _get(Reveal.prototype.__proto__ || Object.getPrototypeOf(Reveal.prototype), 'getClassNames', this).call(this));\n\t\n\t            return classes;\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                { className: this.getClassNames() },\n\t                this.renderAssets(),\n\t                React.createElement(\n\t                    'div',\n\t                    null,\n\t                    React.createElement(\n\t                        'ul',\n\t                        null,\n\t                        this.renderList()\n\t                    ),\n\t                    React.createElement('button', { className: 'close-reveal', onClick: this.close.bind(this) })\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Reveal;\n\t}(skoash.Component);\n\t\n\tReveal.defaultProps = _.defaults({\n\t    list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t    openMultiple: true,\n\t    onOpen: _.noop,\n\t    onClose: _.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Reveal;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// As of skoash 1.1.0 this component can be found at skoash.Selectable\n\t/* eslint-disable no-console */\n\tconsole.warn('As of skoash 1.1.0 this component can be found at skoash.Selectable');\n\t/* eslint-enable no-console */\n\t\n\tvar Selectable = function (_skoash$Component) {\n\t    _inherits(Selectable, _skoash$Component);\n\t\n\t    function Selectable() {\n\t        _classCallCheck(this, Selectable);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Selectable.__proto__ || Object.getPrototypeOf(Selectable)).call(this));\n\t\n\t        _this.state = {\n\t            classes: {},\n\t            selectFunction: _this.select\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Selectable, [{\n\t        key: 'start',\n\t        value: function start() {\n\t            var selectClass;\n\t            var selectFunction;\n\t            var classes = this.state.classes;\n\t\n\t            _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'start', this).call(this);\n\t\n\t            selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n\t            selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\t\n\t            if (this.props.selectOnStart) {\n\t                classes[this.props.selectOnStart] = selectClass;\n\t            }\n\t\n\t            this.setState({\n\t                started: true,\n\t                classes: classes,\n\t                selectFunction: selectFunction,\n\t                selectClass: selectClass\n\t            });\n\t        }\n\t    }, {\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'bootstrap', this).call(this);\n\t\n\t            if (this.refs.bin) {\n\t                this.setState({\n\t                    list: this.refs.bin.getAll()\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'selectHelper',\n\t        value: function selectHelper(e, classes) {\n\t            var ref;\n\t            var dataRef;\n\t            var target;\n\t            var id;\n\t            var isCorrect;\n\t            var self = this;\n\t\n\t            if (typeof e === 'string') {\n\t                dataRef = e;\n\t            } else {\n\t                target = e.target.closest('LI');\n\t\n\t                if (!target) return;\n\t\n\t                dataRef = target.getAttribute('data-ref');\n\t            }\n\t\n\t            ref = self.refs[dataRef];\n\t\n\t            isCorrect = ref && ref.props && ref.props.correct || !self.props.answers || !self.props.answers.length || self.props.answers.indexOf(dataRef) !== -1;\n\t\n\t            if (self.props.allowDeselect && classes[dataRef]) {\n\t                delete classes[dataRef];\n\t            } else if (isCorrect) {\n\t                classes[dataRef] = self.state.selectClass;\n\t            }\n\t\n\t            self.setState({\n\t                classes: classes\n\t            });\n\t\n\t            self.props.selectRespond.call(self, dataRef);\n\t            self.props.onSelect.call(self, dataRef);\n\t\n\t            if (self.props.chooseOne) self.complete();\n\t\n\t            if (self.props.dataTarget) {\n\t                self.updateGameState({\n\t                    path: self.props.dataTarget,\n\t                    data: {\n\t                        target: ref\n\t                    }\n\t                });\n\t            }\n\t\n\t            if (self.props.completeListOnClick) {\n\t                _.each(self.refs, function (r, k) {\n\t                    if (k === id) _.invoke(r, 'complete');\n\t                });\n\t            }\n\t\n\t            _.each(self.refs, function (r, k) {\n\t                if (k === dataRef) _.invoke(r, 'complete');\n\t            });\n\t        }\n\t    }, {\n\t        key: 'select',\n\t        value: function select(e) {\n\t            var classes = [];\n\t            this.selectHelper(e, classes);\n\t        }\n\t    }, {\n\t        key: 'highlight',\n\t        value: function highlight(e) {\n\t            var classes = this.state.classes;\n\t            this.selectHelper(e, classes);\n\t        }\n\t    }, {\n\t        key: 'getClass',\n\t        value: function getClass(key, li) {\n\t            return (0, _classnames2.default)(li.props.className, this.state.classes[key], this.state.classes[li.props['data-ref']], this.state.classes[li.props['data-key']]);\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            return (0, _classnames2.default)('selectable', _get(Selectable.prototype.__proto__ || Object.getPrototypeOf(Selectable.prototype), 'getClassNames', this).call(this));\n\t        }\n\t    }, {\n\t        key: 'renderBin',\n\t        value: function renderBin() {\n\t            if (!this.props.bin) return null;\n\t\n\t            return React.createElement(this.props.bin.type, _extends({}, this.props.bin.props, {\n\t                ref: 'bin'\n\t            }));\n\t        }\n\t    }, {\n\t        key: 'renderList',\n\t        value: function renderList() {\n\t            var _this2 = this;\n\t\n\t            var list = this.props.list || this.state.list;\n\t            return list.map(function (li, key) {\n\t                var dataRef = li.props['data-ref'] || key;\n\t                var ref = li.ref || li.props.id || dataRef;\n\t                var message = li.props.message || '' + key;\n\t                return React.createElement(li.type, _extends({}, li.props, {\n\t                    type: 'li',\n\t                    className: _this2.getClass(key, li),\n\t                    message: message,\n\t                    'data-message': message,\n\t                    'data-ref': dataRef,\n\t                    ref: ref,\n\t                    key: key\n\t                }));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                null,\n\t                this.renderBin(),\n\t                React.createElement(\n\t                    'ul',\n\t                    { className: this.getClassNames(), onClick: this.state.selectFunction.bind(this) },\n\t                    this.renderList()\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Selectable;\n\t}(skoash.Component);\n\t\n\tSelectable.defaultProps = _.defaults({\n\t    list: [React.createElement('li', null), React.createElement('li', null), React.createElement('li', null), React.createElement('li', null)],\n\t    selectClass: 'SELECTED',\n\t    completeListOnClick: true,\n\t    selectRespond: _.noop,\n\t    onSelect: _.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = Selectable;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _ = __webpack_require__(6);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SelectableAudio = function (_skoash$Component) {\n\t    _inherits(SelectableAudio, _skoash$Component);\n\t\n\t    function SelectableAudio() {\n\t        _classCallCheck(this, SelectableAudio);\n\t\n\t        return _possibleConstructorReturn(this, (SelectableAudio.__proto__ || Object.getPrototypeOf(SelectableAudio)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SelectableAudio, [{\n\t        key: 'selectRespond',\n\t        value: function selectRespond(ref) {\n\t            this.playAudio(ref);\n\t\n\t            if (typeof this.props.selectRespond === 'function') {\n\t                this.props.selectRespond.call(this, ref);\n\t            }\n\t\n\t            if (this.props.chooseOne) {\n\t                this.complete();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'checkComplete',\n\t        value: function checkComplete() {\n\t            if (!this.props.chooseOne) _get(SelectableAudio.prototype.__proto__ || Object.getPrototypeOf(SelectableAudio.prototype), 'checkComplete', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'playAudio',\n\t        value: function playAudio(ref) {\n\t            var component;\n\t\n\t            this.playMedia('asset-' + ref);\n\t\n\t            component = this.refs.selectable.refs[ref];\n\t\n\t            if (component) {\n\t                if (component.props.correct) {\n\t                    this.playMedia('asset-correct');\n\t                } else {\n\t                    this.playMedia('asset-incorrect');\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'renderAssets',\n\t        value: function renderAssets() {\n\t            if (this.props.audioAssets) {\n\t                return this.props.audioAssets.map(function (asset, key) {\n\t                    var dataRef = asset.props['data-ref'] || key;\n\t                    var ref = 'asset-' + dataRef;\n\t                    return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t                        ref: ref,\n\t                        key: key,\n\t                        'data-ref': dataRef\n\t                    }));\n\t                });\n\t            }\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'renderSelectable',\n\t        value: function renderSelectable() {\n\t            return React.createElement(_2.default, {\n\t                ref: 'selectable',\n\t                list: this.props.selectableList,\n\t                selectRespond: this.selectRespond.bind(this),\n\t                selectClass: this.props.selectClass\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            return 'selectable-audio ' + _get(SelectableAudio.prototype.__proto__ || Object.getPrototypeOf(SelectableAudio.prototype), 'getClassNames', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                { className: this.getClassNames() },\n\t                this.renderAssets(),\n\t                this.renderSelectable()\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return SelectableAudio;\n\t}(skoash.Component);\n\t\n\texports.default = SelectableAudio;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t    var state = skoash.trigger('getState');\n\t    var currentScreenIndex = state.currentScreenIndex;\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'alarm',\n\t            onComplete: function onComplete() {\n\t                skoash.trigger('goto', {\n\t                    index: currentScreenIndex + 1\n\t                });\n\t            }\n\t        }),\n\t        React.createElement(\n\t            skoash.MediaSequence,\n\t            { ref: 'media-sequence' },\n\t            React.createElement(skoash.Audio, { ref: 'title', type: 'voiceOver', src: 'media/S_5/vo_FireBreaksOut.mp3' }),\n\t            React.createElement(skoash.Audio, { ref: 'directions', type: 'voiceOver', src: 'media/S_5/vo_ClickAndShowYouKnow.mp3' })\n\t        ),\n\t        React.createElement(\n\t            'p',\n\t            null,\n\t            'Click and show you know.'\n\t        ),\n\t        React.createElement(skoash.Image, { className: 'animated', src: 'media/S_5/img_5.1.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated', src: 'media/S_5/img_5.2.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated', src: 'media/S_1/img_1.1.png' }),\n\t        React.createElement(_2.default, {\n\t            ref: 'selectable-audio',\n\t            audioAssets: [React.createElement(skoash.Audio, { ref: 'alarm-sound', type: 'sfx', src: 'media/S_5/S_5.1.mp3' })],\n\t            selectableList: [React.createElement(skoash.Component, { className: 'push-down', correct: true })]\n\t        })\n\t    );\n\t};\n\t\n\tvar _ = __webpack_require__(7);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t\n\t    function animate(name) {\n\t        var open = _.get(props, 'data.states.open', null) === null ? name : open + ' ' + name;\n\t        skoash.trigger('updateState', {\n\t            path: 'states',\n\t            data: {\n\t                open: open\n\t            }\n\t        });\n\t    }\n\t\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'break-triangle',\n\t            className: _.get(props, 'data.states.open', null),\n\t            onOpen: function onOpen() {\n\t                skoash.trigger('updateState', {\n\t                    path: 'states',\n\t                    data: {\n\t                        open: null\n\t                    }\n\t                });\n\t            }\n\t        }),\n\t        React.createElement(\n\t            skoash.MediaSequence,\n\t            {\n\t                ref: 'audio-sequence'\n\t            },\n\t            React.createElement(skoash.Audio, {\n\t                type: 'voiceOver',\n\t                'data-ref': 'title',\n\t                src: 'media/S_9/vo_FirefightersBreakTheTriangle.mp3',\n\t                onComplete: animate.bind(undefined, 'HEAT')\n\t            }),\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', 'data-ref': 'heat', src: 'media/S_8/vo_Heat.mp3',\n\t                onComplete: animate.bind(undefined, 'AIR') }),\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', 'data-ref': 'air', src: 'media/S_8/vo_Air.mp3',\n\t                onComplete: animate.bind(undefined, 'FUEL') }),\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', 'data-ref': 'fuel', src: 'media/S_8/vo_Fuel.mp3' }),\n\t            React.createElement(skoash.Audio, {\n\t                type: 'voiceOver',\n\t                'data-ref': 'theory',\n\t                src: 'media/S_9/vo_ThisIsBasicFirefighterTheory.mp3'\n\t            })\n\t        ),\n\t        React.createElement(\n\t            'p',\n\t            null,\n\t            'Firefighters break the triangle by removing',\n\t            React.createElement('br', null),\n\t            ' one of more these three sides.'\n\t        ),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: 'animated images' },\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated fuel',\n\t                src: 'media/S_8/img_8.10b.png'\n\t            }),\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated fuel side',\n\t                'data-ref': 'fuelSide',\n\t                src: 'media/S_8/img_8.10g.png'\n\t            }),\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated heat',\n\t                src: 'media/S_8/img_8.10c.png'\n\t            }),\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated heat side',\n\t                'data-ref': 'heatSide',\n\t                src: 'media/S_8/img_8.10f.png'\n\t            }),\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated air',\n\t                src: 'media/S_8/img_8.10d.png'\n\t            }),\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated air side',\n\t                'data-ref': 'airSide',\n\t                src: 'media/S_8/img_8.10h.png'\n\t            }),\n\t            React.createElement(skoash.Image, {\n\t                className: 'animated triangle',\n\t                src: 'media/S_8/img_8.10e.png'\n\t            })\n\t        ),\n\t        React.createElement(\n\t            'h2',\n\t            null,\n\t            'This is basic firefighter theory!'\n\t        )\n\t    );\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        ChooseScreenComponent,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'choose',\n\t            hideNext: true,\n\t            silentComplete: true\n\t        }),\n\t        React.createElement(skoash.Audio, { ref: 'vo', type: 'voiceOver', src: 'media/S_11/vo_ChooseYourFirefighter.mp3' }),\n\t        React.createElement(skoash.Image, { className: 'animated', src: 'media/S_11/img_11.1.png' })\n\t    );\n\t};\n\t\n\tvar _2 = __webpack_require__(6);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ChooseScreenComponent = function (_skoash$Screen) {\n\t    _inherits(ChooseScreenComponent, _skoash$Screen);\n\t\n\t    function ChooseScreenComponent() {\n\t        _classCallCheck(this, ChooseScreenComponent);\n\t\n\t        var _this = _possibleConstructorReturn(this, (ChooseScreenComponent.__proto__ || Object.getPrototypeOf(ChooseScreenComponent)).call(this));\n\t\n\t        _this.state = {\n\t            slideToggle: true\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(ChooseScreenComponent, [{\n\t        key: 'getRefs',\n\t        value: function getRefs(currentRef) {\n\t            var _this2 = this;\n\t\n\t            if (!currentRef.refs) {\n\t                return;\n\t            }\n\t            _.each(currentRef.refs, function (ref, key) {\n\t                _this2.refs[key] = ref;\n\t                if (key.includes('center') || key.includes('group')) {\n\t                    _this2.getRefs(ref);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            var ref;\n\t            var self = this;\n\t            _get(ChooseScreenComponent.prototype.__proto__ || Object.getPrototypeOf(ChooseScreenComponent.prototype), 'bootstrap', this).call(this);\n\t\n\t            ['center-1', 'center-2'].forEach(function (val) {\n\t                ref = self.refs[val];\n\t                if (ref) {\n\t                    self.getRefs(ref);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateGender',\n\t        value: function updateGender(gender) {\n\t            this.updateGameState({\n\t                path: ['character'],\n\t                data: {\n\t                    gender: gender\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateSkin',\n\t        value: function updateSkin(skin) {\n\t            this.updateGameState({\n\t                path: ['character'],\n\t                data: {\n\t                    skin: skin\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'prevSlide',\n\t        value: function prevSlide() {\n\t            this.setState({\n\t                slideToggle: true\n\t            });\n\t        }\n\t    }, {\n\t        key: 'prev',\n\t        value: function prev() {\n\t            if (!this.state.slideToggle) {\n\t                this.prevSlide();\n\t                return;\n\t            }\n\t\n\t            _get(ChooseScreenComponent.prototype.__proto__ || Object.getPrototypeOf(ChooseScreenComponent.prototype), 'prev', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'nextSlide',\n\t        value: function nextSlide(gender) {\n\t            this.updateGender(gender);\n\t\n\t            this.setState({\n\t                slideToggle: false\n\t            });\n\t        }\n\t    }, {\n\t        key: 'next',\n\t        value: function next(skin) {\n\t            this.updateSkin(skin);\n\t\n\t            _get(ChooseScreenComponent.prototype.__proto__ || Object.getPrototypeOf(ChooseScreenComponent.prototype), 'next', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'renderFemaleMale',\n\t        value: function renderFemaleMale() {\n\t            return React.createElement(\n\t                skoash.Component,\n\t                { ref: 'center-1', className: 'center female-male' },\n\t                React.createElement(\n\t                    skoash.Component,\n\t                    { className: 'group' },\n\t                    React.createElement(_3.default, {\n\t                        ref: 'selectable',\n\t                        list: [React.createElement(skoash.ListItem, { id: 'gender-female', className: 'animated',\n\t                            onClick: this.nextSlide.bind(this, 'female') }), React.createElement(skoash.ListItem, { id: 'gender-male', className: 'animated',\n\t                            onClick: this.nextSlide.bind(this, 'male') })]\n\t                    })\n\t                )\n\t            );\n\t        }\n\t    }, {\n\t        key: 'renderSkinColor',\n\t        value: function renderSkinColor() {\n\t            return React.createElement(\n\t                skoash.Component,\n\t                { ref: 'center-2', className: 'center skin-color' },\n\t                React.createElement(\n\t                    skoash.Component,\n\t                    { className: 'group' },\n\t                    React.createElement(_3.default, {\n\t                        ref: 'selectable-2',\n\t                        list: [React.createElement(skoash.ListItem, { id: 'skin-light', className: 'animated',\n\t                            onClick: this.next.bind(this, 'light') }), React.createElement(skoash.ListItem, { id: 'skin-medium', className: 'animated',\n\t                            onClick: this.next.bind(this, 'medium') }), React.createElement(skoash.ListItem, { id: 'skin-dark', className: 'animated',\n\t                            onClick: this.next.bind(this, 'dark') })]\n\t                    })\n\t                )\n\t            );\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            var data = skoash.trigger('getState').data;\n\t            var gender;\n\t            if (data.character) {\n\t                gender = data.character.gender;\n\t            }\n\t            return (0, _classnames2.default)(_defineProperty({\n\t                GENDER: this.state.slideToggle,\n\t                SKIN: !this.state.slideToggle\n\t            }, gender, gender), _get(ChooseScreenComponent.prototype.__proto__ || Object.getPrototypeOf(ChooseScreenComponent.prototype), 'getClassNames', this).call(this));\n\t        }\n\t    }, {\n\t        key: 'renderContent',\n\t        value: function renderContent() {\n\t            return React.createElement(\n\t                'div',\n\t                null,\n\t                this.renderContentList(),\n\t                this.renderFemaleMale(),\n\t                this.renderSkinColor()\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return ChooseScreenComponent;\n\t}(skoash.Screen);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: \"flip\",\n\t            playOnStart: \"fire-sfx\"\n\t        }),\n\t        React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/S_13/vo_Flip.mp3\" }),\n\t        React.createElement(skoash.Audio, { type: \"sfx\", ref: \"fire-sfx\", src: \"media/S_13/S_13.1.mp3\" }),\n\t        React.createElement(\n\t            \"h2\",\n\t            null,\n\t            \"You just earned\",\n\t            React.createElement(\"br\", null),\n\t            \" a red hot\"\n\t        ),\n\t        React.createElement(\n\t            \"div\",\n\t            { className: \"flip-text\" },\n\t            \"FLIP\"\n\t        ),\n\t        React.createElement(skoash.Image, { className: \"animated fire\", src: \"media/S_1/img_1.1.png\" }),\n\t        React.createElement(skoash.Image, { className: \"animated flip\", src: \"media/S_13/img_13.1.png\" })\n\t    );\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t\n\t    function play(open, i) {\n\t        var state = STATES[i];\n\t\n\t        open += ' ' + state.name;\n\t        skoash.trigger('updateState', {\n\t            path: 'states',\n\t            data: {\n\t                open: open,\n\t                play: state.audio\n\t            }\n\t        });\n\t\n\t        if (state.interval) {\n\t            setTimeout(function () {\n\t                play(open, ++i);\n\t            }, state.interval);\n\t        }\n\t    }\n\t\n\t    function init() {\n\t        setTimeout(function () {\n\t            play('', 0);\n\t        }, 100);\n\t    }\n\t\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'info-chemical',\n\t            onOpen: init,\n\t            className: _lodash2.default.get(props, 'data.states.open', null)\n\t        }),\n\t        React.createElement(\n\t            _3.default,\n\t            { ref: 'media-collection', play: _lodash2.default.get(props, 'data.states.play', null) },\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_2/vo_ChemicalReaction.mp3' }),\n\t            React.createElement(skoash.Audio, { type: 'sfx', src: 'media/S_2/S_2.2.mp3' }),\n\t            React.createElement(skoash.Audio, { type: 'sfx', src: 'media/S_2/S_2.3.mp3' }),\n\t            React.createElement(skoash.Audio, { type: 'sfx', src: 'media/S_2/S_2.4.mp3' })\n\t        ),\n\t        React.createElement(skoash.Image, { className: 'animated', src: 'media/S_2/img_2.1.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated flame', src: 'media/S_2/img_2.2.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated equal', src: 'media/S_2/img_2.3.png' }),\n\t        React.createElement(\n\t            'h2',\n\t            { className: 'animated text' },\n\t            'Chemical',\n\t            React.createElement('br', null),\n\t            'Reaction'\n\t        )\n\t    );\n\t};\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _2 = __webpack_require__(27);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar STATES = [{\n\t    name: 'VO',\n\t    audio: 'children-0',\n\t    interval: 2000\n\t}, {\n\t    name: 'FLAME',\n\t    audio: 'children-1',\n\t    interval: 1000\n\t}, {\n\t    name: 'EQUAL',\n\t    audio: 'children-2',\n\t    interval: 700\n\t}, {\n\t    name: 'TEXT',\n\t    audio: 'children-3'\n\t}];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: \"info-forrest\"\n\t        }),\n\t        React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/S_4/vo_FireDestroysTrees.mp3\" }),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: \"frame animated\" },\n\t            React.createElement(skoash.Image, { className: \"background\", src: \"media/_Frames/FR_1.png\" }),\n\t            React.createElement(\n\t                \"p\",\n\t                { className: \"animated\" },\n\t                \"Fire destroys trees and homes and\",\n\t                React.createElement(\"br\", null),\n\t                \"consumes landscapes and habitats.\"\n\t            )\n\t        )\n\t    );\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t\n\t    function animate(name) {\n\t        var open = _.get(props, 'data.states.open', null) === null ? name : open + ' ' + name;\n\t        skoash.trigger('updateState', {\n\t            path: 'states',\n\t            data: {\n\t                open: open\n\t            }\n\t        });\n\t    }\n\t\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'info-fuel-oxygen',\n\t            className: _.get(props, 'data.states.open', null)\n\t        }),\n\t        React.createElement(\n\t            skoash.MediaSequence,\n\t            { ref: 'audio-sequence' },\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_3/vo_FuelOxygenMakeItBurn.mp3',\n\t                onComplete: animate.bind(undefined, 'WOOD') }),\n\t            React.createElement(skoash.Audio, { ref: 'wood', type: 'sfx', src: 'media/S_3/S_3.2.mp3',\n\t                onComplete: animate.bind(undefined, 'PLUS') }),\n\t            React.createElement(skoash.Audio, { ref: 'plus', type: 'sfx', src: 'media/S_3/S_3.4.mp3',\n\t                onComplete: animate.bind(undefined, 'O2') }),\n\t            React.createElement(skoash.Audio, { ref: 'o2', type: 'sfx', src: 'media/S_3/S_3.2.mp3',\n\t                onComplete: animate.bind(undefined, 'EQUAL') }),\n\t            React.createElement(skoash.Audio, { ref: 'equal', type: 'sfx', src: 'media/S_3/S_3.4.mp3',\n\t                onComplete: animate.bind(undefined, 'FIRE') }),\n\t            React.createElement(skoash.Audio, { ref: 'fire', type: 'sfx', src: 'media/S_3/S_3.3.mp3' })\n\t        ),\n\t        React.createElement(skoash.Image, { className: 'animated wood', src: 'media/S_3/img_3.1.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated plus', src: 'media/S_3/img_3.2.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated o2', src: 'media/S_3/img_3.3.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated equal', src: 'media/S_3/img_3.4.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated fire', src: 'media/S_3/img_3.5.png' }),\n\t        React.createElement(skoash.Image, { className: 'animated words', src: 'media/S_3/img_3.6.png' })\n\t    );\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: \"ladder\"\n\t        }),\n\t        React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/S_10/vo_SpecialGear.mp3\" }),\n\t        React.createElement(skoash.Image, { className: \"animated\", src: \"media/S_10/img_10.1.png\" }),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: \"frame animated\" },\n\t            React.createElement(skoash.Image, { className: \"background\", src: \"media/_Frames/FR_2.png\" }),\n\t            React.createElement(\n\t                \"div\",\n\t                null,\n\t                \"Firefighters need lots of\",\n\t                React.createElement(\"br\", null),\n\t                \"special gear to keep\",\n\t                React.createElement(\"br\", null),\n\t                \"them safe and help\",\n\t                React.createElement(\"br\", null),\n\t                \"them battle the flames.\"\n\t            )\n\t        )\n\t    );\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: \"men-and-women\"\n\t        }),\n\t        React.createElement(\n\t            skoash.MediaSequence,\n\t            { ref: \"media-sequence\" },\n\t            React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/S_7/vo_MenWomenFirefighters.mp3\" }),\n\t            React.createElement(skoash.Audio, { type: \"voiceOver\", src: \"media/S_7/vo_TheyAreInExcellentPhysical.mp3\" })\n\t        ),\n\t        React.createElement(skoash.Image, { className: \"animated\", src: \"media/S_7/img_7.1.png\" }),\n\t        React.createElement(skoash.Image, { className: \"animated\", src: \"media/S_7/img_7.2.png\" }),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: \"frame\" },\n\t            React.createElement(skoash.Image, { className: \"background\", src: \"media/_Frames/FR_3.png\" }),\n\t            React.createElement(\n\t                \"div\",\n\t                null,\n\t                \"They are in great physical shape\",\n\t                React.createElement(\"br\", null),\n\t                \" and also excellent mental shape.\",\n\t                React.createElement(\"br\", null),\n\t                \"They constantly learn theory\",\n\t                React.createElement(\"br\", null),\n\t                \" and firefighting techniques.\"\n\t            )\n\t        )\n\t    );\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\texports.default = function (props, ref, key) {\n\t    var data = skoash.trigger('getState').data;\n\t    var skin;\n\t    var gender;\n\t    if (data.character) {\n\t        skin = data.character.gender;\n\t        gender = data.character.skin;\n\t    }\n\t    return React.createElement(\n\t        NeedScreenComponent,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            className: skin + ' ' + gender,\n\t            id: 'need'\n\t        }),\n\t        React.createElement(\n\t            skoash.MediaSequence,\n\t            { ref: 'media-sequence' },\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_12/vo_ImagineYoureAFirefighter.mp3' }),\n\t            React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_12/vo_DragAndDropToOutfit.mp3' })\n\t        ),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: 'center' },\n\t            React.createElement(\n\t                skoash.Component,\n\t                { className: 'frame' },\n\t                React.createElement(skoash.Image, { className: 'animated', src: 'media/S_12/img_12.1.png' }),\n\t                React.createElement(_5.default, {\n\t                    ref: 'dropzone-reveal',\n\t                    assets: [React.createElement(skoash.Audio, { 'data-ref': 'complete', type: 'sfx', src: 'media/S_12/S_12.3.mp3' })],\n\t                    dropzoneDraggablesLeft: [React.createElement(_3.default, { message: 'pants' }), React.createElement(_3.default, { message: 'jacket' }), React.createElement(_3.default, { message: 'hood' }), React.createElement(_3.default, { message: 'boots' }), React.createElement(_3.default, { message: 'mask' }), React.createElement(_3.default, { message: 'gloves' })],\n\t                    dropzoneDraggablesRight: [React.createElement(_3.default, { message: 'tank' }), React.createElement(_3.default, { message: 'walkie' }), React.createElement(_3.default, { message: 'axe' }), React.createElement(_3.default, { message: 'light' }), React.createElement(_3.default, { message: 'camera' }), React.createElement(_3.default, { message: 'punch' })],\n\t                    dropzoneAssets: [React.createElement(skoash.Audio, { type: 'sfx', 'data-ref': 'correct', src: 'media/S_12/S_12.2.mp3' }), React.createElement(skoash.Audio, { type: 'sfx', 'data-ref': 'drag', src: 'media/S_12/S_12.1.mp3' })],\n\t                    dropzones: [React.createElement(\n\t                        skoash.Component,\n\t                        {\n\t                            className: 'body',\n\t                            answers: ['pants', 'jacket', 'hood', 'boots', 'mask', 'gloves', 'tank', 'walkie', 'axe', 'light', 'camera', 'punch']\n\t                        },\n\t                        React.createElement('div', { className: 'bun' }),\n\t                        React.createElement('div', { className: 'tank' }),\n\t                        React.createElement('div', { className: 'body' }),\n\t                        React.createElement('div', { className: 'boots' }),\n\t                        React.createElement('div', { className: 'hood' }),\n\t                        React.createElement('div', { className: 'pants' }),\n\t                        React.createElement('div', { className: 'jacket' }),\n\t                        React.createElement('div', { className: 'gloves' }),\n\t                        React.createElement('div', { className: 'mask' }),\n\t                        React.createElement('div', { className: 'straps' }),\n\t                        React.createElement('div', { className: 'light' }),\n\t                        React.createElement('div', { className: 'axe' }),\n\t                        React.createElement('div', { className: 'walkie' }),\n\t                        React.createElement('div', { className: 'camera' }),\n\t                        React.createElement('div', { className: 'punch' })\n\t                    )],\n\t                    revealList: [React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'pants' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'Nobody wears shorts in a fire!',\n\t                            React.createElement('br', null),\n\t                            ' You need these!'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'jacket' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'If there is a fire, you',\n\t                            React.createElement('br', null),\n\t                            ' need this special coat.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'hood' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'This keeps every bit of',\n\t                            React.createElement('br', null),\n\t                            ' your head protected.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'boots' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'They keep dangerous',\n\t                            React.createElement('br', null),\n\t                            ' chemicals off your feet.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'mask' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'This protects your head and face.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'gloves' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'Like boots do for your feet,',\n\t                            React.createElement('br', null),\n\t                            ' these protect your hands.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'tank' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'This is a can of air',\n\t                            React.createElement('br', null),\n\t                            ' so you can breathe!'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'axe' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'This helps you get',\n\t                            React.createElement('br', null),\n\t                            ' through closed doors.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'walkie' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'When shouting isn\\'t enough',\n\t                            React.createElement('br', null),\n\t                            ' you need this.'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'light' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'Could be too dark to see',\n\t                            React.createElement('br', null),\n\t                            ' unless you have this!'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'camera' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'Need to see through',\n\t                            React.createElement('br', null),\n\t                            ' darkness and smoke?',\n\t                            React.createElement('br', null),\n\t                            ' This is for you!'\n\t                        )\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { 'data-ref': 'punch' },\n\t                        React.createElement(\n\t                            'p',\n\t                            null,\n\t                            'This helps you break',\n\t                            React.createElement('br', null),\n\t                            ' through a window.'\n\t                        )\n\t                    )],\n\t                    revealAssets: [React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'pants',\n\t                        src: 'media/S_12/vo_TurnoutPants.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'jacket',\n\t                        src: 'media/S_12/vo_TurnoutJacket.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'hood',\n\t                        src: 'media/S_12/vo_CarbonFlashHood.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'boots',\n\t                        src: 'media/S_12/vo_ChemicalProofBoots.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'mask',\n\t                        src: 'media/S_12/vo_HelmetVisor.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'gloves',\n\t                        src: 'media/S_12/vo_SafetyGloves.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'tank',\n\t                        src: 'media/S_12/vo_TankOfOxygen.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'axe',\n\t                        src: 'media/S_12/vo_Axe.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'walkie',\n\t                        src: 'media/S_12/vo_HandHeldRadio.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'light',\n\t                        src: 'media/S_12/vo_Flashlight.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'camera',\n\t                        src: 'media/S_12/vo_ThermalImaging.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'punch',\n\t                        src: 'media/S_12/vo_WindowPunch.mp3'\n\t                    })]\n\t                })\n\t            )\n\t        )\n\t    );\n\t};\n\t\n\tvar _2 = __webpack_require__(2);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(4);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar NeedScreenComponent = function (_skoash$Screen) {\n\t    _inherits(NeedScreenComponent, _skoash$Screen);\n\t\n\t    function NeedScreenComponent() {\n\t        _classCallCheck(this, NeedScreenComponent);\n\t\n\t        return _possibleConstructorReturn(this, (NeedScreenComponent.__proto__ || Object.getPrototypeOf(NeedScreenComponent)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(NeedScreenComponent, [{\n\t        key: 'getRefs',\n\t        value: function getRefs(currentRef) {\n\t            var _this2 = this;\n\t\n\t            if (!currentRef.refs) {\n\t                return;\n\t            }\n\t            _.each(currentRef.refs, function (ref, key) {\n\t                _this2.refs[key] = ref;\n\t                if (key.includes('children')) {\n\t                    _this2.getRefs(ref);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            var ref;\n\t            var self = this;\n\t            _get(NeedScreenComponent.prototype.__proto__ || Object.getPrototypeOf(NeedScreenComponent.prototype), 'bootstrap', this).call(this);\n\t\n\t            ref = self.refs['children-1'];\n\t            if (ref) {\n\t                self.getRefs(ref);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'open',\n\t        value: function open() {\n\t            _get(NeedScreenComponent.prototype.__proto__ || Object.getPrototypeOf(NeedScreenComponent.prototype), 'open', this).call(this);\n\t\n\t            this.checkComplete = null;\n\t            this.refs['dropzone-reveal'].incompleteRefs();\n\t            this.incomplete();\n\t            this.checkComplete = _get(NeedScreenComponent.prototype.__proto__ || Object.getPrototypeOf(NeedScreenComponent.prototype), 'checkComplete', this);\n\t        }\n\t    }]);\n\t\n\t    return NeedScreenComponent;\n\t}(skoash.Screen);\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t\n\t    function random(min, max) {\n\t        return Math.random() * (max - min) * min;\n\t    }\n\t\n\t    function particleGenerator() {\n\t        var particle = {\n\t            amount: 500,\n\t            velocityY: -2,\n\t            velocityX: (random(1, 10) - 5) / 10,\n\t            size: random(3, 5) / 10,\n\t            alpha: 1,\n\t            delta: {\n\t                vy: 0.99,\n\t                vx: 1,\n\t                alpha: 0.97,\n\t                size: 0.02\n\t            }\n\t        };\n\t\n\t        return particle;\n\t    }\n\t\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: \"title\",\n\t            checkComplete: false,\n\t            completeDelay: 2000,\n\t            completeOnStart: true\n\t        }),\n\t        React.createElement(_2.default, { ref: \"smoke\", src: \"media/_Smoke/particle.jpg\", particle: particleGenerator }),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: \"title\" },\n\t            React.createElement(skoash.Image, { className: \"animated\", src: \"media/S_1/img_1.1.png\" }),\n\t            React.createElement(skoash.Image, { className: \"animated\", src: \"media/S_1/img_1.2.png\" }),\n\t            React.createElement(skoash.Image, { className: \"animated\", src: \"media/S_1/img_1.3.png\" })\n\t        )\n\t    );\n\t};\n\t\n\tvar _ = __webpack_require__(23);\n\t\n\tvar _2 = _interopRequireDefault(_);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        TriangleScreenComponent,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'triangle'\n\t        }),\n\t        React.createElement(\n\t            skoash.Component,\n\t            { className: 'center' },\n\t            React.createElement(\n\t                skoash.Component,\n\t                { className: 'frame' },\n\t                React.createElement(skoash.Image, { className: 'title', ref: 'title', src: 'media/S_8/img_8.1.png' }),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'directions' },\n\t                    React.createElement(\n\t                        'h3',\n\t                        null,\n\t                        'Choose the words and drag to form a triangle'\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    skoash.MediaSequence,\n\t                    null,\n\t                    React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_8/vo_ThreeThingsMakeFireBurn.mp3' }),\n\t                    React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_8/vo_ChooseTheWords.mp3' })\n\t                ),\n\t                React.createElement(_5.default, {\n\t                    ref: 'dropzone-reveal',\n\t                    assets: [React.createElement(skoash.Audio, { type: 'sfx', 'data-ref': 'complete', src: 'media/S_8/S_8.3.mp3' })],\n\t                    dropzones: [React.createElement(\n\t                        skoash.Component,\n\t                        { answers: ['fuel', 'heat', 'air'] },\n\t                        React.createElement(skoash.Image, { className: 'grey-triangle', src: 'media/S_8/img_8.10a.png' }),\n\t                        React.createElement(skoash.Image, { className: 'color-triangle', src: 'media/S_8/img_8.10e.png' })\n\t                    )],\n\t                    dropzoneDraggables: [React.createElement(_3.default, { message: 'air' }), React.createElement(_3.default, { message: 'clouds', 'return': true }), React.createElement(_3.default, { message: 'co2', 'return': true }), React.createElement(_3.default, { message: 'heat' }), React.createElement(_3.default, { message: 'smoke', 'return': true }), React.createElement(_3.default, { message: 'fuel' }), React.createElement(_3.default, { message: 'water', 'return': true })],\n\t                    dropzoneAssets: [React.createElement(skoash.Audio, {\n\t                        type: 'sfx',\n\t                        'data-ref': 'incorrect',\n\t                        src: 'media/S_8/S_8.1.mp3',\n\t                        complete: true\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'sfx',\n\t                        'data-ref': 'correct',\n\t                        src: 'media/S_8/S_8.2.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'sfx',\n\t                        'data-ref': 'drag',\n\t                        src: 'media/S_8/S_8.4.mp3'\n\t                    })],\n\t                    revealList: [React.createElement(\n\t                        skoash.ListItem,\n\t                        { ref: 'fuel', correct: true },\n\t                        React.createElement(skoash.Image, { 'data-ref': 'fuel', src: 'media/S_8/img_8.10b.png' }),\n\t                        React.createElement(skoash.Image, {\n\t                            className: 'side',\n\t                            'data-ref': 'heatSide',\n\t                            src: 'media/S_8/img_8.10g.png'\n\t                        })\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { ref: 'heat', correct: true },\n\t                        React.createElement(skoash.Image, { 'data-ref': 'heat', src: 'media/S_8/img_8.10c.png' }),\n\t                        React.createElement(skoash.Image, {\n\t                            className: 'side',\n\t                            'data-ref': 'fuelSide',\n\t                            src: 'media/S_8/img_8.10f.png'\n\t                        })\n\t                    ), React.createElement(\n\t                        skoash.ListItem,\n\t                        { ref: 'air', correct: true },\n\t                        React.createElement(skoash.Image, { 'data-ref': 'air', src: 'media/S_8/img_8.10d.png' }),\n\t                        React.createElement(skoash.Image, {\n\t                            className: 'side',\n\t                            'data-ref': 'airSide',\n\t                            src: 'media/S_8/img_8.10h.png'\n\t                        })\n\t                    )],\n\t                    revealAssets: [React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'air',\n\t                        src: 'media/S_8/vo_Air.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'clouds',\n\t                        src: 'media/S_8/vo_Clouds.mp3',\n\t                        complete: true\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'co2',\n\t                        src: 'media/S_8/vo_CarbonDioxide.mp3',\n\t                        complete: true\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'heat',\n\t                        src: 'media/S_8/vo_Heat.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'smoke',\n\t                        src: 'media/S_8/vo_Smoke.mp3',\n\t                        complete: true\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'fuel',\n\t                        src: 'media/S_8/vo_Fuel.mp3'\n\t                    }), React.createElement(skoash.Audio, {\n\t                        type: 'voiceOver',\n\t                        'data-ref': 'water',\n\t                        src: 'media/S_8/vo_Water.mp3',\n\t                        complete: true\n\t                    })]\n\t                })\n\t            )\n\t        )\n\t    );\n\t};\n\t\n\tvar _2 = __webpack_require__(2);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(4);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TriangleScreenComponent = function (_skoash$Screen) {\n\t    _inherits(TriangleScreenComponent, _skoash$Screen);\n\t\n\t    function TriangleScreenComponent() {\n\t        _classCallCheck(this, TriangleScreenComponent);\n\t\n\t        return _possibleConstructorReturn(this, (TriangleScreenComponent.__proto__ || Object.getPrototypeOf(TriangleScreenComponent)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(TriangleScreenComponent, [{\n\t        key: 'getRefs',\n\t        value: function getRefs(currentRef) {\n\t            var _this2 = this;\n\t\n\t            if (!currentRef.refs) {\n\t                return;\n\t            }\n\t            _.each(currentRef.refs, function (ref, key) {\n\t                _this2.refs[key] = ref;\n\t                if (key.includes('children')) {\n\t                    _this2.getRefs(ref);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            var ref;\n\t            var self = this;\n\t\n\t            _get(TriangleScreenComponent.prototype.__proto__ || Object.getPrototypeOf(TriangleScreenComponent.prototype), 'bootstrap', this).call(this);\n\t\n\t            ref = self.refs['children-0'];\n\t            if (ref) {\n\t                self.getRefs(ref);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'open',\n\t        value: function open() {\n\t            _get(TriangleScreenComponent.prototype.__proto__ || Object.getPrototypeOf(TriangleScreenComponent.prototype), 'open', this).call(this);\n\t\n\t            this.checkComplete = null;\n\t            this.refs['dropzone-reveal'].incompleteRefs();\n\t            this.incomplete();\n\t            this.checkComplete = _get(TriangleScreenComponent.prototype.__proto__ || Object.getPrototypeOf(TriangleScreenComponent.prototype), 'checkComplete', this);\n\t        }\n\t    }]);\n\t\n\t    return TriangleScreenComponent;\n\t}(skoash.Screen);\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\texports.default = function (props, ref, key) {\n\t    var revealOpen = _lodash2.default.get(props, 'data.reveal.open', null) !== null ? 'REVEAL-OPEN' : '';\n\t\n\t    return React.createElement(\n\t        WhoScreenComponent,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: 'who',\n\t            className: revealOpen,\n\t            onOpen: function onOpen() {\n\t                skoash.trigger('updateState', {\n\t                    path: 'reveal',\n\t                    data: {\n\t                        open: null\n\t                    }\n\t                });\n\t            }\n\t        }),\n\t        React.createElement(skoash.Audio, { ref: 'title', type: 'voiceOver', src: 'media/S_6/vo_FireBreaksOut2.mp3' }),\n\t        React.createElement(skoash.Image, { className: 'animated', src: 'media/S_6/img_6.1.png' }),\n\t        React.createElement(_3.default, {\n\t            ref: 'selectable-audio',\n\t            onComplete: function onComplete() {\n\t                skoash.trigger('updateState', {\n\t                    path: 'reveal',\n\t                    data: {\n\t                        open: REVEAL_MSG\n\t                    }\n\t                });\n\t            },\n\t            audioAssets: [React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_6/vo_Builder.mp3', complete: true }), React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_6/vo_Plumber.mp3', complete: true }), React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_6/vo_Firefighter.mp3' }), React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_6/vo_Chef.mp3', complete: true }), React.createElement(skoash.Audio, { 'data-ref': 'correct', type: 'sfx', src: 'media/S_6/S_6.2.mp3' }), React.createElement(skoash.Audio, { 'data-ref': 'incorrect', type: 'sfx', src: 'media/S_6/S_6.3.mp3', complete: true })],\n\t            selectableList: [React.createElement(skoash.ListItem, { className: 'animated' }), React.createElement(skoash.ListItem, { className: 'animated' }), React.createElement(skoash.ListItem, { className: 'animated', correct: true }), React.createElement(skoash.ListItem, { className: 'animated' })]\n\t        }),\n\t        React.createElement(_5.default, {\n\t            ref: 'reveal',\n\t            openReveal: _lodash2.default.get(props, 'data.reveal.open', null),\n\t            assets: [React.createElement(skoash.Audio, { type: 'voiceOver', src: 'media/S_6/vo_FirefightingTough.mp3' })],\n\t            list: [React.createElement(\n\t                skoash.Component,\n\t                { className: 'frame' },\n\t                React.createElement(skoash.Image, { className: 'animated', src: 'media/S_6/img_6.7.png' }),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'animated' },\n\t                    React.createElement(skoash.Image, { className: 'background', src: 'media/_Frames/FR_2.png' }),\n\t                    'Firefighting is one of the',\n\t                    React.createElement('br', null),\n\t                    'toughest jobs in the world',\n\t                    React.createElement('br', null),\n\t                    'and demands total teamwork.'\n\t                )\n\t            )]\n\t        })\n\t    );\n\t};\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _2 = __webpack_require__(7);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(5);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar REVEAL_MSG = 0;\n\t\n\tvar WhoScreenComponent = function (_skoash$Screen) {\n\t    _inherits(WhoScreenComponent, _skoash$Screen);\n\t\n\t    function WhoScreenComponent() {\n\t        _classCallCheck(this, WhoScreenComponent);\n\t\n\t        return _possibleConstructorReturn(this, (WhoScreenComponent.__proto__ || Object.getPrototypeOf(WhoScreenComponent)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(WhoScreenComponent, [{\n\t        key: 'open',\n\t        value: function open(opts) {\n\t            _get(WhoScreenComponent.prototype.__proto__ || Object.getPrototypeOf(WhoScreenComponent.prototype), 'open', this).call(this, opts);\n\t\n\t            this.checkComplete = null;\n\t            this.incomplete();\n\t            this.refs['selectable-audio'].incompleteRefs();\n\t            this.checkComplete = _get(WhoScreenComponent.prototype.__proto__ || Object.getPrototypeOf(WhoScreenComponent.prototype), 'checkComplete', this);\n\t        }\n\t    }]);\n\t\n\t    return WhoScreenComponent;\n\t}(skoash.Screen);\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar config = {\n\t    id: 'fire',\n\t    version: 2,\n\t    dimensions: {\n\t        width: 960,\n\t        ratio: 16 / 9\n\t    }\n\t};\n\t\n\texports.default = config;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _config = __webpack_require__(21);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _2 = __webpack_require__(26);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tvar _4 = __webpack_require__(25);\n\t\n\tvar _5 = _interopRequireDefault(_4);\n\t\n\tvar _title_screen = __webpack_require__(18);\n\t\n\tvar _title_screen2 = _interopRequireDefault(_title_screen);\n\t\n\tvar _info_chemical_screen = __webpack_require__(12);\n\t\n\tvar _info_chemical_screen2 = _interopRequireDefault(_info_chemical_screen);\n\t\n\tvar _info_fuel_oxygen_screen = __webpack_require__(14);\n\t\n\tvar _info_fuel_oxygen_screen2 = _interopRequireDefault(_info_fuel_oxygen_screen);\n\t\n\tvar _info_forrest_screen = __webpack_require__(13);\n\t\n\tvar _info_forrest_screen2 = _interopRequireDefault(_info_forrest_screen);\n\t\n\tvar _alarm_screen = __webpack_require__(8);\n\t\n\tvar _alarm_screen2 = _interopRequireDefault(_alarm_screen);\n\t\n\tvar _who_screen = __webpack_require__(20);\n\t\n\tvar _who_screen2 = _interopRequireDefault(_who_screen);\n\t\n\tvar _men_and_women_screen = __webpack_require__(16);\n\t\n\tvar _men_and_women_screen2 = _interopRequireDefault(_men_and_women_screen);\n\t\n\tvar _triangle_screen = __webpack_require__(19);\n\t\n\tvar _triangle_screen2 = _interopRequireDefault(_triangle_screen);\n\t\n\tvar _break_triangle_screen = __webpack_require__(9);\n\t\n\tvar _break_triangle_screen2 = _interopRequireDefault(_break_triangle_screen);\n\t\n\tvar _ladder_screen = __webpack_require__(15);\n\t\n\tvar _ladder_screen2 = _interopRequireDefault(_ladder_screen);\n\t\n\tvar _choose_screen = __webpack_require__(10);\n\t\n\tvar _choose_screen2 = _interopRequireDefault(_choose_screen);\n\t\n\tvar _need_screen = __webpack_require__(17);\n\t\n\tvar _need_screen2 = _interopRequireDefault(_need_screen);\n\t\n\tvar _flip_screen = __webpack_require__(11);\n\t\n\tvar _flip_screen2 = _interopRequireDefault(_flip_screen);\n\t\n\tvar _6 = __webpack_require__(29);\n\t\n\tvar _7 = _interopRequireDefault(_6);\n\t\n\t__webpack_require__(32);\n\t\n\t__webpack_require__(30);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Fire = function (_skoash$Game) {\n\t    _inherits(Fire, _skoash$Game);\n\t\n\t    function Fire() {\n\t        _classCallCheck(this, Fire);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Fire.__proto__ || Object.getPrototypeOf(Fire)).call(this, _config2.default));\n\t\n\t        _this.screens = {\n\t            0: _5.default,\n\t            1: _title_screen2.default,\n\t            2: _info_chemical_screen2.default,\n\t            3: _info_fuel_oxygen_screen2.default,\n\t            4: _info_forrest_screen2.default,\n\t            5: _alarm_screen2.default,\n\t            6: _who_screen2.default,\n\t            7: _men_and_women_screen2.default,\n\t            8: _triangle_screen2.default,\n\t            9: _break_triangle_screen2.default,\n\t            10: _ladder_screen2.default,\n\t            11: _choose_screen2.default,\n\t            12: _need_screen2.default,\n\t            13: _flip_screen2.default\n\t        };\n\t\n\t        _this.menus = {\n\t            quit: _7.default\n\t        };\n\t\n\t        _this.state.data.screens = _.map(_this.screens, function () {\n\t            return {};\n\t        });\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Fire, [{\n\t        key: 'renderLoader',\n\t        value: function renderLoader() {\n\t            return React.createElement(_3.default, null);\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            var classNames = _get(Fire.prototype.__proto__ || Object.getPrototypeOf(Fire.prototype), 'getClassNames', this).call(this);\n\t            var index = this.state.currentScreenIndex;\n\t            if (index >= 4 && index < 5) return classNames + ' BKG-2';\n\t            if (index >= 5) return classNames + ' BKG-3';\n\t            return classNames;\n\t        }\n\t    }, {\n\t        key: 'renderAssets',\n\t        value: function renderAssets() {\n\t            return React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(skoash.Audio, { ref: 'bkg-1', type: 'background', src: 'media/_BKG/S_BKG_1.mp3', loop: true }),\n\t                React.createElement(skoash.Audio, { ref: 'button', type: 'sfx', src: 'media/_Buttons/S_BU_1.mp3' }),\n\t                React.createElement(skoash.Audio, { ref: 'screen-complete', type: 'sfx', src: 'media/_Buttons/S_BU_2.mp3' }),\n\t                React.createElement('div', { className: 'background BKG-2' }),\n\t                React.createElement('div', { className: 'background BKG-3' })\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Fire;\n\t}(skoash.Game);\n\t\n\tskoash.start(Fire, _config2.default.id);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _2 = __webpack_require__(28);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar CursorCanvas = function (_skoash$Component) {\n\t    _inherits(CursorCanvas, _skoash$Component);\n\t\n\t    function CursorCanvas() {\n\t        _classCallCheck(this, CursorCanvas);\n\t\n\t        var _this = _possibleConstructorReturn(this, (CursorCanvas.__proto__ || Object.getPrototypeOf(CursorCanvas)).call(this));\n\t\n\t        _this.state = {\n\t            cursorX: 0,\n\t            cursorY: 0,\n\t            particles: [],\n\t            updateCanvas: null\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(CursorCanvas, [{\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            var context;\n\t            var image;\n\t            var updateCanvas;\n\t\n\t            _get(CursorCanvas.prototype.__proto__ || Object.getPrototypeOf(CursorCanvas.prototype), 'bootstrap', this).call(this);\n\t\n\t            if (this.refs.canvas && this.refs.particle) {\n\t                context = this.refs.canvas.getContext('2d');\n\t                image = ReactDOM.findDOMNode(this.refs.particle);\n\t                updateCanvas = window.setInterval(this.draw.bind(this, context, image), this.props.interval);\n\t\n\t                this.setState({\n\t                    updateCanvas: updateCanvas\n\t                });\n\t            }\n\t\n\t            window.addEventListener('mousemove', this.moveCursor.bind(this));\n\t        }\n\t    }, {\n\t        key: 'componentWillUnmount',\n\t        value: function componentWillUnmount() {\n\t            window.clearInterval(this.state.updateCanvas);\n\t\n\t            window.removeEventListener('mousemove', this.moveCursor);\n\t        }\n\t    }, {\n\t        key: 'moveCursor',\n\t        value: function moveCursor(e) {\n\t            var scale = skoash.trigger('getState').scale;\n\t            this.setState({\n\t                cursorX: e.clientX / scale,\n\t                cursorY: e.clientY / scale\n\t            });\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw(context, image) {\n\t            var p;\n\t            var particle;\n\t            var particles;\n\t            var gameWidth;\n\t            var gameHeight;\n\t            var scale;\n\t\n\t            if (typeof this.props.particle === 'function') {\n\t                p = this.props.particle();\n\t            } else {\n\t                p = this.props.particle;\n\t            }\n\t\n\t            particle = new _3.default({\n\t                x: this.state.cursorX,\n\t                y: this.state.cursorY,\n\t                velocityY: p.velocityY,\n\t                velocityX: p.velocityX,\n\t                size: p.size,\n\t                alpha: p.alpha\n\t            });\n\t            particles = this.state.particles;\n\t            particles.push(particle);\n\t\n\t            scale = skoash.trigger('getState').scale;\n\t            gameWidth = window.innerWidth / scale;\n\t            gameHeight = window.innerHeight / scale;\n\t\n\t            while (particles.length > this.props.particle.amount) {\n\t                particles.shift();\n\t            }context.globalAlpha = 1;\n\t            context.clearRect(0, 0, gameWidth, gameHeight);\n\t\n\t            for (var i = 0; i < particles.length; i++) {\n\t                particles[i].update(context, image, p.delta);\n\t            }\n\t            this.setState({ particles: particles });\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                { className: 'cursor' },\n\t                React.createElement(skoash.Image, { ref: 'particle', id: 'particle', src: this.props.src, hidden: true }),\n\t                React.createElement('canvas', { ref: 'canvas', id: 'canvas', width: '960', height: '540' })\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return CursorCanvas;\n\t}(skoash.Component);\n\t\n\tCursorCanvas.defaultProps = _.defaults({\n\t    interval: 1000 / 60,\n\t    particle: {\n\t        amount: 500,\n\t        velocityY: -1,\n\t        velocityX: 0,\n\t        size: 1,\n\t        alpha: 1,\n\t        delta: {\n\t            vy: 1,\n\t            vx: 1,\n\t            alpha: 0.97,\n\t            size: 0.02\n\t        }\n\t    }\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = CursorCanvas;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _classnames = __webpack_require__(1);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _2 = __webpack_require__(2);\n\t\n\tvar _3 = _interopRequireDefault(_2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Dropzone = function (_skoash$Component) {\n\t    _inherits(Dropzone, _skoash$Component);\n\t\n\t    function Dropzone() {\n\t        _classCallCheck(this, Dropzone);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Dropzone.__proto__ || Object.getPrototypeOf(Dropzone)).call(this));\n\t\n\t        _this.dropzones = [React.createElement(skoash.Component, { answers: 'drag' })];\n\t\n\t        _this.draggables = [React.createElement(\n\t            _3.default,\n\t            { message: 'drag' },\n\t            'drag me!'\n\t        ), React.createElement(\n\t            _3.default,\n\t            { message: 'return', 'return': true },\n\t            'return'\n\t        )];\n\t\n\t        _this.moreDraggables = [];\n\t\n\t        _this.contains = [];\n\t\n\t        _this.dropRespond = _this.dropRespond.bind(_this);\n\t        _this.dragRespond = _this.dragRespond.bind(_this);\n\t\n\t        _this.state = {\n\t            dropped: []\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Dropzone, [{\n\t        key: 'bootstrap',\n\t        value: function bootstrap() {\n\t            var answerRefs = [];\n\t            var self = this;\n\t\n\t            _get(Dropzone.prototype.__proto__ || Object.getPrototypeOf(Dropzone.prototype), 'bootstrap', this).call(this);\n\t\n\t            this.props.dropzones.forEach(function (item) {\n\t                if (item.props.answers) {\n\t                    answerRefs = answerRefs.concat(item.props.answers.map(function (answer) {\n\t                        return '' + answer;\n\t                    }));\n\t                }\n\t            });\n\t\n\t            if (answerRefs.length > 0) {\n\t                self.requireForComplete.forEach(function (item) {\n\t                    if (answerRefs.indexOf(item) === -1) self.refs[item].complete();\n\t                });\n\t            }\n\t\n\t            this.answerRefs = answerRefs;\n\t        }\n\t    }, {\n\t        key: 'incomplete',\n\t        value: function incomplete() {\n\t            var _this2 = this;\n\t\n\t            this.setState({\n\t                dropped: []\n\t            });\n\t\n\t            _get(Dropzone.prototype.__proto__ || Object.getPrototypeOf(Dropzone.prototype), 'incomplete', this).call(this);\n\t\n\t            if (this.answerRefs.length > 0) {\n\t                this.requireForComplete.forEach(function (item) {\n\t                    if (_this2.answerRefs.indexOf(item) === -1) _this2.refs[item].complete();\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'prepareDropzones',\n\t        value: function prepareDropzones() {\n\t            var _this3 = this;\n\t\n\t            var self = this;\n\t\n\t            this.props.dropzones.map(function (dropzone, key) {\n\t                var dropzoneRef = _this3.refs['dropzone-' + key];\n\t                var dropzoneDOM = ReactDOM.findDOMNode(dropzoneRef);\n\t                if (dropzoneDOM) {\n\t                    dropzoneRef.corners = self.getCorners(dropzoneDOM);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getCorners',\n\t        value: function getCorners(el) {\n\t            var top;\n\t            var left;\n\t            var width;\n\t            var height;\n\t            var corners = [];\n\t\n\t            left = 0;\n\t            top = 0;\n\t            width = el.offsetWidth;\n\t            height = el.offsetHeight;\n\t\n\t            while (el) {\n\t                if (el.className && el.className.indexOf('screen') !== -1) {\n\t                    break;\n\t                }\n\t\n\t                left += el.offsetLeft || 0;\n\t                top += el.offsetTop || 0;\n\t                el = el.offsetParent;\n\t            }\n\t\n\t            for (var i = 0; i < 4; i++) {\n\t                corners.push({\n\t                    x: left + width * (i === 1 || i === 2 ? 1 : 0),\n\t                    y: top + height * (i > 1 ? 1 : 0)\n\t                });\n\t            }\n\t\n\t            return corners;\n\t        }\n\t    }, {\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {\n\t            this.dropzones = this.props.dropzones || this.dropzones;\n\t            this.draggables = this.props.draggables || this.draggables;\n\t            this.moreDraggables = this.props.moreDraggables || this.moreDraggables;\n\t        }\n\t    }, {\n\t        key: 'start',\n\t        value: function start() {\n\t            _get(Dropzone.prototype.__proto__ || Object.getPrototypeOf(Dropzone.prototype), 'start', this).call(this);\n\t            this.prepareDropzones();\n\t        }\n\t    }, {\n\t        key: 'dragRespond',\n\t        value: function dragRespond(message) {\n\t            this.playMedia('drag');\n\t\n\t            if (typeof this.props.dragRespond === 'function') {\n\t                this.props.dragRespond.call(this, message);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dropRespond',\n\t        value: function dropRespond(message, corners) {\n\t            var self = this;\n\t            var isInBounds;\n\t\n\t            isInBounds = self.props.dropzones.some(function (dropzone, key) {\n\t                var dropzoneRef = self.refs['dropzone-' + key];\n\t                if (skoash.util.doIntersect(corners, dropzoneRef.corners)) {\n\t                    self.inBounds(message, key);\n\t                    return true;\n\t                }\n\t                return false;\n\t            });\n\t\n\t            if (!isInBounds) self.outOfBounds(message);\n\t        }\n\t    }, {\n\t        key: 'inBounds',\n\t        value: function inBounds(message, dropzoneKey) {\n\t            var dropzoneRef = this.refs['dropzone-' + dropzoneKey];\n\t            if (!dropzoneRef.props.answers || dropzoneRef.props.answers.indexOf(message) !== -1) {\n\t                this.correct(message, dropzoneKey);\n\t            } else {\n\t                this.incorrect(message);\n\t            }\n\t            this.refs[message].complete();\n\t        }\n\t    }, {\n\t        key: 'outOfBounds',\n\t        value: function outOfBounds(message) {\n\t            // respond to out of bounds drop\n\t            this.refs[message].returnToStart();\n\t\n\t            this.playMedia('out');\n\t        }\n\t    }, {\n\t        key: 'correct',\n\t        value: function correct(message, dropzoneKey) {\n\t            // respond to correct drop\n\t\n\t            var dropped = this.state.dropped;\n\t            dropped = dropped.concat('dropped-' + message);\n\t            this.setState({\n\t                dropped: dropped\n\t            });\n\t\n\t            this.playMedia('correct');\n\t\n\t            this.refs[message].markCorrect();\n\t\n\t            if (typeof this.props.correctRespond === 'function') {\n\t                this.props.correctRespond.call(this, message, dropzoneKey);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'incorrect',\n\t        value: function incorrect(message) {\n\t            // respond to incorrect drop\n\t            this.playMedia('incorrect');\n\t\n\t            if (typeof this.props.incorrectRespond === 'function') {\n\t                this.props.incorrectRespond.call(this, message);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'renderAssets',\n\t        value: function renderAssets() {\n\t            if (this.props.assets) {\n\t                return this.props.assets.map(function (asset, key) {\n\t                    return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t                        ref: asset.props['data-ref'] || 'asset-' + key,\n\t                        key: key,\n\t                        'data-ref': key\n\t                    }));\n\t                });\n\t            }\n\t\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'renderDropzones',\n\t        value: function renderDropzones() {\n\t            var _this4 = this;\n\t\n\t            return this.props.dropzones.map(function (component, key) {\n\t                return React.createElement(component.type, _extends({}, component.props, {\n\t                    className: _this4.getClass(),\n\t                    ref: 'dropzone-' + key,\n\t                    key: key,\n\t                    checkComplete: false\n\t                }));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'renderDraggables',\n\t        value: function renderDraggables(draggables) {\n\t            var _this5 = this;\n\t\n\t            return this.props[draggables].map(function (item, key) {\n\t                var message = item.props.message || key;\n\t                return React.createElement(\n\t                    'li',\n\t                    { key: key, className: _this5.getDraggableClass(message) },\n\t                    React.createElement(_3.default, _extends({}, item.props, {\n\t                        ref: message,\n\t                        message: message,\n\t                        key: key,\n\t                        dragRespond: _this5.dragRespond,\n\t                        dropRespond: _this5.dropRespond,\n\t                        checkComplete: false\n\t                    }))\n\t                );\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getDraggableClass',\n\t        value: function getDraggableClass(message) {\n\t            var classes = '';\n\t            if (this.state.dropped.indexOf(message) !== -1) {\n\t                classes += 'DROPPED';\n\t            }\n\t            return classes;\n\t        }\n\t    }, {\n\t        key: 'getClass',\n\t        value: function getClass() {\n\t            return (0, _classnames2.default)('dropzone', this.state.dropped);\n\t        }\n\t    }, {\n\t        key: 'renderMoreDraggables',\n\t        value: function renderMoreDraggables() {\n\t            var _this6 = this;\n\t\n\t            return this.moreDraggables.map(function (item, key) {\n\t                return React.createElement(\n\t                    'li',\n\t                    { key: key },\n\t                    React.createElement(_3.default, _extends({}, item.props, {\n\t                        dragRespond: _this6.dragRespond,\n\t                        dropRespond: _this6.dropRespond\n\t                    }))\n\t                );\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getClassNames',\n\t        value: function getClassNames() {\n\t            return (0, _classnames2.default)('dropzone-container', _get(Dropzone.prototype.__proto__ || Object.getPrototypeOf(Dropzone.prototype), 'getClassNames', this).call(this));\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var draggablesLeft;\n\t            var draggablesRight;\n\t            var left;\n\t\n\t            left = this.props.draggablesLeft ? 'draggablesLeft' : 'draggables';\n\t            if (this.props[left]) {\n\t                draggablesLeft = React.createElement(\n\t                    'ul',\n\t                    null,\n\t                    this.renderDraggables(left)\n\t                );\n\t            }\n\t            if (this.props.draggablesRight) {\n\t                draggablesRight = React.createElement(\n\t                    'ul',\n\t                    null,\n\t                    this.renderDraggables('draggablesRight')\n\t                );\n\t            }\n\t            return React.createElement(\n\t                'div',\n\t                { className: this.getClassNames() },\n\t                this.renderAssets(),\n\t                draggablesLeft,\n\t                this.renderDropzones(),\n\t                draggablesRight\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Dropzone;\n\t}(skoash.Component);\n\t\n\texports.default = Dropzone;\n\t\n\t\n\tDropzone.defaultProps = _lodash2.default.defaults({\n\t    dropzones: [React.createElement(skoash.Component, { answers: 'drag' })],\n\t    draggables: [React.createElement(\n\t        _3.default,\n\t        { message: 'drag' },\n\t        'drag me!'\n\t    ), React.createElement(\n\t        _3.default,\n\t        { message: 'return', 'return': true },\n\t        'return'\n\t    )]\n\t}, skoash.Component.defaultProps);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = function (props, ref, key) {\n\t    return React.createElement(\n\t        skoash.Screen,\n\t        _extends({}, props, {\n\t            ref: ref,\n\t            key: key,\n\t            id: \"ios-splash\",\n\t            checkComplete: false,\n\t            completeDelay: 6000,\n\t            nextDelay: 3000,\n\t            completeOnStart: true,\n\t            hidePrev: true\n\t        }),\n\t        React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball.png\" }),\n\t        React.createElement(skoash.Image, { className: \"hidden\", src: \"../shared/images/ios_start_ball_anim.gif\" })\n\t    );\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Loader = function (_skoash$Component) {\n\t    _inherits(Loader, _skoash$Component);\n\t\n\t    function Loader() {\n\t        _classCallCheck(this, Loader);\n\t\n\t        return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Loader, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            return React.createElement(\n\t                \"div\",\n\t                { id: \"loader\", className: \"center\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"group\" },\n\t                    React.createElement(\n\t                        \"h2\",\n\t                        null,\n\t                        \"Loading!\"\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"spinner animated\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { className: \"spinner animated\" },\n\t                            React.createElement(\"div\", { className: \"spinner animated\" })\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Loader;\n\t}(skoash.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// As of skoash 1.1.0 this component can be found at skoash.MediaCollection\n\t/* eslint-disable no-console */\n\tconsole.warn('As of skoash 1.1.0 this component can be found at skoash.MediaCollection');\n\t/* eslint-enable no-console */\n\t\n\tvar MediaCollection = function (_skoash$Component) {\n\t    _inherits(MediaCollection, _skoash$Component);\n\t\n\t    function MediaCollection() {\n\t        _classCallCheck(this, MediaCollection);\n\t\n\t        return _possibleConstructorReturn(this, (MediaCollection.__proto__ || Object.getPrototypeOf(MediaCollection)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(MediaCollection, [{\n\t        key: 'play',\n\t        value: function play(ref) {\n\t            if (this.refs[ref]) {\n\t                this.refs[ref].play();\n\t                this.props.onPlay.call(this, ref);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(props) {\n\t            _get(MediaCollection.prototype.__proto__ || Object.getPrototypeOf(MediaCollection.prototype), 'componentWillReceiveProps', this).call(this, props);\n\t\n\t            if (props.play && props.play !== this.props.play) {\n\t                this.play(props.play);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return MediaCollection;\n\t}(skoash.Component);\n\t\n\tMediaCollection.defaultProps = _.defaults({\n\t    onPlay: _.noop\n\t}, skoash.Component.defaultProps);\n\t\n\texports.default = MediaCollection;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Particle = function () {\n\t    function Particle(particle) {\n\t        _classCallCheck(this, Particle);\n\t\n\t        this.x = particle.x;\n\t        this.y = particle.y;\n\t        this.velocityY = particle.velocityY;\n\t        this.velocityX = particle.velocityX;\n\t        this.size = particle.size;\n\t        this.alpha = particle.alpha;\n\t    }\n\t\n\t    _createClass(Particle, [{\n\t        key: \"update\",\n\t        value: function update(context, image, delta) {\n\t            this.y += this.velocityY;\n\t            this.x += this.velocityX;\n\t            this.velocityY *= delta.vy;\n\t            this.velocityX *= delta.vx;\n\t            if (this.alpha < 0) this.alpha = 0;\n\t            context.globalAlpha = this.alpha;\n\t            context.save();\n\t            context.translate(this.x, this.y);\n\t            context.scale(this.size, this.size);\n\t            context.drawImage(image, -image.width / 2, -image.height / 2);\n\t            context.restore();\n\t            this.alpha *= delta.alpha;\n\t            this.size += delta.size;\n\t        }\n\t    }]);\n\t\n\t    return Particle;\n\t}();\n\t\n\texports.default = Particle;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar QuitScreen = function (_skoash$Screen) {\n\t    _inherits(QuitScreen, _skoash$Screen);\n\t\n\t    function QuitScreen() {\n\t        _classCallCheck(this, QuitScreen);\n\t\n\t        return _possibleConstructorReturn(this, (QuitScreen.__proto__ || Object.getPrototypeOf(QuitScreen)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(QuitScreen, [{\n\t        key: 'okay',\n\t        value: function okay() {\n\t            skoash.trigger('quit');\n\t        }\n\t    }, {\n\t        key: 'cancel',\n\t        value: function cancel() {\n\t            this.close();\n\t            skoash.trigger('menuClose', {\n\t                id: this.props.id\n\t            });\n\t        }\n\t    }, {\n\t        key: 'renderAssets',\n\t        value: function renderAssets() {\n\t            if (this.props.assets) {\n\t                return this.props.assets.map(function (asset, key) {\n\t                    return React.createElement(skoash.Audio, _extends({}, asset.props, {\n\t                        ref: asset.ref || asset.props['data-ref'] || 'asset-' + key,\n\t                        key: key,\n\t                        'data-ref': key\n\t                    }));\n\t                });\n\t            }\n\t\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                'div',\n\t                { id: this.props.id, className: 'screen ' + this.getClassNames() },\n\t                this.renderAssets(),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'center' },\n\t                    React.createElement(\n\t                        'div',\n\t                        { className: 'frame' },\n\t                        React.createElement(\n\t                            'h2',\n\t                            null,\n\t                            'Are you sure you',\n\t                            React.createElement('br', null),\n\t                            'want to quit?'\n\t                        ),\n\t                        React.createElement(\n\t                            'h3',\n\t                            null,\n\t                            'Your game progress will be saved'\n\t                        ),\n\t                        React.createElement('button', { className: 'quit-yes', onClick: this.okay.bind(this) }),\n\t                        React.createElement('button', { className: 'quit-no', onClick: this.cancel.bind(this) })\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return QuitScreen;\n\t}(skoash.Screen);\n\t\n\texports.default = React.createElement(QuitScreen, {\n\t    id: 'quit'\n\t});\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (i, s, o, g, r, a, m) {\n\t    i.GoogleAnalyticsObject = r;i[r] = i[r] || function () {\n\t        (i[r].q = i[r].q || []).push(arguments);\n\t    }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);\n\t})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\t\n\tga('create', 'UA-26000499-1', 'auto');\n\tga('send', 'pageview');\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\twindow.ENVIRONMENT = {\n\t    MEDIA: 'https://media.changemyworldnow.com/f/'\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function test() {\n\t    if (window.parent === window) {\n\t        window.location.href = 'https://www.changemyworldnow.com/';\n\t    } else {\n\t        document.domain = 'changemyworldnow.com';\n\t    }\n\t})();\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// fire/ai.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 21af3206c93418cc50b2","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/classnames/index.js\n// module id = 1\n// module chunks = 0","import classNames from 'classnames';\n\nclass Draggable extends skoash.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            startX: 0,\n            startY: 0,\n            endX: 0,\n            endY: 0,\n            zoom: 1,\n        };\n\n        this.mouseDown = this.mouseDown.bind(this);\n        this.mouseUp = this.mouseUp.bind(this);\n\n        this.moveEvent = this.moveEvent.bind(this);\n\n        this.touchStart = this.touchStart.bind(this);\n        this.touchEnd = this.touchEnd.bind(this);\n    }\n\n    shouldDrag() {\n        return true;\n    }\n\n    incomplete() {\n        this.markIncorrect();\n        this.returnToStart();\n\n        super.incomplete();\n    }\n\n    markCorrect() {\n        this.setState({\n            correct: true,\n        });\n    }\n\n    markIncorrect() {\n        this.setState({\n            correct: false,\n        });\n    }\n\n    startEvent(e, cb) {\n        var pageX;\n        var pageY;\n        var rect;\n        var startX;\n        var startY;\n        var endX;\n        var endY;\n        var grabX;\n        var grabY;\n\n        if (e.target !== this.refs.el) return;\n        if (!this.shouldDrag()) return;\n\n        if (e.targetTouches && e.targetTouches[0]) {\n            pageX = e.targetTouches[0].pageX;\n            pageY = e.targetTouches[0].pageY;\n            rect = e.target.getBoundingClientRect();\n            e = e.targetTouches[0];\n            e.offsetX = pageX - rect.left;\n            e.offsetY = pageY - rect.top;\n        }\n\n        grabX = e.offsetX;\n        grabY = e.offsetY;\n\n        startX = endX = e.pageX - grabX;\n        startY = endY = e.pageY - grabY;\n\n        if (!this.state.firstX) {\n            this.setState({\n                firstX: startX,\n                firstY: startY,\n            });\n        }\n\n        if (!this.props.return) {\n            startX = _.isFinite(this.state.grabX) ?\n        this.state.startX + this.state.grabX - grabX :\n        startX;\n            startY = _.isFinite(this.state.grabY) ?\n        this.state.startY + this.state.grabY - grabY :\n        startY;\n        }\n\n        this.setState({\n            dragging: true,\n            return: false,\n            startX,\n            startY,\n            grabX,\n            grabY,\n            endX,\n            endY,\n        });\n\n        if (typeof this.props.dragRespond === 'function') {\n            this.props.dragRespond(this.props.message);\n        }\n\n        if (typeof cb === 'function') {\n            cb.call(this);\n        }\n    }\n\n    attachMouseEvents() {\n        window.addEventListener('mousemove', this.moveEvent);\n        window.addEventListener('mouseup', this.mouseUp);\n    }\n\n    attachTouchEvents() {\n        window.addEventListener('touchmove', this.moveEvent);\n        window.addEventListener('touchend', this.touchEnd);\n    }\n\n    mouseDown(e) {\n        this.startEvent(e, this.attachMouseEvents);\n    }\n\n    touchStart(e) {\n        this.startEvent(e, this.attachTouchEvents);\n    }\n\n    moveEvent(e) {\n        if (e.targetTouches && e.targetTouches[0]) {\n            e.pageX = e.targetTouches[0].pageX;\n            e.pageY = e.targetTouches[0].pageY;\n        }\n\n        this.setState({\n            endX: e.pageX - this.state.grabX,\n            endY: e.pageY - this.state.grabY,\n        });\n    }\n\n    returnToStart() {\n        if (this.state.firstX) {\n            this.setState({\n                dragging: false,\n                return: true,\n                endX: this.state.firstX,\n                endY: this.state.firstY,\n            });\n        }\n    }\n\n    endEvent(cb) {\n        this.dropRespond();\n\n        if (this.props.return) {\n            this.returnToStart();\n        } else {\n            this.setState({\n                dragging: false,\n                return: this.state.return,\n            });\n        }\n\n        if (typeof cb === 'function') {\n            cb.call(this);\n        }\n    }\n\n    detachMouseEvents() {\n        window.removeEventListener('mousemove', this.moveEvent);\n        window.removeEventListener('mouseup', this.mouseUp);\n    }\n\n    detachTouchEvents() {\n        window.removeEventListener('touchmove', this.moveEvent);\n        window.removeEventListener('touchend', this.touchEnd);\n    }\n\n    mouseUp() {\n        this.endEvent(this.detachMouseEvents);\n    }\n\n    touchEnd() {\n        this.endEvent(this.detachTouchEvents);\n    }\n\n    dropRespond() {\n        var corners;\n\n        corners = this.setCorners();\n\n        if (typeof this.props.dropRespond === 'function') {\n            this.props.dropRespond(this.props.message, corners);\n        }\n    }\n\n    setCorners() {\n        var top;\n        var left;\n        var width;\n        var height;\n        var el;\n        var corners = [];\n\n        left = 0;\n        top = 0;\n        el = this.refs.el;\n        width = el.offsetWidth;\n        height = el.offsetHeight;\n\n        while (el) {\n            if (el.className.indexOf('screen') !== -1) {\n                break;\n            }\n\n            left += el.offsetLeft || 0;\n            top += el.offsetTop || 0;\n            el = el.offsetParent;\n        }\n\n        left += ((this.state.endX - this.state.startX) / this.state.zoom);\n        top += ((this.state.endY - this.state.startY) / this.state.zoom);\n\n        for (let i = 0; i < 4; i++) {\n            corners.push({\n                x: left + width * (i === 1 || i === 2 ? 1 : 0),\n                y: top + height * (i > 1 ? 1 : 0),\n            });\n        }\n\n        this.setState({\n            corners,\n        });\n\n        return corners;\n    }\n\n    componentDidMount() {\n        this.bootstrap();\n    }\n\n    bootstrap() {\n        super.bootstrap();\n\n        this.setZoom();\n\n        this.refs.el.addEventListener('mousedown', this.mouseDown);\n        this.refs.el.addEventListener('touchstart', this.touchStart);\n\n        window.addEventListener('resize', this.setZoom.bind(this));\n    }\n\n    setZoom() {\n        skoash.trigger('getState').then(state => {\n            this.setState({\n                zoom: state.scale,\n            });\n        });\n    }\n\n    getStyle() {\n        var x;\n        var y;\n\n        x = ((this.state.endX - this.state.startX) / this.state.zoom);\n        y = ((this.state.endY - this.state.startY) / this.state.zoom);\n\n        return {\n            transform: `translateX(${x}px) translateY(${y}px)`,\n            WebkitTransform: `translateX(${x}px) translateY(${y}px)`,\n        };\n    }\n\n    getClassNames() {\n        return classNames({\n            draggable: true,\n            [this.props.className]: this.props.className,\n            [this.props.message]: this.props.message,\n            DRAGGING: this.state.dragging,\n            RETURN: this.state.return,\n            CORRECT: this.state.correct,\n        }, super.getClassNames());\n    }\n\n    render() {\n        return (\n            <div\n                ref=\"el\"\n                className={this.getClassNames()}\n                style={this.getStyle()}\n            >\n                {this.renderContentList()}\n            </div>\n        );\n    }\n}\n\nexport default Draggable;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/draggable/0.1.js","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      value = Object(value);\n      return (symToStringTag && symToStringTag in value)\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      object = Object(object);\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/lodash/lodash.js\n// module id = 3\n// module chunks = 0","import Dropzone from 'shared/components/dropzone/0.1.js';\nimport Reveal from 'shared/components/reveal/0.1.js';\n\nimport classNames from 'classnames';\n\nclass DropzoneReveal extends skoash.Component {\n    bootstrap() {\n        super.bootstrap();\n    }\n\n    correctRespond(message, dropzoneKey) {\n        this.dropRespond(message);\n\n        if (typeof this.props.correctRespond === 'function') {\n            this.props.correctRespond.call(this, message, dropzoneKey);\n        }\n    }\n\n    incorrectRespond(message) {\n        this.dropRespond(message);\n    }\n\n    dropRespond(message) {\n        if (typeof this.refs.reveal.open === 'function') {\n            this.refs.reveal.open(message);\n        }\n    }\n\n    closeRespond() {\n        if (typeof this.props.closeRespond === 'function') {\n            this.props.closeRespond();\n        }\n    }\n\n    revealComplete() {\n        this.playMedia('complete');\n    }\n\n    renderAssets() {\n        if (this.props.assets) {\n            return this.props.assets.map((asset, key) => {\n                return (\n                    <asset.type\n                        {...asset.props}\n                        ref={asset.props['data-ref'] || ('asset-' + key)}\n                        key={key}\n                        data-ref={key}\n                    />\n                );\n            });\n        }\n\n        return null;\n    }\n\n    renderDropzone() {\n        return (\n            <Dropzone\n                ref=\"dropzone\"\n                dropzones={this.props.dropzones}\n                draggables={this.props.dropzoneDraggables}\n                draggablesLeft={this.props.dropzoneDraggablesLeft}\n                draggablesRight={this.props.dropzoneDraggablesRight}\n                assets={this.props.dropzoneAssets}\n                correctRespond={this.correctRespond.bind(this)}\n                incorrectRespond={this.incorrectRespond.bind(this)}\n                onComplete={this.props.onDropzoneComplete}\n            />\n        );\n    }\n\n    renderReveal() {\n        return (\n            <Reveal\n                ref=\"reveal\"\n                list={this.props.revealList}\n                assets={this.props.revealAssets}\n                closeRespond={this.closeRespond.bind(this)}\n                onComplete={this.revealComplete.bind(this)}\n                onOpen={this.props.onOpen}\n                openOnStart={this.props.openOnStart}\n                openReveal={this.props.openReveal}\n                closeReveal={this.props.closeReveal}\n            />\n        );\n    }\n\n    getClassNames() {\n        return classNames(\n            'dropzone-reveal',\n            super.getClassNames(),\n        );\n    }\n\n    render() {\n        return (\n            <div className={this.getClassNames()}>\n                {this.renderAssets()}\n                {this.renderReveal()}\n                {this.renderDropzone()}\n            </div>\n        );\n    }\n}\n\nexport default DropzoneReveal;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/dropzone_reveal/0.1.js","// As of skoash 1.1.0 this component can be found at skoash.Reveal\n/* eslint-disable no-console */\nconsole.warn('As of skoash 1.1.0 this component can be found at skoash.Reveal');\n/* eslint-enable no-console */\n\nimport classNames from 'classnames';\n\nclass Reveal extends skoash.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            openReveal: '',\n            currentlyOpen: []\n        };\n\n        this.index = 0;\n    }\n\n    incomplete() {\n        this.setState({\n            openReveal: '',\n            currentlyOpen: []\n        });\n\n        super.incomplete();\n    }\n\n    open(message) {\n        var self = this;\n        var currentlyOpen = this.props.openMultiple ?\n            this.state.currentlyOpen.concat(message) : [message];\n\n        self.setState({\n            open: true,\n            openReveal: message,\n            currentlyOpen,\n        });\n\n        self.playAudio(message);\n\n        if (self.props.completeOnOpen) {\n            self.complete();\n        } else {\n            _.each(self.refs, (ref, key) => {\n                if (ref && key === message) ref.complete();\n            });\n        }\n\n        if (self.props.autoClose) {\n            setTimeout(function () {\n                self.close();\n            }, 2000);\n        }\n\n        if (self.props.openTarget) {\n            self.updateGameState({\n                path: self.props.openTarget,\n                data: {\n                    open: '' + message,\n                    close: false,\n                }\n            });\n        }\n\n        self.props.onOpen.call(self, message);\n    }\n\n    close(opts = {}) {\n        var prevMessage;\n        var currentlyOpen;\n        var openReveal;\n        var open;\n\n        prevMessage = this.state.openReveal;\n        currentlyOpen = this.state.currentlyOpen;\n        currentlyOpen.splice(currentlyOpen.indexOf(prevMessage), 1);\n        open = currentlyOpen.length > 0;\n        openReveal = open ? currentlyOpen[currentlyOpen.length - 1] : '';\n\n        this.setState({\n            open,\n            openReveal,\n            currentlyOpen,\n        });\n\n        if (!opts.silent) this.playMedia('close-sound');\n\n        this.props.onClose.call(this, prevMessage);\n\n        if (typeof this.props.closeRespond === 'function') {\n            this.props.closeRespond(prevMessage);\n        }\n    }\n\n    start() {\n        super.start();\n        if (this.props.openOnStart != null) {\n            this.open(this.props.openOnStart);\n        } else if (this.props.start && typeof this.props.start === 'function') {\n            this.props.start.call(this);\n        } else {\n            this.close({silent: true});\n        }\n    }\n\n    playAudio(message) {\n        var messages;\n\n        message += '';\n\n        this.playMedia('open-sound');\n\n        messages = message.split(' ');\n        messages.map(audio => {\n            this.playMedia(audio);\n        });\n    }\n\n    renderAssets() {\n        if (this.props.assets) {\n            return this.props.assets.map((asset, key) => {\n                var ref = asset.ref || asset.props['data-ref'] || 'asset-' + key;\n                return (\n                    <asset.type\n                        {...asset.props}\n                        data-ref={key}\n                        ref={ref}\n                        key={key}\n                    />\n                );\n            });\n        }\n\n        return null;\n    }\n\n    renderList() {\n        var list = this.props.list;\n\n        return list.map((li, key) => {\n            var ref = li.ref || li.props['data-ref'] || key;\n            return (\n                <li.type\n                    {...li.props}\n                    type=\"li\"\n                    className={this.getClass(li, key)}\n                    data-ref={ref}\n                    ref={ref}\n                    key={key}\n                />\n            );\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        super.componentWillReceiveProps(props);\n\n        if (props.openReveal != null && props.openReveal !== this.props.openReveal) {\n            this.open(props.openReveal);\n        }\n\n        if (props.closeReveal !== this.props.closeReveal) {\n            if (props.closeReveal === true) {\n                this.close();\n            } else if (Number.isInteger(props.closeReveal)) {\n                for (let i = 0; i < props.closeReveal; i++) {\n                    this.close();\n                }\n            }\n        }\n    }\n\n    getClass(li, key) {\n        var classes = '';\n\n        if (li.props.className) classes = li.props.className;\n\n        if (this.state.currentlyOpen.indexOf(key) !== -1 ||\n            this.state.currentlyOpen.indexOf('' + key) !== -1 ||\n            this.state.currentlyOpen.indexOf(li.props['data-ref']) !== -1 ||\n            this.state.currentlyOpen.indexOf(li.ref) !== -1\n        ) {\n            classes = classNames(classes, 'OPEN');\n        }\n\n        return classes;\n    }\n\n    getClassNames() {\n        var classes;\n        var open = 'open-none';\n\n        if (this.state.open) {\n            open = '';\n            this.state.currentlyOpen.forEach(ref => {\n                open += 'open-' + ref;\n            });\n        }\n\n        classes = classNames(\n            'reveal',\n            open,\n            super.getClassNames()\n        );\n\n        return classes;\n    }\n\n    render() {\n        return (\n            <div className={this.getClassNames()}>\n                {this.renderAssets()}\n                <div>\n                    <ul>\n                        {this.renderList()}\n                    </ul>\n                    <button className=\"close-reveal\" onClick={this.close.bind(this)}></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nReveal.defaultProps = _.defaults({\n    list: [\n        <li></li>,\n        <li></li>,\n        <li></li>,\n        <li></li>\n    ],\n    openMultiple: true,\n    onOpen: _.noop,\n    onClose: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default Reveal;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/reveal/0.1.js","// As of skoash 1.1.0 this component can be found at skoash.Selectable\n/* eslint-disable no-console */\nconsole.warn('As of skoash 1.1.0 this component can be found at skoash.Selectable');\n/* eslint-enable no-console */\n\nimport classNames from 'classnames';\n\nclass Selectable extends skoash.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            classes: {},\n            selectFunction: this.select,\n        };\n    }\n\n    start() {\n        var selectClass;\n        var selectFunction;\n        var classes = this.state.classes;\n\n        super.start();\n\n        selectClass = this.props.selectClass || this.state.selectClass || 'SELECTED';\n        selectFunction = selectClass === 'HIGHLIGHTED' ? this.highlight : this.select;\n\n        if (this.props.selectOnStart) {\n            classes[this.props.selectOnStart] = selectClass;\n        }\n\n        this.setState({\n            started: true,\n            classes,\n            selectFunction,\n            selectClass,\n        });\n    }\n\n    bootstrap() {\n        super.bootstrap();\n\n        if (this.refs.bin) {\n            this.setState({\n                list: this.refs.bin.getAll()\n            });\n        }\n    }\n\n    selectHelper(e, classes) {\n        var ref;\n        var dataRef;\n        var target;\n        var id;\n        var isCorrect;\n        var self = this;\n\n        if (typeof e === 'string') {\n            dataRef = e;\n        } else {\n            target = e.target.closest('LI');\n\n            if (!target) return;\n\n            dataRef = target.getAttribute('data-ref');\n        }\n\n        ref = self.refs[dataRef];\n\n        isCorrect = (ref && ref.props && ref.props.correct) ||\n            (!self.props.answers || !self.props.answers.length ||\n                self.props.answers.indexOf(dataRef) !== -1);\n\n        if (self.props.allowDeselect && classes[dataRef]) {\n            delete classes[dataRef];\n        } else if (isCorrect) {\n            classes[dataRef] = self.state.selectClass;\n        }\n\n        self.setState({\n            classes,\n        });\n\n        self.props.selectRespond.call(self, dataRef);\n        self.props.onSelect.call(self, dataRef);\n\n        if (self.props.chooseOne) self.complete();\n\n        if (self.props.dataTarget) {\n            self.updateGameState({\n                path: self.props.dataTarget,\n                data: {\n                    target: ref\n                }\n            });\n        }\n\n        if (self.props.completeListOnClick) {\n            _.each(self.refs, (r, k) => {\n                if (k === id) _.invoke(r, 'complete');\n            });\n        }\n\n        _.each(self.refs, (r, k) => {\n            if (k === dataRef) _.invoke(r, 'complete');\n        });\n    }\n\n    select(e) {\n        var classes = [];\n        this.selectHelper(e, classes);\n    }\n\n    highlight(e) {\n        var classes = this.state.classes;\n        this.selectHelper(e, classes);\n    }\n\n    getClass(key, li) {\n        return classNames(\n            li.props.className,\n            this.state.classes[key],\n            this.state.classes[li.props['data-ref']],\n            this.state.classes[li.props['data-key']]\n        );\n    }\n\n    getClassNames() {\n        return classNames('selectable', super.getClassNames());\n    }\n\n    renderBin() {\n        if (!this.props.bin) return null;\n\n        return (\n            <this.props.bin.type\n                {...this.props.bin.props}\n                ref=\"bin\"\n            />\n        );\n    }\n\n    renderList() {\n        var list = this.props.list || this.state.list;\n        return list.map((li, key) => {\n            var dataRef = li.props['data-ref'] || key;\n            var ref = li.ref || li.props.id || dataRef;\n            var message = li.props.message || '' + key;\n            return (\n                <li.type\n                    {...li.props}\n                    type=\"li\"\n                    className={this.getClass(key, li)}\n                    message={message}\n                    data-message={message}\n                    data-ref={dataRef}\n                    ref={ref}\n                    key={key}\n                />\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderBin()}\n                <ul className={this.getClassNames()} onClick={this.state.selectFunction.bind(this)}>\n                    {this.renderList()}\n                </ul>\n            </div>\n        );\n    }\n}\n\nSelectable.defaultProps = _.defaults({\n    list: [\n        <li></li>,\n        <li></li>,\n        <li></li>,\n        <li></li>\n    ],\n    selectClass: 'SELECTED',\n    completeListOnClick: true,\n    selectRespond: _.noop,\n    onSelect: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default Selectable;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/selectable/0.1.js","import Selectable from 'shared/components/selectable/0.1';\n\nclass SelectableAudio extends skoash.Component {\n\n    selectRespond(ref) {\n        this.playAudio(ref);\n\n        if (typeof this.props.selectRespond === 'function') {\n            this.props.selectRespond.call(this, ref);\n        }\n\n        if (this.props.chooseOne) {\n            this.complete();\n        }\n    }\n\n    checkComplete() {\n        if (!this.props.chooseOne) super.checkComplete();\n    }\n\n    playAudio(ref) {\n        var component;\n\n        this.playMedia('asset-' + ref);\n\n        component = this.refs.selectable.refs[ref];\n\n        if (component) {\n            if (component.props.correct) {\n                this.playMedia('asset-correct');\n            } else {\n                this.playMedia('asset-incorrect');\n            }\n        }\n    }\n\n    renderAssets() {\n        if (this.props.audioAssets) {\n            return this.props.audioAssets.map((asset, key) => {\n                var dataRef = asset.props['data-ref'] || key;\n                var ref = 'asset-' + dataRef;\n                return (\n                    <skoash.Audio\n                        {...asset.props}\n                        ref={ref}\n                        key={key}\n                        data-ref={dataRef}\n                    />\n                );\n            });\n        }\n        return null;\n    }\n\n    renderSelectable() {\n        return (\n            <Selectable\n                ref=\"selectable\"\n                list={this.props.selectableList}\n                selectRespond={this.selectRespond.bind(this)}\n                selectClass={this.props.selectClass}\n            />\n        );\n    }\n\n    getClassNames() {\n        return 'selectable-audio ' + super.getClassNames();\n    }\n\n    render() {\n        return (\n            <div className={this.getClassNames()}>\n                {this.renderAssets()}\n                {this.renderSelectable()}\n            </div>\n        );\n    }\n}\n\nexport default SelectableAudio;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/selectable_audio/0.1.js","import SelectableAudio from 'shared/components/selectable_audio/0.1';\n\nexport default function (props, ref, key) {\n    var state = skoash.trigger('getState');\n    var currentScreenIndex = state.currentScreenIndex;\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"alarm\"\n            onComplete={() => {\n                skoash.trigger('goto', {\n                    index: currentScreenIndex + 1,\n                });\n            }}\n        >\n            <skoash.MediaSequence ref=\"media-sequence\">\n                <skoash.Audio ref=\"title\" type=\"voiceOver\" src=\"media/S_5/vo_FireBreaksOut.mp3\" />\n                <skoash.Audio ref=\"directions\" type=\"voiceOver\" src=\"media/S_5/vo_ClickAndShowYouKnow.mp3\" />\n            </skoash.MediaSequence>\n            <p>Click and show you know.</p>\n            <skoash.Image className=\"animated\" src=\"media/S_5/img_5.1.png\" />\n            <skoash.Image className=\"animated\" src=\"media/S_5/img_5.2.png\" />\n            <skoash.Image className=\"animated\" src=\"media/S_1/img_1.1.png\" />\n            <SelectableAudio\n                ref=\"selectable-audio\"\n                audioAssets={[\n                    <skoash.Audio ref=\"alarm-sound\" type=\"sfx\" src=\"media/S_5/S_5.1.mp3\"/>\n                ]}\n                selectableList={[\n                    <skoash.Component className=\"push-down\" correct />\n                ]}\n            />\n        </skoash.Screen>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/alarm_screen.js","export default function (props, ref, key) {\n\n    function animate(name) {\n        var open = _.get(props, 'data.states.open', null) === null ? name : open + ' ' + name;\n        skoash.trigger('updateState', {\n            path: 'states',\n            data: {\n                open,\n            },\n        });\n    }\n\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"break-triangle\"\n            className={_.get(props, 'data.states.open', null)}\n            onOpen={() => {\n                skoash.trigger('updateState', {\n                    path: 'states',\n                    data: {\n                        open: null,\n                    },\n                });\n            }}\n        >\n            <skoash.MediaSequence\n                ref=\"audio-sequence\"\n            >\n                <skoash.Audio\n                    type=\"voiceOver\"\n                    data-ref=\"title\"\n                    src=\"media/S_9/vo_FirefightersBreakTheTriangle.mp3\"\n                    onComplete={animate.bind(undefined, 'HEAT')}\n                />\n                <skoash.Audio type=\"voiceOver\" data-ref=\"heat\" src=\"media/S_8/vo_Heat.mp3\"\n                    onComplete={animate.bind(undefined, 'AIR')}/>\n                <skoash.Audio type=\"voiceOver\" data-ref=\"air\" src=\"media/S_8/vo_Air.mp3\"\n                    onComplete={animate.bind(undefined, 'FUEL')}/>\n                <skoash.Audio type=\"voiceOver\" data-ref=\"fuel\" src=\"media/S_8/vo_Fuel.mp3\" />\n                <skoash.Audio\n                    type=\"voiceOver\"\n                    data-ref=\"theory\"\n                    src=\"media/S_9/vo_ThisIsBasicFirefighterTheory.mp3\"\n                />\n            </skoash.MediaSequence>\n            <p>\n                Firefighters break the triangle by removing<br /> one of more these three sides.\n            </p>\n            <skoash.Component className=\"animated images\">\n                <skoash.Image\n                    className=\"animated fuel\"\n                    src=\"media/S_8/img_8.10b.png\"\n                />\n                <skoash.Image\n                    className=\"animated fuel side\"\n                    data-ref=\"fuelSide\"\n                    src=\"media/S_8/img_8.10g.png\"\n                />\n                <skoash.Image\n                    className=\"animated heat\"\n                    src=\"media/S_8/img_8.10c.png\"\n                />\n                <skoash.Image\n                    className=\"animated heat side\"\n                    data-ref=\"heatSide\"\n                    src=\"media/S_8/img_8.10f.png\"\n                />\n                <skoash.Image\n                    className=\"animated air\"\n                    src=\"media/S_8/img_8.10d.png\"\n                />\n                <skoash.Image\n                    className=\"animated air side\"\n                    data-ref=\"airSide\"\n                    src=\"media/S_8/img_8.10h.png\"\n                />\n                <skoash.Image\n                    className=\"animated triangle\"\n                    src=\"media/S_8/img_8.10e.png\"\n                />\n            </skoash.Component>\n            <h2>\n                This is basic firefighter theory!\n            </h2>\n        </skoash.Screen>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/break_triangle_screen.js","import Selectable from 'shared/components/selectable/0.1';\n\nimport classNames from 'classnames';\n\nclass ChooseScreenComponent extends skoash.Screen {\n\n    constructor() {\n        super();\n\n        this.state = {\n            slideToggle: true,\n        };\n    }\n\n    getRefs(currentRef) {\n        if (!currentRef.refs) {\n            return;\n        }\n        _.each(currentRef.refs, (ref, key) => {\n            this.refs[key] = ref;\n            if (key.includes('center') || key.includes('group')) {\n                this.getRefs(ref);\n            }\n        });\n    }\n\n    bootstrap() {\n        var ref;\n        var self = this;\n        super.bootstrap();\n\n        ['center-1', 'center-2'].forEach(val => {\n            ref = self.refs[val];\n            if (ref) {\n                self.getRefs(ref);\n            }\n        });\n    }\n\n    updateGender(gender) {\n        this.updateGameState({\n            path: ['character'],\n            data: {\n                gender\n            }\n        });\n    }\n\n    updateSkin(skin) {\n        this.updateGameState({\n            path: ['character'],\n            data: {\n                skin\n            }\n        });\n    }\n\n    prevSlide() {\n        this.setState({\n            slideToggle: true,\n        });\n    }\n\n    prev() {\n        if (!this.state.slideToggle) {\n            this.prevSlide();\n            return;\n        }\n\n        super.prev();\n    }\n\n    nextSlide(gender) {\n        this.updateGender(gender);\n\n        this.setState({\n            slideToggle: false,\n        });\n    }\n\n    next(skin) {\n        this.updateSkin(skin);\n\n        super.next();\n    }\n\n    renderFemaleMale() {\n        return (\n            <skoash.Component ref=\"center-1\" className=\"center female-male\">\n                <skoash.Component className=\"group\">\n                    <Selectable\n                        ref=\"selectable\"\n                        list={[\n                            <skoash.ListItem id=\"gender-female\" className=\"animated\"\n                                onClick={this.nextSlide.bind(this, 'female')} />,\n                            <skoash.ListItem id=\"gender-male\" className=\"animated\"\n                                onClick={this.nextSlide.bind(this, 'male')} />,\n                        ]}\n                    />\n                </skoash.Component>\n            </skoash.Component>\n        );\n    }\n\n    renderSkinColor() {\n        return (\n            <skoash.Component ref=\"center-2\" className=\"center skin-color\">\n                <skoash.Component className=\"group\">\n                    <Selectable\n                        ref=\"selectable-2\"\n                        list={[\n                            <skoash.ListItem id=\"skin-light\" className=\"animated\"\n                            onClick={this.next.bind(this, 'light')} />,\n                            <skoash.ListItem id=\"skin-medium\" className=\"animated\"\n                            onClick={this.next.bind(this, 'medium')} />,\n                            <skoash.ListItem id=\"skin-dark\" className=\"animated\"\n                            onClick={this.next.bind(this, 'dark')} />,\n                        ]}\n                    />\n                </skoash.Component>\n            </skoash.Component>\n        );\n    }\n\n    getClassNames() {\n        var data = skoash.trigger('getState').data;\n        var gender;\n        if (data.character) {\n            gender = data.character.gender;\n        }\n        return classNames({\n            GENDER: this.state.slideToggle,\n            SKIN: !this.state.slideToggle,\n            [gender]: gender,\n        }, super.getClassNames());\n    }\n\n    renderContent() {\n        return (\n            <div>\n                {this.renderContentList()}\n                {this.renderFemaleMale()}\n                {this.renderSkinColor()}\n            </div>\n        );\n    }\n}\n\nexport default function (props, ref, key) {\n    return (\n        <ChooseScreenComponent\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"choose\"\n            hideNext\n            silentComplete\n        >\n            <skoash.Audio ref=\"vo\" type=\"voiceOver\" src=\"media/S_11/vo_ChooseYourFirefighter.mp3\" />\n            <skoash.Image className=\"animated\" src=\"media/S_11/img_11.1.png\" />\n        </ChooseScreenComponent>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/choose_screen.js","export default function (props, ref, key) {\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"flip\"\n            playOnStart=\"fire-sfx\"\n        >\n            <skoash.Audio type=\"voiceOver\" src=\"media/S_13/vo_Flip.mp3\" />\n            <skoash.Audio type=\"sfx\" ref=\"fire-sfx\" src=\"media/S_13/S_13.1.mp3\" />\n            <h2>\n                You just earned<br /> a red hot\n            </h2>\n            <div className=\"flip-text\">\n                FLIP\n            </div>\n            <skoash.Image className=\"animated fire\" src=\"media/S_1/img_1.1.png\" />\n            <skoash.Image className=\"animated flip\" src=\"media/S_13/img_13.1.png\" />\n        </skoash.Screen>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/flip_screen.js","import _ from 'lodash';\n\nimport MediaCollection from 'shared/components/media_collection/0.1';\n\nconst STATES = [\n    {\n        name: 'VO',\n        audio: 'children-0',\n        interval: 2000,\n    },\n    {\n        name: 'FLAME',\n        audio: 'children-1',\n        interval: 1000\n    },\n    {\n        name: 'EQUAL',\n        audio: 'children-2',\n        interval: 700\n    },\n    {\n        name: 'TEXT',\n        audio: 'children-3',\n    },\n];\n\nexport default function (props, ref, key) {\n\n    function play(open, i) {\n        var state = STATES[i];\n\n        open += ' ' + state.name;\n        skoash.trigger('updateState', {\n            path: 'states',\n            data: {\n                open,\n                play: state.audio,\n            }\n        });\n\n        if (state.interval) {\n            setTimeout(() => {\n                play(open, ++i);\n            }, state.interval);\n        }\n    }\n\n    function init() {\n        setTimeout(() => {\n            play('', 0);\n        }, 100);\n    }\n\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"info-chemical\"\n            onOpen={init}\n            className={_.get(props, 'data.states.open', null)}\n        >\n            <MediaCollection ref=\"media-collection\" play={_.get(props, 'data.states.play', null)}>\n                <skoash.Audio type=\"voiceOver\" src=\"media/S_2/vo_ChemicalReaction.mp3\" />\n                <skoash.Audio type=\"sfx\" src=\"media/S_2/S_2.2.mp3\" />\n                <skoash.Audio type=\"sfx\" src=\"media/S_2/S_2.3.mp3\" />\n                <skoash.Audio type=\"sfx\" src=\"media/S_2/S_2.4.mp3\" />\n            </MediaCollection>\n            <skoash.Image className=\"animated\" src=\"media/S_2/img_2.1.png\" />\n            <skoash.Image className=\"animated flame\" src=\"media/S_2/img_2.2.png\" />\n            <skoash.Image className=\"animated equal\" src=\"media/S_2/img_2.3.png\" />\n            <h2 className=\"animated text\">\n                Chemical<br />Reaction\n            </h2>\n        </skoash.Screen>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/info_chemical_screen.js","export default function (props, ref, key) {\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"info-forrest\"\n        >\n            <skoash.Audio type=\"voiceOver\" src=\"media/S_4/vo_FireDestroysTrees.mp3\" />\n            <skoash.Component className=\"frame animated\">\n                <skoash.Image className=\"background\" src=\"media/_Frames/FR_1.png\" />\n                <p className=\"animated\">\n                    Fire destroys trees and homes and<br />\n                    consumes landscapes and habitats.\n                </p>\n            </skoash.Component>\n        </skoash.Screen>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/info_forrest_screen.js","export default function (props, ref, key) {\n\n    function animate(name) {\n        var open = _.get(props, 'data.states.open', null) === null ? name : open + ' ' + name;\n        skoash.trigger('updateState', {\n            path: 'states',\n            data: {\n                open,\n            },\n        });\n    }\n\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"info-fuel-oxygen\"\n            className={_.get(props, 'data.states.open', null)}\n        >\n            <skoash.MediaSequence ref=\"audio-sequence\">\n                    <skoash.Audio type=\"voiceOver\" src=\"media/S_3/vo_FuelOxygenMakeItBurn.mp3\"\n                            onComplete={animate.bind(undefined, 'WOOD')}/>\n                    <skoash.Audio ref=\"wood\" type=\"sfx\" src=\"media/S_3/S_3.2.mp3\"\n                            onComplete={animate.bind(undefined, 'PLUS')}/>\n                    <skoash.Audio ref=\"plus\" type=\"sfx\" src=\"media/S_3/S_3.4.mp3\"\n                            onComplete={animate.bind(undefined, 'O2')}/>\n                    <skoash.Audio ref=\"o2\" type=\"sfx\" src=\"media/S_3/S_3.2.mp3\"\n                            onComplete={animate.bind(undefined, 'EQUAL')}/>\n                    <skoash.Audio ref=\"equal\" type=\"sfx\" src=\"media/S_3/S_3.4.mp3\"\n                            onComplete={animate.bind(undefined, 'FIRE')}/>\n                    <skoash.Audio ref=\"fire\" type=\"sfx\" src=\"media/S_3/S_3.3.mp3\" />\n            </skoash.MediaSequence>\n            <skoash.Image className=\"animated wood\" src=\"media/S_3/img_3.1.png\" />\n            <skoash.Image className=\"animated plus\" src=\"media/S_3/img_3.2.png\" />\n            <skoash.Image className=\"animated o2\" src=\"media/S_3/img_3.3.png\" />\n            <skoash.Image className=\"animated equal\" src=\"media/S_3/img_3.4.png\" />\n            <skoash.Image className=\"animated fire\" src=\"media/S_3/img_3.5.png\" />\n            <skoash.Image className=\"animated words\" src=\"media/S_3/img_3.6.png\" />\n        </skoash.Screen>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/info_fuel_oxygen_screen.js","export default function (props, ref, key) {\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"ladder\"\n        >\n            <skoash.Audio type=\"voiceOver\" src=\"media/S_10/vo_SpecialGear.mp3\" />\n            <skoash.Image className=\"animated\" src=\"media/S_10/img_10.1.png\" />\n            <skoash.Component className=\"frame animated\">\n                <skoash.Image className=\"background\" src=\"media/_Frames/FR_2.png\" />\n                <div>\n                    Firefighters need lots of<br />\n                    special gear to keep<br />\n                    them safe and help<br />\n                    them battle the flames.\n                </div>\n            </skoash.Component>\n        </skoash.Screen>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/ladder_screen.js","export default function (props, ref, key) {\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"men-and-women\"\n        >\n            <skoash.MediaSequence ref=\"media-sequence\">\n                <skoash.Audio type=\"voiceOver\" src=\"media/S_7/vo_MenWomenFirefighters.mp3\" />\n                <skoash.Audio type=\"voiceOver\" src=\"media/S_7/vo_TheyAreInExcellentPhysical.mp3\" />\n            </skoash.MediaSequence>\n            <skoash.Image className=\"animated\" src=\"media/S_7/img_7.1.png\" />\n            <skoash.Image className=\"animated\" src=\"media/S_7/img_7.2.png\" />\n            <skoash.Component className=\"frame\">\n                <skoash.Image className=\"background\" src=\"media/_Frames/FR_3.png\" />\n                <div>\n                    They are in great physical shape<br /> and also excellent mental shape.<br />\n                    They constantly learn theory<br /> and firefighting techniques.\n                </div>\n            </skoash.Component>\n        </skoash.Screen>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/men_and_women_screen.js","import Draggable from 'shared/components/draggable/0.1';\nimport DropzoneReveal from 'shared/components/dropzone_reveal/0.1';\n\nclass NeedScreenComponent extends skoash.Screen {\n\n    getRefs(currentRef) {\n        if (!currentRef.refs) {\n            return;\n        }\n        _.each(currentRef.refs, (ref, key) => {\n            this.refs[key] = ref;\n            if (key.includes('children')) {\n                this.getRefs(ref);\n            }\n        });\n    }\n\n    bootstrap() {\n        var ref;\n        var self = this;\n        super.bootstrap();\n\n        ref = self.refs['children-1'];\n        if (ref) {\n            self.getRefs(ref);\n        }\n    }\n\n    open() {\n        super.open();\n\n        this.checkComplete = null;\n        this.refs['dropzone-reveal'].incompleteRefs();\n        this.incomplete();\n        this.checkComplete = super.checkComplete;\n    }\n}\n\nexport default function (props, ref, key) {\n    var data = skoash.trigger('getState').data;\n    var skin;\n    var gender;\n    if (data.character) {\n        skin = data.character.gender;\n        gender = data.character.skin;\n    }\n    return (\n        <NeedScreenComponent\n            {...props}\n            ref={ref}\n            key={key}\n            className={skin + ' ' + gender}\n            id=\"need\"\n        >\n            <skoash.MediaSequence ref=\"media-sequence\">\n                <skoash.Audio type=\"voiceOver\" src=\"media/S_12/vo_ImagineYoureAFirefighter.mp3\" />\n                <skoash.Audio type=\"voiceOver\" src=\"media/S_12/vo_DragAndDropToOutfit.mp3\" />\n            </skoash.MediaSequence>\n            <skoash.Component className=\"center\">\n                <skoash.Component className=\"frame\">\n                    <skoash.Image className=\"animated\" src=\"media/S_12/img_12.1.png\" />\n                    <DropzoneReveal\n                        ref=\"dropzone-reveal\"\n                        assets={[\n                            <skoash.Audio data-ref=\"complete\" type=\"sfx\" src=\"media/S_12/S_12.3.mp3\" />,\n                        ]}\n                        dropzoneDraggablesLeft={[\n                            <Draggable message=\"pants\" />,\n                            <Draggable message=\"jacket\" />,\n                            <Draggable message=\"hood\" />,\n                            <Draggable message=\"boots\" />,\n                            <Draggable message=\"mask\" />,\n                            <Draggable message=\"gloves\" />,\n                        ]}\n                        dropzoneDraggablesRight={[\n                            <Draggable message=\"tank\" />,\n                            <Draggable message=\"walkie\" />,\n                            <Draggable message=\"axe\" />,\n                            <Draggable message=\"light\" />,\n                            <Draggable message=\"camera\" />,\n                            <Draggable message=\"punch\" />,\n                        ]}\n                        dropzoneAssets={[\n                            <skoash.Audio type=\"sfx\" data-ref=\"correct\" src=\"media/S_12/S_12.2.mp3\" />,\n                            <skoash.Audio type=\"sfx\" data-ref=\"drag\" src=\"media/S_12/S_12.1.mp3\" />,\n                        ]}\n                        dropzones={[\n                            <skoash.Component\n                              className=\"body\"\n                              answers={[\n                                  'pants',\n                                  'jacket',\n                                  'hood',\n                                  'boots',\n                                  'mask',\n                                  'gloves',\n                                  'tank',\n                                  'walkie',\n                                  'axe',\n                                  'light',\n                                  'camera',\n                                  'punch',\n                              ]}\n                            >\n                                <div className=\"bun\" />\n                                <div className=\"tank\" />\n                                <div className=\"body\" />\n                                <div className=\"boots\" />\n                                <div className=\"hood\" />\n                                <div className=\"pants\" />\n                                <div className=\"jacket\" />\n                                <div className=\"gloves\" />\n                                <div className=\"mask\" />\n                                <div className=\"straps\" />\n                                <div className=\"light\" />\n                                <div className=\"axe\" />\n                                <div className=\"walkie\" />\n                                <div className=\"camera\" />\n                                <div className=\"punch\" />\n                            </skoash.Component>\n                        ]}\n                        revealList={[\n                            <skoash.ListItem data-ref=\"pants\">\n                                <p>\n                                    Nobody wears shorts in a fire!<br /> You need these!\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"jacket\">\n                                <p>\n                                    If there is a fire, you<br /> need this special coat.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"hood\">\n                                <p>\n                                    This keeps every bit of<br /> your head protected.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"boots\">\n                                <p>\n                                    They keep dangerous<br /> chemicals off your feet.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"mask\">\n                                <p>\n                                    This protects your head and face.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"gloves\">\n                                <p>\n                                    Like boots do for your feet,<br /> these protect your hands.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"tank\">\n                                <p>\n                                    This is a can of air<br /> so you can breathe!\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"axe\">\n                                <p>\n                                    This helps you get<br /> through closed doors.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"walkie\">\n                                <p>\n                                    When shouting isn't enough<br /> you need this.\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"light\">\n                                <p>\n                                    Could be too dark to see<br /> unless you have this!\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"camera\">\n                                <p>\n                                    Need to see through<br /> darkness and smoke?<br /> This is for you!\n                                </p>\n                            </skoash.ListItem>,\n                            <skoash.ListItem data-ref=\"punch\">\n                                <p>\n                                    This helps you break<br /> through a window.\n                                </p>\n                            </skoash.ListItem>,\n                        ]}\n                        revealAssets={[\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"pants\"\n                                src=\"media/S_12/vo_TurnoutPants.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"jacket\"\n                                src=\"media/S_12/vo_TurnoutJacket.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"hood\"\n                                src=\"media/S_12/vo_CarbonFlashHood.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"boots\"\n                                src=\"media/S_12/vo_ChemicalProofBoots.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"mask\"\n                                src=\"media/S_12/vo_HelmetVisor.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"gloves\"\n                                src=\"media/S_12/vo_SafetyGloves.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"tank\"\n                                src=\"media/S_12/vo_TankOfOxygen.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"axe\"\n                                src=\"media/S_12/vo_Axe.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"walkie\"\n                                src=\"media/S_12/vo_HandHeldRadio.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"light\"\n                                src=\"media/S_12/vo_Flashlight.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"camera\"\n                                src=\"media/S_12/vo_ThermalImaging.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"punch\"\n                                src=\"media/S_12/vo_WindowPunch.mp3\"\n                            />,\n                        ]}\n                    />\n                </skoash.Component>\n            </skoash.Component>\n        </NeedScreenComponent>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/need_screen.js","import CursorCanvas from 'shared/components/cursor_canvas/0.1';\n\nexport default function (props, ref, key) {\n\n    function random(min, max) {\n        return Math.random() * (max - min) * min;\n    }\n\n    function particleGenerator() {\n        var particle = {\n            amount: 500,\n            velocityY: -2,\n            velocityX: (random(1, 10) - 5) / 10,\n            size: random(3, 5) / 10,\n            alpha: 1,\n            delta: {\n                vy: 0.99,\n                vx: 1,\n                alpha: 0.97,\n                size: 0.02,\n            },\n        };\n\n        return particle;\n    }\n\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"title\"\n            checkComplete={false}\n            completeDelay={2000}\n            completeOnStart\n        >\n            <CursorCanvas ref=\"smoke\" src=\"media/_Smoke/particle.jpg\" particle={particleGenerator} />\n            <skoash.Component className=\"title\">\n                <skoash.Image className=\"animated\" src=\"media/S_1/img_1.1.png\" />\n                <skoash.Image className=\"animated\" src=\"media/S_1/img_1.2.png\" />\n                <skoash.Image className=\"animated\" src=\"media/S_1/img_1.3.png\" />\n            </skoash.Component>\n        </skoash.Screen>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/title_screen.js","import Draggable from 'shared/components/draggable/0.1';\nimport DropzoneReveal from 'shared/components/dropzone_reveal/0.1';\n\nclass TriangleScreenComponent extends skoash.Screen {\n\n    getRefs(currentRef) {\n        if (!currentRef.refs) {\n            return;\n        }\n        _.each(currentRef.refs, (ref, key) => {\n            this.refs[key] = ref;\n            if (key.includes('children')) {\n                this.getRefs(ref);\n            }\n        });\n    }\n\n    bootstrap() {\n        var ref;\n        var self = this;\n\n        super.bootstrap();\n\n        ref = self.refs['children-0'];\n        if (ref) {\n            self.getRefs(ref);\n        }\n    }\n\n    open() {\n        super.open();\n\n        this.checkComplete = null;\n        this.refs['dropzone-reveal'].incompleteRefs();\n        this.incomplete();\n        this.checkComplete = super.checkComplete;\n    }\n}\n\n\nexport default function (props, ref, key) {\n    return (\n        <TriangleScreenComponent\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"triangle\"\n        >\n            <skoash.Component className=\"center\">\n                <skoash.Component className=\"frame\">\n                    <skoash.Image className=\"title\" ref=\"title\" src=\"media/S_8/img_8.1.png\" />\n                    <div className=\"directions\">\n                        <h3>Choose the words and drag to form a triangle</h3>\n                    </div>\n                    <skoash.MediaSequence>\n                        <skoash.Audio type=\"voiceOver\" src=\"media/S_8/vo_ThreeThingsMakeFireBurn.mp3\" />\n                        <skoash.Audio type=\"voiceOver\" src=\"media/S_8/vo_ChooseTheWords.mp3\" />\n                    </skoash.MediaSequence>\n                    <DropzoneReveal\n                        ref=\"dropzone-reveal\"\n                        assets={[\n                            <skoash.Audio type=\"sfx\" data-ref=\"complete\" src=\"media/S_8/S_8.3.mp3\" />,\n                        ]}\n                        dropzones={[\n                            <skoash.Component answers={['fuel', 'heat', 'air']}>\n                            <skoash.Image className=\"grey-triangle\" src=\"media/S_8/img_8.10a.png\" />\n                            <skoash.Image className=\"color-triangle\" src=\"media/S_8/img_8.10e.png\" />\n                          </skoash.Component>\n                        ]}\n                        dropzoneDraggables={[\n                            <Draggable message=\"air\" />,\n                            <Draggable message=\"clouds\" return/>,\n                            <Draggable message=\"co2\" return/>,\n                            <Draggable message=\"heat\" />,\n                            <Draggable message=\"smoke\" return/>,\n                            <Draggable message=\"fuel\" />,\n                            <Draggable message=\"water\" return/>,\n                        ]}\n                        dropzoneAssets={[\n                            <skoash.Audio\n                                type=\"sfx\"\n                                data-ref=\"incorrect\"\n                                src=\"media/S_8/S_8.1.mp3\"\n                                complete\n                            />,\n                            <skoash.Audio\n                                type=\"sfx\"\n                                data-ref=\"correct\"\n                                src=\"media/S_8/S_8.2.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"sfx\"\n                                data-ref=\"drag\"\n                                src=\"media/S_8/S_8.4.mp3\"\n                            />,\n                        ]}\n                        revealList={[\n                            <skoash.ListItem ref=\"fuel\" correct>\n                                <skoash.Image data-ref=\"fuel\" src=\"media/S_8/img_8.10b.png\" />\n                                <skoash.Image\n                                    className=\"side\"\n                                    data-ref=\"heatSide\"\n                                    src=\"media/S_8/img_8.10g.png\"\n                                />\n                            </skoash.ListItem>,\n                            <skoash.ListItem ref=\"heat\" correct>\n                                <skoash.Image data-ref=\"heat\" src=\"media/S_8/img_8.10c.png\" />\n                                <skoash.Image\n                                    className=\"side\"\n                                    data-ref=\"fuelSide\"\n                                    src=\"media/S_8/img_8.10f.png\"\n                                />\n                            </skoash.ListItem>,\n                            <skoash.ListItem ref=\"air\" correct>\n                                <skoash.Image data-ref=\"air\" src=\"media/S_8/img_8.10d.png\" />\n                                <skoash.Image\n                                    className=\"side\"\n                                    data-ref=\"airSide\"\n                                    src=\"media/S_8/img_8.10h.png\"\n                                />\n                            </skoash.ListItem>,\n                        ]}\n                        revealAssets={[\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"air\"\n                                src=\"media/S_8/vo_Air.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"clouds\"\n                                src=\"media/S_8/vo_Clouds.mp3\"\n                                complete\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"co2\"\n                                src=\"media/S_8/vo_CarbonDioxide.mp3\"\n                                complete\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"heat\"\n                                src=\"media/S_8/vo_Heat.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"smoke\"\n                                src=\"media/S_8/vo_Smoke.mp3\"\n                                complete\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"fuel\"\n                                src=\"media/S_8/vo_Fuel.mp3\"\n                            />,\n                            <skoash.Audio\n                                type=\"voiceOver\"\n                                data-ref=\"water\"\n                                src=\"media/S_8/vo_Water.mp3\"\n                                complete\n                            />,\n                        ]}\n                    />\n                </skoash.Component>\n            </skoash.Component>\n        </TriangleScreenComponent>\n    );\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/triangle_screen.js","import _ from 'lodash';\n\nimport SelectableAudio from 'shared/components/selectable_audio/0.1';\nimport Reveal from 'shared/components/reveal/0.1';\n\nconst REVEAL_MSG = 0;\n\nclass WhoScreenComponent extends skoash.Screen {\n    open(opts) {\n        super.open(opts);\n\n        this.checkComplete = null;\n        this.incomplete();\n        this.refs['selectable-audio'].incompleteRefs();\n        this.checkComplete = super.checkComplete;\n    }\n}\n\nexport default function (props, ref, key) {\n    var revealOpen = _.get(props, 'data.reveal.open', null) !== null ? 'REVEAL-OPEN' : '';\n\n    return (\n        <WhoScreenComponent\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"who\"\n            className={revealOpen}\n            onOpen={() => {\n                skoash.trigger('updateState', {\n                    path: 'reveal',\n                    data: {\n                        open: null,\n                    }\n                });\n            }}\n        >\n            <skoash.Audio ref=\"title\" type=\"voiceOver\" src=\"media/S_6/vo_FireBreaksOut2.mp3\" />\n            <skoash.Image className=\"animated\" src=\"media/S_6/img_6.1.png\" />\n            <SelectableAudio\n                ref=\"selectable-audio\"\n                onComplete={() => {\n                    skoash.trigger('updateState', {\n                        path: 'reveal',\n                        data: {\n                            open: REVEAL_MSG,\n                        }\n                    });\n                }}\n                audioAssets={[\n                    <skoash.Audio type=\"voiceOver\" src=\"media/S_6/vo_Builder.mp3\" complete />,\n                    <skoash.Audio type=\"voiceOver\" src=\"media/S_6/vo_Plumber.mp3\" complete />,\n                    <skoash.Audio type=\"voiceOver\" src=\"media/S_6/vo_Firefighter.mp3\" />,\n                    <skoash.Audio type=\"voiceOver\" src=\"media/S_6/vo_Chef.mp3\" complete />,\n                    <skoash.Audio data-ref=\"correct\" type=\"sfx\" src=\"media/S_6/S_6.2.mp3\" />,\n                    <skoash.Audio data-ref=\"incorrect\" type=\"sfx\" src=\"media/S_6/S_6.3.mp3\" complete />,\n                ]}\n                selectableList={[\n                    <skoash.ListItem className=\"animated\" />,\n                    <skoash.ListItem className=\"animated\" />,\n                    <skoash.ListItem className=\"animated\" correct />,\n                    <skoash.ListItem className=\"animated\" />,\n                ]}\n            />\n            <Reveal\n                ref=\"reveal\"\n                openReveal={_.get(props, 'data.reveal.open', null)}\n                assets={[\n                    <skoash.Audio type=\"voiceOver\" src=\"media/S_6/vo_FirefightingTough.mp3\" />\n                ]}\n                list={[\n                    <skoash.Component className=\"frame\">\n                    <skoash.Image className=\"animated\" src=\"media/S_6/img_6.7.png\" />\n                    <div className=\"animated\">\n                        <skoash.Image className=\"background\" src=\"media/_Frames/FR_2.png\" />\n                        Firefighting is one of the<br />\n                        toughest jobs in the world<br />\n                        and demands total teamwork.\n                    </div>\n                  </skoash.Component>\n                ]}\n            />\n        </WhoScreenComponent>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./fire/components/who_screen.js","var config = {\n    id: 'fire',\n    version: 2,\n    dimensions: {\n        width: 960,\n        ratio: 16 / 9\n    },\n};\n\nexport default config;\n\n\n\n// WEBPACK FOOTER //\n// ./fire/config.game.js","import config from './config.game';\n\nimport Loader from 'shared/components/loader/0.1';\n\nimport iOSScreen from 'shared/components/ios_splash_screen/0.1';\nimport TitleScreen from './components/title_screen';\nimport InfoChemicalScreen from './components/info_chemical_screen';\nimport InfoFuelOxygenScreen from './components/info_fuel_oxygen_screen';\nimport InfoForrestScreen from './components/info_forrest_screen';\nimport AlarmScreen from './components/alarm_screen';\nimport WhoScreen from './components/who_screen';\nimport MenAndWomenScreen from './components/men_and_women_screen';\nimport TriangleScreen from './components/triangle_screen';\nimport BreakTriangleScreen from './components/break_triangle_screen';\nimport LadderScreen from './components/ladder_screen';\nimport ChooseScreen from './components/choose_screen';\nimport NeedScreen from './components/need_screen';\nimport FlipScreen from './components/flip_screen';\n\nimport QuitScreen from 'shared/components/quit_screen/0.1';\n\nimport 'shared/js/test-platform-integration';\n\nclass Fire extends skoash.Game {\n    constructor() {\n        super(config);\n\n        this.screens = {\n            0: iOSScreen,\n            1: TitleScreen,\n            2: InfoChemicalScreen,\n            3: InfoFuelOxygenScreen,\n            4: InfoForrestScreen,\n            5: AlarmScreen,\n            6: WhoScreen,\n            7: MenAndWomenScreen,\n            8: TriangleScreen,\n            9: BreakTriangleScreen,\n            10: LadderScreen,\n            11: ChooseScreen,\n            12: NeedScreen,\n            13: FlipScreen,\n        };\n\n        this.menus = {\n            quit: QuitScreen,\n        };\n\n        this.state.data.screens = _.map(this.screens, () => ({}));\n    }\n\n    renderLoader() {\n        return (\n            <Loader />\n        );\n    }\n\n    getClassNames() {\n        var classNames = super.getClassNames();\n        var index = this.state.currentScreenIndex;\n        if (index >= 4 && index < 5) return classNames + ' BKG-2';\n        if (index >= 5) return classNames + ' BKG-3';\n        return classNames;\n    }\n\n    renderAssets() {\n        return (\n            <div>\n                <skoash.Audio ref=\"bkg-1\" type=\"background\" src=\"media/_BKG/S_BKG_1.mp3\" loop />\n                <skoash.Audio ref=\"button\" type=\"sfx\" src=\"media/_Buttons/S_BU_1.mp3\" />\n                <skoash.Audio ref=\"screen-complete\" type=\"sfx\" src=\"media/_Buttons/S_BU_2.mp3\" />\n                <div className=\"background BKG-2\" />\n                <div className=\"background BKG-3\" />\n            </div>\n        );\n    }\n\n}\n\nskoash.start(Fire, config.id);\n\nimport 'shared/js/google-analytics';\n\n\n\n// WEBPACK FOOTER //\n// ./fire/index.js","import Particle from 'shared/components/particle/0.1';\n\nclass CursorCanvas extends skoash.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            cursorX: 0,\n            cursorY: 0,\n            particles: [],\n            updateCanvas: null,\n        };\n    }\n\n    bootstrap() {\n        var context;\n        var image;\n        var updateCanvas;\n\n        super.bootstrap();\n\n        if (this.refs.canvas && this.refs.particle) {\n            context = this.refs.canvas.getContext('2d');\n            image = ReactDOM.findDOMNode(this.refs.particle);\n            updateCanvas = window.setInterval(\n                this.draw.bind(this, context, image),\n                this.props.interval\n            );\n\n            this.setState({\n                updateCanvas,\n            });\n        }\n\n        window.addEventListener('mousemove', this.moveCursor.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.state.updateCanvas);\n\n        window.removeEventListener('mousemove', this.moveCursor);\n    }\n\n    moveCursor(e) {\n        var scale = skoash.trigger('getState').scale;\n        this.setState({\n            cursorX: e.clientX / scale,\n            cursorY: e.clientY / scale,\n        });\n    }\n\n    draw(context, image) {\n        var p;\n        var particle;\n        var particles;\n        var gameWidth;\n        var gameHeight;\n        var scale;\n\n        if (typeof this.props.particle === 'function') {\n            p = this.props.particle();\n        } else {\n            p = this.props.particle;\n        }\n\n        particle = new Particle({\n            x: this.state.cursorX,\n            y: this.state.cursorY,\n            velocityY: p.velocityY,\n            velocityX: p.velocityX,\n            size: p.size,\n            alpha: p.alpha,\n        });\n        particles = this.state.particles;\n        particles.push(particle);\n\n        scale = skoash.trigger('getState').scale;\n        gameWidth = window.innerWidth / scale;\n        gameHeight = window.innerHeight / scale;\n\n        while (particles.length > this.props.particle.amount) particles.shift();\n\n        context.globalAlpha = 1;\n        context.clearRect(0, 0, gameWidth, gameHeight);\n\n        for (let i = 0; i < particles.length; i++) {\n            particles[i].update(context, image, p.delta);\n        }\n        this.setState({ particles });\n    }\n\n    render() {\n        return (\n            <div className=\"cursor\">\n                <skoash.Image ref=\"particle\" id=\"particle\" src={this.props.src} hidden />\n                <canvas ref=\"canvas\" id=\"canvas\" width=\"960\" height=\"540\" />\n            </div>\n        );\n    }\n}\n\nCursorCanvas.defaultProps = _.defaults({\n    interval: 1000 / 60,\n    particle: {\n        amount: 500,\n        velocityY: -1,\n        velocityX: 0,\n        size: 1,\n        alpha: 1,\n        delta: {\n            vy: 1,\n            vx: 1,\n            alpha: 0.97,\n            size: 0.02,\n        },\n    }\n}, skoash.Component.defaultProps);\n\nexport default CursorCanvas;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/cursor_canvas/0.1.js","import _ from 'lodash';\nimport classNames from 'classnames';\n\nimport Draggable from '../draggable/0.1.js';\n\nclass Dropzone extends skoash.Component {\n    constructor() {\n        super();\n\n        this.dropzones = [\n            <skoash.Component answers=\"drag\" />\n        ];\n\n        this.draggables = [\n            <Draggable message={'drag'}>drag me!</Draggable>,\n            <Draggable message={'return'} return={true} >return</Draggable>\n        ];\n\n        this.moreDraggables = [];\n\n        this.contains = [];\n\n        this.dropRespond = this.dropRespond.bind(this);\n        this.dragRespond = this.dragRespond.bind(this);\n\n        this.state = {\n            dropped: [],\n        };\n    }\n\n    bootstrap() {\n        var answerRefs = [];\n        var self = this;\n\n        super.bootstrap();\n\n        this.props.dropzones.forEach(item => {\n            if (item.props.answers) {\n                answerRefs = answerRefs.concat(item.props.answers.map(answer => { return '' + answer; }));\n            }\n        });\n\n        if (answerRefs.length > 0) {\n            self.requireForComplete.forEach(item => {\n                if (answerRefs.indexOf(item) === -1) self.refs[item].complete();\n            });\n        }\n\n        this.answerRefs = answerRefs;\n    }\n\n    incomplete() {\n        this.setState({\n            dropped: [],\n        });\n\n        super.incomplete();\n\n        if (this.answerRefs.length > 0) {\n            this.requireForComplete.forEach(item => {\n                if (this.answerRefs.indexOf(item) === -1) this.refs[item].complete();\n            });\n        }\n    }\n\n    prepareDropzones() {\n        var self = this;\n\n        this.props.dropzones.map((dropzone, key) => {\n            var dropzoneRef = this.refs[`dropzone-${key}`];\n            var dropzoneDOM = ReactDOM.findDOMNode(dropzoneRef);\n            if (dropzoneDOM) {\n                dropzoneRef.corners = self.getCorners(dropzoneDOM);\n            }\n        });\n    }\n\n    getCorners(el) {\n        var top;\n        var left;\n        var width;\n        var height;\n        var corners = [];\n\n        left = 0;\n        top = 0;\n        width = el.offsetWidth;\n        height = el.offsetHeight;\n\n        while (el) {\n            if (el.className && el.className.indexOf('screen') !== -1) {\n                break;\n            }\n\n            left += el.offsetLeft || 0;\n            top += el.offsetTop || 0;\n            el = el.offsetParent;\n        }\n\n        for (let i = 0; i < 4; i++) {\n            corners.push({\n                x: left + width * (i === 1 || i === 2 ? 1 : 0),\n                y: top + height * (i > 1 ? 1 : 0),\n            });\n        }\n\n        return corners;\n    }\n\n    componentWillMount() {\n        this.dropzones = this.props.dropzones || this.dropzones;\n        this.draggables = this.props.draggables || this.draggables;\n        this.moreDraggables = this.props.moreDraggables || this.moreDraggables;\n    }\n\n    start() {\n        super.start();\n        this.prepareDropzones();\n    }\n\n    dragRespond(message) {\n        this.playMedia('drag');\n\n        if (typeof this.props.dragRespond === 'function') {\n            this.props.dragRespond.call(this, message);\n        }\n    }\n\n    dropRespond(message, corners) {\n        var self = this;\n        var isInBounds;\n\n        isInBounds = self.props.dropzones.some((dropzone, key) => {\n            var dropzoneRef = self.refs[`dropzone-${key}`];\n            if (skoash.util.doIntersect(corners, dropzoneRef.corners)) {\n                self.inBounds(message, key);\n                return true;\n            }\n            return false;\n        });\n\n        if (!isInBounds) self.outOfBounds(message);\n    }\n\n    inBounds(message, dropzoneKey) {\n        var dropzoneRef = this.refs[`dropzone-${dropzoneKey}`];\n        if (!dropzoneRef.props.answers || dropzoneRef.props.answers.indexOf(message) !== -1) {\n            this.correct(message, dropzoneKey);\n        } else {\n            this.incorrect(message);\n        }\n        this.refs[message].complete();\n    }\n\n    outOfBounds(message) {\n    // respond to out of bounds drop\n        this.refs[message].returnToStart();\n\n        this.playMedia('out');\n    }\n\n    correct(message, dropzoneKey) {\n    // respond to correct drop\n\n        var dropped = this.state.dropped;\n        dropped = dropped.concat('dropped-' + message);\n        this.setState({\n            dropped,\n        });\n\n        this.playMedia('correct');\n\n        this.refs[message].markCorrect();\n\n        if (typeof this.props.correctRespond === 'function') {\n            this.props.correctRespond.call(this, message, dropzoneKey);\n        }\n    }\n\n    incorrect(message) {\n    // respond to incorrect drop\n        this.playMedia('incorrect');\n\n        if (typeof this.props.incorrectRespond === 'function') {\n            this.props.incorrectRespond.call(this, message);\n        }\n    }\n\n    renderAssets() {\n        if (this.props.assets) {\n            return this.props.assets.map((asset, key) =>\n                <skoash.Audio\n                    {...asset.props}\n                    ref={asset.props['data-ref'] || ('asset-' + key)}\n                    key={key}\n                    data-ref={key}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderDropzones() {\n        return this.props.dropzones.map((component, key) =>\n            <component.type\n                {...component.props}\n                className={this.getClass()}\n                ref={`dropzone-${key}`}\n                key={key}\n                checkComplete={false}\n            />\n        );\n    }\n\n    renderDraggables(draggables) {\n        return this.props[draggables].map((item, key) => {\n            var message = item.props.message || key;\n            return (\n                <li key={key} className={this.getDraggableClass(message)}>\n                    <Draggable\n                        {...item.props}\n                        ref={message}\n                        message={message}\n                        key={key}\n                        dragRespond={this.dragRespond}\n                        dropRespond={this.dropRespond}\n                        checkComplete={false}\n                    />\n                </li>\n            );\n        });\n    }\n\n    getDraggableClass(message) {\n        var classes = '';\n        if (this.state.dropped.indexOf(message) !== -1) {\n            classes += 'DROPPED';\n        }\n        return classes;\n    }\n\n    getClass() {\n        return classNames(\n      'dropzone',\n      this.state.dropped,\n    );\n    }\n\n    renderMoreDraggables() {\n        return this.moreDraggables.map((item, key) =>\n      <li key={key}>\n        <Draggable\n          {...item.props}\n          dragRespond={this.dragRespond}\n          dropRespond={this.dropRespond}\n        />\n      </li>\n    );\n    }\n\n    getClassNames() {\n        return classNames(\n      'dropzone-container',\n      super.getClassNames(),\n    );\n    }\n\n    render() {\n        var draggablesLeft;\n        var draggablesRight;\n        var left;\n\n        left = this.props.draggablesLeft ? 'draggablesLeft' : 'draggables';\n        if (this.props[left]) {\n            draggablesLeft = (\n        <ul>\n          {this.renderDraggables(left)}\n        </ul>\n      );\n        }\n        if (this.props.draggablesRight) {\n            draggablesRight = (\n        <ul>\n          {this.renderDraggables('draggablesRight')}\n        </ul>\n      );\n        }\n        return (\n            <div className={this.getClassNames()}>\n                {this.renderAssets()}\n                {draggablesLeft}\n                {this.renderDropzones()}\n                {draggablesRight}\n            </div>\n        );\n    }\n}\n\nexport default Dropzone;\n\n\nDropzone.defaultProps = _.defaults({\n    dropzones: [\n        <skoash.Component answers=\"drag\" />\n    ],\n    draggables: [\n        <Draggable message={'drag'}>drag me!</Draggable>,\n        <Draggable message={'return'} return={true} >return</Draggable>\n    ],\n}, skoash.Component.defaultProps);\n\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/dropzone/0.1.js","export default function (props, ref, key) {\n    return (\n        <skoash.Screen\n            {...props}\n            ref={ref}\n            key={key}\n            id=\"ios-splash\"\n            checkComplete={false}\n            completeDelay={6000}\n            nextDelay={3000}\n            completeOnStart\n            hidePrev\n        >\n            <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball.png\" />\n            <skoash.Image className=\"hidden\" src=\"../shared/images/ios_start_ball_anim.gif\" />\n        </skoash.Screen>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/ios_splash_screen/0.1.js","class Loader extends skoash.Component {\n    render() {\n        return (\n            <div id=\"loader\" className=\"center\">\n                <div className=\"group\">\n                    <h2>Loading!</h2>\n                    <div className=\"spinner animated\">\n                        <div className=\"spinner animated\">\n                            <div className=\"spinner animated\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/loader/0.1.js","// As of skoash 1.1.0 this component can be found at skoash.MediaCollection\n/* eslint-disable no-console */\nconsole.warn('As of skoash 1.1.0 this component can be found at skoash.MediaCollection');\n/* eslint-enable no-console */\n\nclass MediaCollection extends skoash.Component {\n    play(ref) {\n        if (this.refs[ref]) {\n            this.refs[ref].play();\n            this.props.onPlay.call(this, ref);\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        super.componentWillReceiveProps(props);\n\n        if (props.play && props.play !== this.props.play) {\n            this.play(props.play);\n        }\n    }\n}\n\nMediaCollection.defaultProps = _.defaults({\n    onPlay: _.noop,\n}, skoash.Component.defaultProps);\n\nexport default MediaCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/media_collection/0.1.js","class Particle {\n    constructor(particle) {\n        this.x = particle.x;\n        this.y = particle.y;\n        this.velocityY = particle.velocityY;\n        this.velocityX = particle.velocityX;\n        this.size = particle.size;\n        this.alpha = particle.alpha;\n    }\n\n    update(context, image, delta) {\n        this.y += this.velocityY;\n        this.x += this.velocityX;\n        this.velocityY *= delta.vy;\n        this.velocityX *= delta.vx;\n        if (this.alpha < 0) this.alpha = 0;\n        context.globalAlpha = this.alpha;\n        context.save();\n        context.translate(this.x, this.y);\n        context.scale(this.size, this.size);\n        context.drawImage(image, -image.width / 2, -image.height / 2);\n        context.restore();\n        this.alpha *= delta.alpha;\n        this.size += delta.size;\n    }\n}\n\nexport default Particle;\n\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/particle/0.1.js","class QuitScreen extends skoash.Screen {\n    okay() {\n        skoash.trigger('quit');\n    }\n\n    cancel() {\n        this.close();\n        skoash.trigger('menuClose', {\n            id: this.props.id,\n        });\n    }\n\n    renderAssets() {\n        if (this.props.assets) {\n            return this.props.assets.map((asset, key) => {\n                return (\n                    <skoash.Audio\n                        {...asset.props}\n                        ref={asset.ref || asset.props['data-ref'] || ('asset-' + key)}\n                        key={key}\n                        data-ref={key}\n                    />\n                );\n            });\n        }\n\n        return null;\n    }\n\n    render() {\n        return (\n            <div id={this.props.id} className={'screen ' + this.getClassNames()}>\n                {this.renderAssets()}\n                <div className=\"center\">\n                    <div className=\"frame\">\n                        <h2>Are you sure you<br/>want to quit?</h2>\n                        <h3>Your game progress will be saved</h3>\n                        <button className=\"quit-yes\" onClick={this.okay.bind(this)}></button>\n                        <button className=\"quit-no\" onClick={this.cancel.bind(this)}></button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default (\n    <QuitScreen\n        id=\"quit\"\n    />\n);\n\n\n\n// WEBPACK FOOTER //\n// ./shared/components/quit_screen/0.1.js","(function (i, s, o, g, r, a, m){ i.GoogleAnalyticsObject = r;i[r] = i[r] || function (){\n    (i[r].q = i[r].q || []).push(arguments); }, i[r].l = 1 * new Date();a = s.createElement(o),\nm = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);\n})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\nga('create', 'UA-26000499-1', 'auto');\nga('send', 'pageview');\n\n\n\n// WEBPACK FOOTER //\n// ./shared/js/google-analytics.js","window.ENVIRONMENT = {\n    MEDIA: 'https://media.changemyworldnow.com/f/'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./shared/js/prod-variables.js","(function test() {\n    if (window.parent === window) {\n        window.location.href = 'https://www.changemyworldnow.com/';\n    } else {\n        document.domain = 'changemyworldnow.com';\n    }\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./shared/js/test-platform-integration.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 33\n// module chunks = 0"],"sourceRoot":""}